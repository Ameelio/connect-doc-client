{"version":3,"sources":["assets/logo.svg","redux/modules/staff.ts","redux/modules/inmate.ts","styles/styles.tsx","utils/Call.ts","utils/Common.ts","api/Common.ts","utils/UI.ts","redux/modules/connections.ts","redux/modules/contact.ts","redux/helpers.ts","redux/modules/call.ts","redux/modules/facility.ts","redux/modules/node.ts","redux/modules/kiosk.ts","redux/selectors.ts","pages/LiveCall/RoomClient.js","pages/LiveCall/VideoOverlay.tsx","pages/LiveCall/VideoChat.tsx","pages/LiveCall/VideoSkeleton.tsx","components/Header/Header.tsx","pages/LiveCall/index.tsx","components/calendar/CalendarView.tsx","pages/Calendar/index.tsx","pages/ConnectionRequests/index.tsx","pages/CallLogs/CallFilters.tsx","pages/CallLogs/index.tsx","pages/Staff/CreateStaffForm.tsx","pages/Staff/index.tsx","components/editable-table/EditableCell.tsx","components/editable-table/EditableTable.tsx","pages/Inmates/index.tsx","pages/Inmate/index.tsx","components/charts/LineChart.tsx","components/charts/DonutChart.tsx","components/pdf/Header.tsx","components/pdf/SectionHeader.tsx","pages/Dashboard/DailyReportCall.tsx","pages/Dashboard/DailyReport.tsx","pages/Dashboard/PDFDownloadButton.tsx","pages/Dashboard/MetricCard.tsx","pages/Dashboard/index.tsx","pages/Settings/index.tsx","pages/Recording/MessageDisplay.tsx","pages/Recording/index.tsx","utils/constants.ts","redux/modules/session.ts","redux/index.ts","redux/modules/socket.ts","api/Session.ts","pages/Login/index.tsx","components/hocs/ProtectedRoute.tsx","components/Menu/Menu.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","className","d","points","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref","svgRef","title","props","id","viewBox","ref","ForwardRef","forwardRef","staffAdapter","createEntityAdapter","fetchStaff","createAsyncThunk","a","fetchAuthenticated","body","status","data","staff","admins","map","admin","camelcaseKeys","updateStaff","args","method","JSON","stringify","user_id","userId","permissions","Error","changes","createStaff","email","role","initialState","getInitialState","loading","staffSlice","createSlice","name","reducers","staffSetAll","setAll","staffUpdateOne","updateOne","extraReducers","builder","addCase","fulfilled","state","action","addMany","payload","rejected","error","message","addOne","fetchInmates","actions","inmates","inmate","updateInmate","inmate_number","inmateNumber","first_name","firstName","last_name","lastName","location","inmateId","inmatesAdapter","inmatesSlice","inmatesAddMany","inmatesUpdate","console","log","WRAPPER_STYLE","padding","CONTAINER_BORDER_RADIUS","borderRadius","FULL_WIDTH","width","BASE_CHART_COLORS","WHITE_BACKGROUND_LAYOUT","backgroundColor","callSlotToDateString","time","date","Date","setHours","start","hour","setMinutes","minute","toString","calcEndCallSlot","addMilliseconds","duration","mondayMorning","day","getDay","setDate","getDate","callsWithinPeriod","calls","end","filter","scheduledEndTime","callsToday","morning","evening","genFullName","entity","cloneObject","obj","parse","onlyUnique","value","index","self","createCallOptionsParam","filters","options","approved","limit","offset","firstLive","push","startDate","endDate","minDuration","maxDuration","query","x","encodeURIComponent","join","toQueryString","generateBgColor","label","BACKGROUND_COLORS","Math","abs","str","hash","charCodeAt","hashCode","notEmpty","undefined","openNotificationWithIcon","description","type","notification","showToast","content","success","warning","info","updateConnection","connection_id","connectionId","fetchConnections","connections","connection","connectionsAdapter","connectionsSlice","connectionsAddOne","connectionsAddMany","connectionsUpdate","UI","fetchContacts","contacts","users","contact","contactsAdapter","contactsSlice","contactsAddMany","cleanCall","scheduledStartTime","startTime","first_live","endTime","last_live","kioskId","kiosk_id","videoReady","video_ready","rating","requesterId","requester_id","inmate_id","callsAdapter","fetchCalls","visitations","fetchRecording","callId","recordingUrl","url","messages","callsSlice","callsAddMany","callsSetAll","upsertMany","facilitiesAdapter","selectActiveFacility","facility","nodeId","bodyCt","callTimes","call_times","fetchFacilities","Store","getState","session","user","fBody","facilities","dispatch","updateCallTimes","callSlots","zone","facilitiesSlice","setSelected","selected","pending","fetchNodes","nodes","subnodes","nodesAdapter","nodesSlice","_state","_action","kiosksAdapter","fetchKiosks","kiosks","kiosksSlice","getSelectors","selectConnectionById","selectById","selectAllConnections","selectAll","selectInmateById","selectAllInmates","selectTotalInmates","selectTotal","selectContactById","selectCallById","selectAllCalls","selectAllStaff","selectAllFacilities","selectAllNodes","selectKioskById","getConnectionEntities","selectConnectionRequests","selectAllConnectionInfo","requests","request","getCallEntities","kiosk","detailedConnection","getCallsInfo","visitation","getCallInfo","plainCall","selectLiveCalls","selectInmateConnectionsById","selectInmateCallsById","MEDIA_TYPE","window","rc","consumers","producers","config","video","min","ideal","height","encodings","rid","maxBitrate","scalabilityMode","codecOptions","videoGoogleStartBitrate","RoomClient","mediasoupClient","socket","producerTransport","consumerTransport","device","handlers","consume","Promise","resolve","reject","emit","response","transport","on","callback","errback","dtlsParameters","transportId","producerTransportInfo","consumerTransportInfo","routerRtpCapabilities","loadDevice","createSendTransport","handleTransportConnect","createRecvTransport","rtpCapabilities","kind","rtpParameters","producerId","consumer","stream","consumerId","forEach","f","deviceId","audio","mediaConstraints","getMediaConstraints","navigator","mediaDevices","getUserMedia","track","getAudioTracks","getVideoTracks","params","produce","producer","Device","load","MediaStream","addTrack","event","fn","SubMenu","Menu","VideoOverlay","alerts","terminateCall","lockCall","muteCall","unmuteCall","isAudioOn","emitAlert","useState","selectedAlert","setSelectedAlert","menu","icon","MessageFilled","alert","Item","onClick","LockFilled","SettingFilled","AudioMutedOutlined","AudioOutlined","overlay","MoreOutlined","visible","onOk","onCancel","Loader","tip","VideoChat","React","memo","token","useSelector","setLoading","isAuthed","setIsAuthed","setRc","joinRoom","useCallback","init","participants","contents","recipients","useEffect","connected","Debug","measuredRef","node","document","style","srcObject","autoplay","appendChild","muted","getElementById","interval","setInterval","clearInterval","position","bottom","right","fontSize","color","terminate","VideoSkeleton","Ribbon","text","HEADER_STYLE","boxShadow","marginBottom","paddingLeft","paddingRight","display","alignItems","lineHeight","Header","subtitle","extra","paddingTop","paddingBottom","direction","Title","level","Text","border","gutter","item","idx","Content","Layout","connector","connect","bindActionCreators","setSocket","visibleCalls","setVisibleCalls","grid","setGrid","frameVhHeight","setFrameVhHeight","consumeAudioRecord","setConsumeAudioRecord","now","getTime","io","process","REACT_APP_MEDIASOUP_HOSTNAME","slice","handleVideoTermination","defaultCurrent","defaultPageSize","onChange","page","_","startIdx","endIdx","pageSize","pageSizeOptions","e","total","showSizeChanger","onShowSizeChange","GRID_TO_VH_HEIGHT","handleGridChange","Array","from","span","GRID_TO_SPAN_WIDTH","CALL_ALERTS","omit","find","CalendarView","events","setEvents","VisitationToEventInput","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","headerToolbar","left","center","initialView","editable","selectable","selectMirror","dayMaxEvents","weekends","businessHours","eventContent","timeText","eventClick","clickInfo","confirm","remove","themeSystem","Column","Table","mapDispatchToProps","dataSource","dataIndex","render","src","profileImgPath","shape","size","xs","sm","md","lg","xl","xxl","relationship","_text","handleAccept","danger","handleDecline","RangePicker","DatePicker","CallFiltersHeader","setDuration","setStartDate","setEndDate","DURATION_FILTERS","Infinity","DurationFilters","align","unix","trigger","preventDefault","DownOutlined","logs","history","router","LABEL_TO_FILTER_MAP","inmateName","contactId","contactName","kioskName","filteredLogs","setFilteredLogs","searchQuery","setSearchQuery","global","setGlobal","setMaxDuration","activeSearchFilter","setActiveSearchFilter","delayedQuery","debounce","cancel","then","tempLogs","includes","Group","compact","defaultValue","onSelect","Option","Search","placeholder","allowClear","onSearch","format","EyeOutlined","Select","CreateStaffForm","Form","useForm","form","rules","required","prefix","SendOutlined","STAFF_PERMISSION_OPTIONS","defaultChecked","checked","permission","modalType","setModalType","confirmLoading","setConfirmLoading","formData","setFormData","allowRead","allowCalltimes","allowApproval","allowRestructure","allowMonitor","selectedPermissions","setSelectedPermissions","handleOk","UserAddOutlined","img","record","update","EditableCell","children","editing","inputType","restProps","inputNode","margin","EditableTable","originalData","columns","onSave","onViewItem","setData","editingId","setEditingId","isEditing","save","validateFields","row","newData","findIndex","splice","mergedColumns","concat","Link","onConfirm","disabled","setFieldsValue","edit","col","onCell","component","components","cell","bordered","pagination","ownProps","parseInt","match","renderItem","timestamp","dot","ClockCircleOutlined","routes","path","breadcrumbName","ghost","onBack","back","subTitle","breadcrumb","column","dob","race","sentence","sentnceLength","quota","justify","flex","mode","COLOR","LineChart","labels","chartData","datasets","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","DonutChart","hoverBackgroundColor","styles","StyleSheet","create","container","flexDirection","borderBottomWidth","borderBottomColor","borderBottomStyle","extraColumn","flexGrow","alignSelf","detailColumn","textTransform","fontWeight","fontStyle","SectionHeader","justifyContent","marginVertical","header","textDecoration","DailyReportCall","block","canViewDetails","DailyReport","callBlocks","author","keywords","PDFDownloadButton","hasMounted","setHasMounted","setTimeout","groupBy","fileName","DownloadOutlined","MetricCard","suffix","numInmates","ratingsCount","setRatingsCount","callVolume","setCallVolume","groups","sortedKeys","sort","thisMonday","curr","startOfMonth","next","addWeeks","callsToWeeklyData","values","StarOutlined","VideoCameraOutlined","toFixed","GlobalOutlined","TabPane","Tabs","TimePicker","ranges","setRanges","activeTab","setActiveTab","setCallSlots","sorted","WEEKDAYS","weekday","ct1","ct2","times","timeRanges","first","DEFAULT_DURATION_MS","mapCallSlotsToTimeBlock","r","rangeList","reduce","prev","range","iterator","getHours","getMinutes","mapCallBlockToCallSlots","defaultActiveKey","tab","minuteStep","use12Hours","moment","toDate","treeData","defaultExpandAll","draggable","MessageDisplay","strong","getDisplayName","Sider","CardType","CardSize","LoadingTypes","chatCollapsed","setChatCollapsed","setRecordingUrl","setMessages","controls","download","href","InfoCircleOutlined","theme","maxHeight","collapsible","collapsed","onCollapse","overflowY","WeekdayMap","ROUTES","CalendarPage","RequestsPage","LogsPage","StaffPage","InmatesPage","InmateDetailPage","LiveVisitationsPage","SettingsPage","RecordingPage","DashboardPage","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","1","2","4","6","8","setSession","setSessiooStatus","remember","redirectUrl","sessionReducer","sessionStorage","removeItem","socketsSlice","createBrowserHistory","rootReducer","combineReducers","reducer","connectRouter","sockets","configureStore","middleware","getDefaultMiddleware","routerMiddleware","API_URL","REACT_APP_BASE_URL","fetchTimeout","fetchUrl","timeout","fetch","nodeResource","requestOptions","headers","Accept","Authorization","json","initializeSession","localStorage","setItem","loginWithToken","getItem","loginWithCredentials","cred","password","to","onFinish","initialValues","onFinishFailed","_errorInfo","UserOutlined","Password","LockOutlined","valuePropName","htmlType","ProtectedRoute","redirectPath","isAuthenticated","authenticationPath","pathname","AntdMenu","FacilityAvatar","split","n","isLoggedIn","select","logout","requestsCount","liveCallsCount","setCollapsed","useHistory","headerMenu","defaultSelectedKeys","PieChartOutlined","DesktopOutlined","count","TeamOutlined","SettingOutlined","setRedirectUrl","setIsAuthenticated","isInitingData","setIsInitingData","defaultProtectedRouteProps","allSettled","endOfMonth","minHeight","exact","Login","route","Boolean","hostname","ReactDOM","StrictMode","store","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ec1e9ad2.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1,.cls-2{fill:#0073eb;stroke:#fff;stroke-miterlimit:10;stroke-width:3px;}.cls-2{opacity:0.7;}.cls-3{fill:#1a1a1a;}\"));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M111.83,48.88h0l-8.38,20.22L98.27,81.58l0,0v.08L91.48,98h0L90,101.55h0l-2.9,7-.6-2.23-.64-2.43-4-15.27L71,47.66l-1.6-6.1L63.79,20.1Z\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"cls-2\",\n  points: \"87.09 108.56 85.99 107.12 84.4 105.05 77.65 96.2 71.96 88.74 50.31 60.32 41.21 48.39 71.04 47.66 81.83 88.63 85.85 103.9 86.49 106.33 87.09 108.56\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"cls-1\",\n  points: \"67.95 154.72 59.71 174.61 29.58 171.5 58.55 149.76 64.48 145.32 75.17 137.31 67.96 154.69 67.95 154.72\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M134.41,137.69h0L81.75,151.16l-2.83.73-11,2.8,7.21-17.38h0l2.27-5.48h0l9.54-23,.1-.23h0l2.9-7h0L91.47,98h0l6.75-16.29h0l0-.09,5.17-12.47,8.38-20.22h0l4,15.53,4.51,17.78,4.95,19.43,3,11.89h0Z\"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"cls-1\",\n  points: \"161.52 72.3 156.34 84.79 151.4 96.73 147.81 105.36 146.74 107.93 146.74 107.94 134.41 137.69 128.27 113.52 128.26 113.52 125.24 101.63 120.29 82.2 120.3 82.19 121.87 81.82 141.5 77.1 160.2 72.62 161.52 72.3\"\n});\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"cls-2\",\n  points: \"187.8 89.91 179.44 91.47 170.42 93.17 170.41 93.16 151.4 96.73 156.34 84.79 161.52 72.3 162.14 72.71 187.8 89.91\"\n});\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-3\",\n  d: \"M234.77,211.91h-17.2L209.18,190H163l-8.4,21.88H137.37l38.93-98.23h19.54Zm-66-36.73H203.4l-17.33-45.27Z\"\n});\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-3\",\n  d: \"M259.67,211.91H245V161.28h-5.64V148.07h11.83l6.19,6.2c5.5-4.54,12.24-7.43,18.57-7.43a20.61,20.61,0,0,1,17.34,8.66,31.53,31.53,0,0,1,21-8.66c11.7,0,22.43,8,22.43,26.55v38.52H322V173.39c0-8.39-4.54-12.93-11.28-12.93-7.57,0-12.52,4.54-12.52,10.59v40.86H283.61V173.39c0-8.39-4.68-12.93-11.29-12.93-7.42,0-12.65,4.4-12.65,10.18Z\"\n});\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-3\",\n  d: \"M393.53,190.72l12.1,6.61c-4.95,8.39-14.17,16.09-26.82,16.09-18.3,0-31.37-15.41-31.37-33.29s13.07-33.57,31.23-33.57,29.44,15.27,30,31.92l-5.5,5.36H362.3c.82,9.5,8.11,15.82,16.51,15.82C384.58,199.66,390.36,196,393.53,190.72ZM363,172.15h30.95c-1-7.15-7.43-12.52-15.27-12.52A15.72,15.72,0,0,0,363,172.15Z\"\n});\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-3\",\n  d: \"M461.76,190.72l12.11,6.61c-4.95,8.39-14.17,16.09-26.83,16.09-18.3,0-31.37-15.41-31.37-33.29s13.07-33.57,31.23-33.57,29.44,15.27,30,31.92l-5.5,5.36H430.53c.83,9.5,8.12,15.82,16.51,15.82C452.82,199.66,458.6,196,461.76,190.72Zm-30.54-18.57h30.95c-1-7.15-7.42-12.52-15.27-12.52A15.72,15.72,0,0,0,431.22,172.15Z\"\n});\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-3\",\n  d: \"M489.41,113.68l4.82-5h10.18V197.6h5.64v14.31H495.6l-6.19-6.33Z\"\n});\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-3\",\n  d: \"M540.73,211.91H526V161.28h-5.5V148.07h15l5.23,5.23ZM532,112a10.49,10.49,0,0,1,10.39,10.39A10.37,10.37,0,0,1,532,132.67a10.25,10.25,0,0,1-10.25-10.26A10.37,10.37,0,0,1,532,112Z\"\n});\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-3\",\n  d: \"M620,180a33.36,33.36,0,1,1-33.29-33.29A33.35,33.35,0,0,1,620,180Zm-15,0c0-10.32-7.71-19.12-18.3-19.12s-18.44,8.8-18.44,19.12,7.85,19.26,18.44,19.26S605,190.31,605,180Z\"\n});\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Golden_Grid\",\n    \"data-name\": \"Golden Grid\",\n    viewBox: \"0 0 666.85 257.93\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.dfd0363d.svg\";\nexport { ForwardRef as ReactComponent };","import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n  EntityState,\n} from \"@reduxjs/toolkit\";\nimport { fetchAuthenticated } from \"src/api/Common\";\nimport camelcaseKeys from \"camelcase-keys\";\n\nexport const staffAdapter = createEntityAdapter<Staff>();\n\nexport const fetchStaff = createAsyncThunk(\"staff/fetchStaff\", async () => {\n  const body = await fetchAuthenticated(`/admins`);\n\n  if (body.status !== 200 || !body.data) {\n    throw body;\n  }\n\n  const staff = ((body.data as Record<string, unknown>)\n    .admins as Object[]).map((admin) => camelcaseKeys(admin)) as Staff[];\n\n  return staff;\n});\n\nexport const updateStaff = createAsyncThunk(\n  \"staff/updateStaff\",\n  async (args: { userId: number; permissions: Permission[] }) => {\n    const body = await fetchAuthenticated(\"/admin\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        user_id: args.userId,\n        permissions: args.permissions,\n      }),\n    });\n\n    if (body.status !== 200)\n      throw new Error(\"Failed to update staff member information\");\n\n    //TODO update this with API return when it's actually supported\n    // const staff = camelcaseKeys((body.data as Record<string, unknown>)\n    // .admin as Object) as Staff;;\n\n    return { userId: args.userId, changes: { permissions: args.permissions } };\n  }\n);\n\nexport const createStaff = createAsyncThunk(\n  \"staff/createStaff\",\n  async (args: { email: string; role: string; permissions: Permission[] }) => {\n    const body = await fetchAuthenticated(`/admin`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: args.email,\n        role: args.role,\n        permissions: args.permissions,\n      }),\n    });\n\n    //TODO update this with API return when it's actually supported\n    const staff = camelcaseKeys(\n      (body.data as Record<string, unknown>).staff as Object\n    ) as Staff;\n\n    return staff;\n  }\n);\ninterface StaffState extends EntityState<Staff> {\n  error?: string;\n}\n\nconst initialState: StaffState = staffAdapter.getInitialState({\n  loading: false,\n});\n\nexport const staffSlice = createSlice({\n  name: \"staff\",\n  initialState: initialState,\n  reducers: {\n    staffSetAll: staffAdapter.setAll,\n    staffUpdateOne: staffAdapter.updateOne,\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchStaff.fulfilled, (state, action) =>\n      staffAdapter.addMany(state, action.payload)\n    );\n    builder.addCase(fetchStaff.rejected, (state, action) => ({\n      ...state,\n      error: action.error.message,\n    }));\n    builder.addCase(updateStaff.fulfilled, (state, action) =>\n      staffAdapter.updateOne(state, {\n        id: action.payload.userId,\n        changes: action.payload.changes,\n      })\n    );\n    builder.addCase(updateStaff.rejected, (state, action) => ({\n      ...state,\n      error: action.error.message,\n    }));\n    builder.addCase(createStaff.fulfilled, (state, action) =>\n      staffAdapter.addOne(state, action.payload)\n    );\n    builder.addCase(createStaff.rejected, (state, action) => ({\n      ...state,\n      error: action.error.message,\n    }));\n  },\n});\n\nexport const staffActions = staffSlice.actions;\n","import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n} from \"@reduxjs/toolkit\";\nimport { fetchAuthenticated } from \"src/api/Common\";\nimport camelcaseKeys from \"camelcase-keys\";\n\nexport const fetchInmates = createAsyncThunk(\n  \"inmate/fetchInmates\",\n  async () => {\n    const body = await fetchAuthenticated(`/inmates`, {}, false);\n\n    if (body.status !== 200 || !body.data) {\n      throw body;\n    }\n\n    const inmates = ((body.data as Record<string, unknown>)\n      .inmates as Object[]).map((inmate) => camelcaseKeys(inmate)) as Inmate[];\n\n    return inmates;\n  }\n);\n\nexport const updateInmate = createAsyncThunk(\n  \"inmate/updateInmate\",\n  async (inmate: Inmate) => {\n    await fetchAuthenticated(\n      `/inmate/${inmate.id}`,\n      {\n        method: \"PUT\",\n        body: JSON.stringify({\n          inmate_number: inmate.inmateNumber,\n          first_name: inmate.firstName,\n          last_name: inmate.lastName,\n          location: inmate.location,\n        }),\n      },\n      false\n    );\n\n    return {\n      inmateId: inmate.id,\n      changes: {\n        inmateNumber: inmate.inmateNumber,\n        firstName: inmate.firstName,\n        lastName: inmate.lastName,\n        location: inmate.location,\n      },\n    };\n  }\n);\n\nexport const inmatesAdapter = createEntityAdapter<Inmate>();\n\nexport const inmatesSlice = createSlice({\n  name: \"inmates\",\n  initialState: inmatesAdapter.getInitialState(),\n  reducers: {\n    inmatesAddMany: inmatesAdapter.addMany,\n    inmatesUpdate: inmatesAdapter.updateOne,\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchInmates.fulfilled, (state, action) =>\n      inmatesAdapter.setAll(state, action.payload)\n    );\n    builder.addCase(fetchInmates.rejected, (state, action) =>\n      console.log(\"error\")\n    );\n    builder.addCase(updateInmate.fulfilled, (state, action) =>\n      inmatesAdapter.updateOne(state, {\n        id: action.payload.inmateId,\n        changes: action.payload.changes,\n      })\n    );\n    builder.addCase(updateInmate.rejected, (state, action) => ({\n      ...state,\n      error: action.error.message,\n    }));\n  },\n});\n\nexport const inmatesActions = inmatesSlice.actions;\n","export const PADDING = 24;\nexport const WRAPPER_STYLE = { padding: PADDING };\nexport const CONTAINER_BORDER_RADIUS = { borderRadius: 6 };\nexport const FULL_WIDTH = { width: \"100%\" };\nexport const BASE_CHART_COLORS = [\n  \"#eef6ff\",\n  \"#9ac1ec\",\n  \"#70a9e9\",\n  \"#0275D8\",\n  \"#004886\",\n];\n\nexport const WHITE_BACKGROUND_LAYOUT = { backgroundColor: \"white\" };\n","import {\n  addMilliseconds,\n  format,\n  getHours,\n  getMinutes,\n  startOfMonth,\n} from \"date-fns\";\nimport { CallBlock, Call, WeeklySchedule } from \"src/typings/Call\";\nimport { NodeCallSlot } from \"src/typings/Facility\";\nimport { WeekdayMap, WEEKDAYS, DEFAULT_DURATION_MS } from \"./constants\";\nimport _ from \"lodash\";\nimport { addWeeks } from \"@fullcalendar/react\";\n\nconst callSlotToDateString = (time: NodeCallSlot): string => {\n  const date = new Date();\n  date.setHours(time.start.hour);\n  date.setMinutes(time.start.minute);\n  return date.toString();\n};\n\nconst calcEndCallSlot = (time: NodeCallSlot): string => {\n  const date = new Date();\n  // TODO fix this\n  // const offset = date.getDay() - time.start.day;\n  //     date.setDate(date.getDate() + offset);\n  //   date.setDate(time.start.day);\n  date.setHours(time.start.hour);\n  date.setMinutes(time.start.minute);\n  // const hi = addMilliseconds(date, duration);\n  return addMilliseconds(date, time.duration).toString();\n};\n\nexport const mapCallSlotsToTimeBlock = (\n  callTimes: NodeCallSlot[]\n): WeeklySchedule => {\n  console.log(\"calltimes\");\n  console.log(callTimes);\n  const groups = _.groupBy(callTimes, (time) => time.start.day);\n\n  console.log(groups);\n  const sorted: [WeekdayMap, NodeCallSlot[]][] = WEEKDAYS.map(\n    (weekday: WeekdayMap) => {\n      if (!(weekday in groups)) {\n        return [weekday, []];\n      }\n      return [\n        weekday,\n        groups[weekday].sort((ct1, ct2) => {\n          if (ct1.start.hour > ct2.start.hour) return 1;\n          if (ct1.start.hour < ct2.start.hour) return -1;\n\n          if (ct1.start.minute > ct2.start.minute) return 1;\n          if (ct1.start.minute < ct2.start.minute) return -1;\n          return 1;\n        }),\n      ];\n    }\n  );\n  console.log(\"sorted:\");\n  console.log(sorted);\n  let idx = 0;\n\n  const ranges: {\n    [key: number]: CallBlock[];\n  }[] = sorted.map(([weekday, times]) => {\n    // console.log(weekday);\n    // console.log(times);\n    if (!times.length) {\n      return { [weekday]: [] };\n    }\n    const timeRanges: CallBlock[] = [];\n    let curr: NodeCallSlot = times[0];\n    let first: NodeCallSlot = times[0];\n\n    // create intervals\n    for (const time of times.slice(1, times.length)) {\n      // if same time, just keep moving through the list e.g 11.00 --> 11.30\n      if (curr.start.hour === time.start.hour) curr = time;\n      else if (\n        time.start.hour === curr.start.hour + 1 &&\n        time.start.minute === 0\n      )\n        // e.g 11.30 --> 12.00\n        curr = time;\n      else {\n        // new time range\n        // TODO account for potential timezone differences?\n        timeRanges.push({\n          duration: DEFAULT_DURATION_MS,\n          start: callSlotToDateString(first),\n          end: calcEndCallSlot(curr),\n          idx,\n          day: first.start.day,\n        });\n        // reset\n        first = time;\n        curr = time;\n        idx += 1;\n      }\n    }\n    // create last range\n    timeRanges.push({\n      duration: DEFAULT_DURATION_MS,\n      start: callSlotToDateString(first),\n      end: calcEndCallSlot(curr),\n      idx,\n      day: first.start.day,\n    });\n\n    return { [weekday]: timeRanges };\n  });\n  console.log(\"output\");\n  console.log(ranges);\n  return Object.assign({}, ...ranges);\n};\n\nexport const mapCallBlockToCallSlots = (\n  ranges: WeeklySchedule\n): NodeCallSlot[] => {\n  const rangeList = WEEKDAYS.map((weekday) => ranges[weekday] || []).reduce(\n    (prev, curr) => prev.concat(curr),\n    []\n  );\n\n  console.log(rangeList);\n  const res = rangeList\n    .map((range) => {\n      let iterator = new Date(range.start);\n      const endTime = new Date(range.end);\n\n      if (iterator > endTime) throw new Error(\"Invalid time range\");\n\n      const callTimes: NodeCallSlot[] = [];\n\n      while (iterator < endTime) {\n        callTimes.push({\n          start: {\n            hour: getHours(iterator),\n            minute: getMinutes(iterator),\n            day: range.day,\n          },\n          duration: range.duration,\n        });\n        iterator = addMilliseconds(iterator, range.duration);\n        console.log(iterator);\n      }\n\n      return callTimes;\n    })\n    .reduce((prev, curr) => prev.concat(curr), []);\n  return res;\n};\n\nexport const dayOfWeekAsString = (dayIndex: WeekdayMap): string => {\n  return (\n    [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ][dayIndex] || \"\"\n  );\n};\n\nfunction mondayMorning(date: Date): Date {\n  const day = date.getDay();\n  date.setDate(date.getDate() - day + 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n\nconst callsWithinPeriod = (calls: Call[], start: Date, end: Date): Call[] => {\n  return calls.filter(\n    (call) =>\n      new Date(call.scheduledEndTime) >= start &&\n      new Date(call.scheduledEndTime) <= end\n  );\n};\n\nexport const callsToday = (calls: Call[]): Call[] => {\n  const morning = new Date();\n  morning.setHours(0, 0, 0, 0);\n  const evening = new Date();\n  evening.setHours(23, 59, 59, 59);\n  return callsWithinPeriod(calls, morning, evening);\n};\n\nexport const callsToWeeklyData = (calls: Call[]): Record<string, number> => {\n  const now = new Date();\n  const thisMonday = mondayMorning(now);\n\n  const data: Record<string, number> = {};\n\n  const start = mondayMorning(startOfMonth(now));\n  let curr = start;\n  while (curr <= thisMonday) {\n    const next = addWeeks(curr, 1);\n    data[format(curr, \"MMM dd\")] = callsWithinPeriod(calls, curr, next).length;\n    curr = next;\n  }\n  return data;\n};\n","import { EventInput } from \"@fullcalendar/react\";\nimport { addSeconds, format, differenceInSeconds } from \"date-fns\";\nimport { toQueryString } from \"src/api/Common\";\nimport { CallFilters, Call } from \"src/typings/Call\";\n\nexport const genFullName = (entity?: BasePersona): string =>\n  entity ? `${entity.firstName} ${entity.lastName}` : \"\";\n\nexport const genImageUri = (user?: BasePersona): string => {\n  return user?.profileImgPath || \"default.jpg\";\n};\n\nexport const VisitationToEventInput = (visitation: Call): EventInput => {\n  return {\n    title: `${genFullName(visitation.connection.inmate)} <> ${genFullName(\n      visitation.connection.contact\n    )}`,\n    start: visitation.scheduledStartTime,\n    end: visitation.scheduledEndTime,\n  };\n};\n\nconst formatSecondsToMS = (secs: number): string => {\n  return format(addSeconds(new Date(0), secs), \"mm:ss\");\n};\nexport const calculateDurationMS = (start: Date, end: Date): string => {\n  const secs = differenceInSeconds(end, start);\n  return formatSecondsToMS(secs);\n};\n\nexport const mapPermissionMap = (\n  permissions: Permission[]\n): Record<Permission, boolean> => {\n  return {\n    allowRead: permissions.includes(\"allowRead\"),\n    allowApproval: permissions.includes(\"allowApproval\"),\n    allowMonitor: permissions.includes(\"allowMonitor\"),\n    allowCalltimes: permissions.includes(\"allowCalltimes\"),\n    allowRestructure: permissions.includes(\"allowRestructure\"),\n  };\n};\n\nexport const cloneObject = (obj: Object): Object =>\n  JSON.parse(JSON.stringify(obj));\n\nexport function onlyUnique(\n  value: number | string,\n  index: number,\n  self: (number | string)[]\n) {\n  return self.indexOf(value) === index;\n}\n\nexport const createCallOptionsParam = (filters: CallFilters): string => {\n  const options = [\n    [\"approved\", filters.approved?.toString() || \"true\"],\n    [\"limit\", filters.limit?.toString() || \"100\"],\n    [\"offset\", filters.offset?.toString() || \"0\"],\n  ];\n  if (filters.firstLive) options.push([\"first_live\", filters.firstLive]);\n  if (filters.end) options.push([\"end\", filters.end]);\n  if (filters.startDate && filters.endDate)\n    options.push([\"start\", `${filters.startDate},${filters.endDate}`]);\n  if (filters.minDuration && filters.maxDuration)\n    options.push([\n      \"duration\",\n      `${filters.minDuration}, ${filters.maxDuration}`,\n    ]);\n  if (filters.query?.length) options.push([\"global\", filters.query]);\n  return toQueryString(options);\n};\nexport const getInitials = (str: string) => {\n  return str\n    .split(\" \")\n    .map((n) => n[0])\n    .join(\"\");\n};\n\nfunction hashCode(str: string): number {\n  var hash = 0;\n  for (var i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 6) - hash);\n  }\n  return hash;\n}\n\nexport function generateBgColor(label: string): string {\n  const BACKGROUND_COLORS = [\n    \"#093145\",\n    \"#3C6478\",\n    \"#107896\",\n    \"#43ABC9\",\n    \"#C2571A\",\n    \"#9A2617\",\n  ];\n  return BACKGROUND_COLORS[\n    Math.abs(hashCode(label) % BACKGROUND_COLORS.length)\n  ];\n}\n\nexport function notEmpty<TParam>(\n  value: TParam | null | undefined\n): value is TParam {\n  return value !== null && value !== undefined;\n}\n","import { Store } from \"src/redux\";\n\nexport const API_URL = `${process.env.REACT_APP_BASE_URL}api/`;\n\nexport interface ApiResponse {\n  date: number;\n  good: boolean;\n  status: number;\n  message?: string;\n  data: Record<string, unknown> | Record<string, unknown>[] | unknown;\n}\n\nexport function fetchTimeout(\n  fetchUrl: string,\n  options: Record<string, unknown>,\n  timeout = 15000\n): Promise<Response> {\n  return Promise.race([\n    fetch(fetchUrl, { ...options, mode: \"cors\" }),\n    new Promise<Response>((_, reject) =>\n      setTimeout(() => reject(new Error(\"timeout\")), timeout)\n    ),\n  ]);\n}\n\nexport function toQueryString(options: string[][]) {\n  return options.map((x) => x[0] + \"=\" + encodeURIComponent(x[1])).join(\"&\");\n}\n\nexport async function fetchAuthenticated(\n  fetchUrl: string,\n  options: Record<string, unknown> = {},\n  nodeResource = true,\n  timeout = 15000\n): Promise<ApiResponse> {\n  const state = Store.getState();\n\n  const requestOptions = {\n    ...options,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${state.session.user.token}`,\n    },\n  };\n\n  const url = `${API_URL}${\n    nodeResource ? `node/${state.facilities.selected?.nodeId}` : \"\"\n  }${fetchUrl}`;\n  const response = await fetchTimeout(url, requestOptions, timeout);\n  const body = await response.json();\n  return body;\n}\n","import { message, notification } from \"antd\";\n\nexport const openNotificationWithIcon = (\n  message: string,\n  description: string,\n  type: \"success\" | \"info\" | \"error\" | \"warning\"\n) => {\n  notification[type]({\n    message,\n    description,\n  });\n};\n\nexport const showToast = (\n  key: string,\n  content: string,\n  type: \"success\" | \"error\" | \"warning\" | \"loading\" | \"info\",\n  duration = 3\n) => {\n  switch (type) {\n    case \"success\":\n      message.success({ content, key, duration });\n      break;\n    case \"error\":\n      message.error({ content, key, duration });\n      break;\n    case \"warning\":\n      message.warning({ content, key, duration });\n      break;\n    case \"loading\":\n      message.loading({ content, key, duration });\n      break;\n    default:\n      message.info({ content, key, duration });\n      break;\n  }\n};\n","import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n} from \"@reduxjs/toolkit\";\nimport { fetchAuthenticated } from \"src/api/Common\";\nimport camelcaseKeys from \"camelcase-keys\";\nimport { UI } from \"src/utils\";\nimport { BaseConnection, ConnectionStatus } from \"src/typings/Connection\";\n\nexport const updateConnection = createAsyncThunk(\n  \"connection/updateConnection\",\n  async (args: { connectionId: number; status: ConnectionStatus }) => {\n    const body = await fetchAuthenticated(\"/connection\", {\n      method: \"PUT\",\n      body: JSON.stringify({\n        connection_id: args.connectionId,\n        status: args.status,\n      }),\n    });\n\n    if (body.status !== 200) {\n      throw body;\n    }\n\n    return args;\n  }\n);\n\nexport const fetchConnections = createAsyncThunk(\n  \"connection/fetchConnections\",\n  async () => {\n    const body = await fetchAuthenticated(`/connections`);\n\n    if (body.status !== 200 || !body.data) {\n      throw body;\n    }\n\n    const connections = ((body.data as Record<string, unknown>)\n      .connections as Object[]).map((connection) =>\n      camelcaseKeys(connection)\n    ) as BaseConnection[];\n\n    console.log(connections);\n    return connections;\n  }\n);\n\nexport const connectionsAdapter = createEntityAdapter<BaseConnection>();\n\nexport const connectionsSlice = createSlice({\n  name: \"connections\",\n  initialState: connectionsAdapter.getInitialState(),\n  reducers: {\n    connectionsAddOne: connectionsAdapter.addOne,\n    connectionsAddMany: connectionsAdapter.addMany,\n    connectionsUpdate: connectionsAdapter.updateOne,\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchConnections.fulfilled, (state, action) =>\n      connectionsAdapter.addMany(state, action.payload)\n    );\n    builder.addCase(fetchConnections.rejected, (state, action) =>\n      console.log(action.error)\n    );\n    builder.addCase(updateConnection.fulfilled, (state, action) => {\n      const { status, connectionId } = action.payload;\n      switch (status) {\n        case \"approved\":\n          UI.openNotificationWithIcon(\n            \"Connection created!\",\n            \"Hooray!\",\n            \"success\"\n          );\n          break;\n        case \"denied\":\n          UI.openNotificationWithIcon(\n            \"Connection rejected\",\n            \"Very sad\",\n            \"info\"\n          );\n          break;\n      }\n      connectionsAdapter.updateOne(state, {\n        id: connectionId,\n        changes: { status },\n      });\n    });\n    builder.addCase(updateConnection.rejected, (state, action) =>\n      console.log(action.error)\n    );\n  },\n});\n\nexport const connectionsActions = connectionsSlice.actions;\n","import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n} from \"@reduxjs/toolkit\";\nimport { fetchAuthenticated } from \"src/api/Common\";\nimport camelcaseKeys from \"camelcase-keys\";\n\nexport const fetchContacts = createAsyncThunk(\n  \"contact/fetchContacts\",\n  async () => {\n    const body = await fetchAuthenticated(`/users`);\n\n    if (body.status !== 200 || !body.data) {\n      throw body;\n    }\n\n    const contacts = ((body.data as Record<string, unknown>)\n      .users as Object[]).map((contact) => camelcaseKeys(contact)) as Contact[];\n\n    return contacts;\n  }\n);\n\nexport const contactsAdapter = createEntityAdapter<Contact>();\n\nexport const contactsSlice = createSlice({\n  name: \"inmates\",\n  initialState: contactsAdapter.getInitialState(),\n  reducers: {\n    contactsAddMany: contactsAdapter.addMany,\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchContacts.fulfilled, (state, action) =>\n      contactsAdapter.setAll(state, action.payload)\n    );\n    builder.addCase(fetchContacts.rejected, (state, action) =>\n      console.log(\"error\")\n    );\n  },\n});\n\nexport const contactsActions = contactsSlice.actions;\n","import { ThunkAction } from \"redux-thunk\";\nimport { RootState } from \"./index\";\nimport { Action } from \"redux\";\nimport { BaseConnection } from \"src/typings/Connection\";\nimport { BaseCall, CallStatus } from \"src/typings/Call\";\n\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n\n// call helpers\nexport interface RawCall {\n  id: number;\n  connection: BaseConnection;\n  connection_id: number;\n  users: number[];\n  start: number;\n  end: number;\n  first_live?: number;\n  last_live?: number;\n  last_status: string;\n  room_id: number;\n  kiosk_id: number;\n  approved: boolean;\n  video_ready: boolean;\n  status: CallStatus;\n  rating: number;\n  requester_id: number;\n  inmate_id: number;\n}\n\nexport function cleanCall(call: RawCall): BaseCall {\n  return {\n    id: call.id,\n    connectionId: call.connection_id,\n    scheduledStartTime: call.start,\n    scheduledEndTime: call.end,\n    startTime: call.first_live,\n    endTime: call.last_live,\n    end: call.end,\n    approved: call.approved,\n    // TODO find right kiosks\n    kioskId: call.kiosk_id,\n    videoReady: call.video_ready,\n    status: call.status,\n    rating: call.rating,\n    requesterId: call.requester_id,\n    inmateId: call.inmate_id,\n  } as BaseCall;\n}\n","import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n  EntityState,\n} from \"@reduxjs/toolkit\";\nimport { fetchAuthenticated } from \"src/api/Common\";\nimport { cleanCall, RawCall } from \"../helpers\";\nimport { createCallOptionsParam } from \"src/utils/Common\";\nimport {\n  BaseCall,\n  CallFilters,\n  CallMessage,\n  RecordedCall,\n} from \"src/typings/Call\";\n\nexport const callsAdapter = createEntityAdapter<BaseCall>();\n\nexport const fetchCalls = createAsyncThunk(\n  \"calls/fetchAll\",\n  async (filters: CallFilters) => {\n    const body = await fetchAuthenticated(\n      `/calls?${createCallOptionsParam(filters)}`\n    );\n    if (body.status !== 200) {\n      throw body;\n    }\n\n    const visitations = ((body.data as Record<string, unknown>)\n      .calls as RawCall[]).map(cleanCall) as RecordedCall[];\n\n    return visitations;\n  }\n);\n\nexport const fetchRecording = createAsyncThunk(\n  \"/call/fetchRecording\",\n  async (callId: number) => {\n    const body = await fetchAuthenticated(`/call/${callId}`);\n    if (body.status !== 200) {\n      throw body;\n    }\n    const recordingUrl = (body.data as Record<string, unknown>).url as string;\n    const messages = (body.data as Record<string, unknown>)\n      .messages as CallMessage[];\n\n    return { callId, recordingUrl, messages };\n  }\n);\n\ninterface VisitationState extends EntityState<BaseCall> {\n  error?: string;\n}\n\nconst initialState: VisitationState = callsAdapter.getInitialState({});\n\nexport const callsSlice = createSlice({\n  name: \"calls\",\n  initialState,\n  reducers: {\n    callsAddMany: callsAdapter.addMany,\n    callsSetAll: callsAdapter.setAll,\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCalls.fulfilled, (state, action) => {\n      // TODO make this a set all and filter\n      // callsAdapter.addMany(state, action.payload);\n      callsAdapter.upsertMany(state, action.payload);\n    });\n    builder.addCase(fetchCalls.rejected, (state, action) => ({\n      ...state,\n      error: action.error.message,\n    }));\n    builder.addCase(fetchRecording.fulfilled, (state, action) =>\n      callsAdapter.updateOne(state, {\n        id: action.payload.callId,\n        changes: {\n          recordingUrl: action.payload.recordingUrl,\n          messages: action.payload.messages,\n        },\n      })\n    );\n    builder.addCase(fetchRecording.rejected, (state, action) => ({\n      ...state,\n      error: action.error.message,\n    }));\n  },\n});\n\nexport const callsActions = callsSlice.actions;\n","import {\n  createAsyncThunk,\n  createEntityAdapter,\n  createSlice,\n  EntityState,\n  PayloadAction,\n} from \"@reduxjs/toolkit\";\nimport camelcaseKeys from \"camelcase-keys\";\nimport { fetchAuthenticated } from \"src/api/Common\";\nimport { SelectedFacility, Facility, NodeCallSlot } from \"src/typings/Facility\";\nimport { Store } from \"..\";\n\nexport const facilitiesAdapter = createEntityAdapter<Facility>();\n\nexport const selectActiveFacility = createAsyncThunk(\n  \"facility/selectActiveFacility\",\n  async (facility: Facility) => {\n    // need to harcode the nodeId for initialization,\n    const bodyCt = await fetchAuthenticated(\n      `/node/${facility.nodeId}/times`,\n      {},\n      false\n    );\n\n    if (!bodyCt.data) throw new Error(\"Could not load facility data\");\n\n    const callTimes = camelcaseKeys(\n      (bodyCt.data as Record<string, unknown>).call_times as Object\n    ) as NodeCallSlot[];\n\n    return { ...facility, callTimes };\n  }\n);\n\nexport const fetchFacilities = createAsyncThunk(\n  \"facility/fetchFacilities\",\n  async () => {\n    // TODO refactor this to use some APIServiceManager\n    const fBody = await fetchAuthenticated(\n      `/user/${Store.getState().session.user.id}/facilities`,\n      {},\n      false\n    );\n\n    if (!fBody.data) {\n      throw new Error(\"Could not load list of facilities\");\n    }\n\n    const facilities = camelcaseKeys(\n      (fBody.data as Record<string, unknown>) as Object\n    ) as Facility[];\n\n    if (!facilities.length) {\n      throw new Error(\"Must have access to at least one facility\");\n    }\n\n    // fetch information for first facility\n    Store.dispatch(selectActiveFacility(facilities[0]));\n\n    return { facilities };\n  }\n);\n\nexport const updateCallTimes = createAsyncThunk(\n  \"facility/updateCallTimes\",\n  async (args: { callSlots: NodeCallSlot[]; zone: string }) => {\n    const body = await fetchAuthenticated(`/times`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        call_times: args.callSlots,\n        zone: \"America_LosAngeles\",\n      }),\n    });\n\n    // update\n    if (!body.data) {\n      throw new Error(\"Could not update call time\");\n    }\n\n    // update stsore\n    return args.callSlots;\n  }\n);\n\ninterface FacilitiesState extends EntityState<Facility> {\n  error?: string;\n  selected?: SelectedFacility;\n  loading: boolean;\n}\n\nconst initialState: FacilitiesState = facilitiesAdapter.getInitialState({\n  loading: false,\n});\n\nexport const facilitiesSlice = createSlice({\n  name: \"facilities\",\n  initialState,\n  reducers: {\n    setSelected: (state, action: PayloadAction<SelectedFacility>) => ({\n      ...state,\n      selected: action.payload,\n    }),\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchFacilities.fulfilled, (state, action) => {\n      const newState = facilitiesAdapter.setAll(\n        state,\n        action.payload.facilities\n      );\n      // console.log( action.payload.selected);\n      // newState.selected = action.payload.selected;\n      return newState;\n    });\n    builder.addCase(fetchFacilities.rejected, (state, action) => ({\n      ...state,\n      error: action.error.message,\n    }));\n    builder.addCase(selectActiveFacility.fulfilled, (state, action) => ({\n      ...state,\n      selected: action.payload,\n      loading: false,\n    }));\n    builder.addCase(selectActiveFacility.rejected, (state, action) => ({\n      ...state,\n      error: action.error.message,\n      loading: false,\n    }));\n    builder.addCase(selectActiveFacility.pending, (state) => ({\n      ...state,\n      loading: true,\n    }));\n    builder.addCase(updateCallTimes.fulfilled, (state, action) => ({\n      ...state,\n      // TODO update store with new call times\n      // selected:  {...state.selected},\n      // selected: { ...state.selected, callTimes: action.payload },\n    }));\n  },\n});\n\nexport const facilitiesActions = facilitiesSlice.actions;\n","import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n} from \"@reduxjs/toolkit\";\nimport { fetchAuthenticated } from \"src/api/Common\";\nimport { AmeelioNode } from \"src/typings/Node\";\nimport { UI } from \"src/utils\";\n\nexport const fetchNodes = createAsyncThunk(\"node/fetchNodes\", async () => {\n  const body = await fetchAuthenticated(`/subnodes`);\n\n  if (body.status !== 200) {\n    throw body;\n  }\n  const nodes = (body.data as Record<string, unknown>).subnodes;\n  return nodes as AmeelioNode[];\n});\n\nexport const nodesAdapter = createEntityAdapter<AmeelioNode>();\n\nexport const nodesSlice = createSlice({\n  name: \"nodes\",\n  initialState: nodesAdapter.getInitialState(),\n  reducers: {\n    inmatesAddMany: nodesAdapter.addMany,\n    inmatesUpdate: nodesAdapter.updateOne,\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchNodes.fulfilled, (state, action) =>\n      nodesAdapter.setAll(state, action.payload)\n    );\n    builder.addCase(fetchNodes.rejected, (_state, _action) =>\n      UI.showToast(\"nodes\", \"Could not load facility information\", \"error\")\n    );\n  },\n});\n\nexport const inmatesActions = nodesSlice.actions;\n","import {\n  createAsyncThunk,\n  createEntityAdapter,\n  createSlice,\n  PayloadAction,\n} from \"@reduxjs/toolkit\";\nimport camelcaseKeys from \"camelcase-keys\";\nimport { fetchAuthenticated } from \"src/api/Common\";\nimport { Kiosk } from \"src/typings/Kiosk\";\nimport { SelectedFacility } from \"src/typings/Facility\";\n\nexport const kiosksAdapter = createEntityAdapter<Kiosk>();\n\nexport const fetchKiosks = createAsyncThunk(\"kiosk/fetchKiosks\", async () => {\n  const body = await fetchAuthenticated(`/kiosks`);\n\n  if (!body.data) {\n    throw new Error(\"Could not load list of facilities\");\n  }\n\n  const kiosks = camelcaseKeys(\n    (body.data as Record<string, unknown>).kiosks as Object\n  ) as Kiosk[];\n\n  return kiosks;\n});\n\nexport const kiosksSlice = createSlice({\n  name: \"kiosks\",\n  initialState: kiosksAdapter.getInitialState(),\n  reducers: {\n    setSelected: (state, action: PayloadAction<SelectedFacility>) => ({\n      ...state,\n      selected: action.payload,\n    }),\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchKiosks.fulfilled, (state, action) =>\n      kiosksAdapter.setAll(state, action.payload)\n    );\n    builder.addCase(fetchKiosks.rejected, (state, action) => ({\n      ...state,\n      error: action.error.message,\n    }));\n  },\n});\n","import { RootState } from \".\";\nimport { connectionsAdapter } from \"./modules/connections\";\nimport { contactsAdapter } from \"./modules/contact\";\nimport { inmatesAdapter } from \"./modules/inmate\";\nimport { callsAdapter } from \"./modules/call\";\nimport { staffAdapter } from \"./modules/staff\";\nimport { facilitiesAdapter } from \"./modules/facility\";\nimport { BaseConnection, Connection } from \"src/typings/Connection\";\nimport { BaseCall, Call } from \"src/typings/Call\";\nimport { nodesAdapter } from \"./modules/node\";\nimport { kiosksAdapter } from \"./modules/kiosk\";\nimport { notEmpty } from \"src/utils/Common\";\n\n// get selectors from entity adapter\nexport const {\n  selectById: selectConnectionById,\n  selectAll: selectAllConnections,\n} = connectionsAdapter.getSelectors<RootState>((state) => state.connections);\n\nexport const {\n  selectById: selectInmateById,\n  selectAll: selectAllInmates,\n  selectTotal: selectTotalInmates,\n} = inmatesAdapter.getSelectors<RootState>((state) => state.inmates);\n\nexport const {\n  selectById: selectContactById,\n  selectAll: selectAllContacts,\n} = contactsAdapter.getSelectors<RootState>((state) => state.contacts);\n\nexport const {\n  selectById: selectCallById,\n  selectAll: selectAllCalls,\n} = callsAdapter.getSelectors<RootState>((state) => state.calls);\n\nexport const {\n  selectById: selectStaffByIdd,\n  selectAll: selectAllStaff,\n} = staffAdapter.getSelectors<RootState>((state) => state.staff);\n\nexport const {\n  selectById: selectFacilityById,\n  selectAll: selectAllFacilities,\n} = facilitiesAdapter.getSelectors<RootState>((state) => state.facilities);\n\nexport const {\n  selectById: selectNodeById,\n  selectAll: selectAllNodes,\n} = nodesAdapter.getSelectors<RootState>((state) => state.nodes);\n\nexport const {\n  selectById: selectKioskById,\n  selectAll: selectAllKiosks,\n} = kiosksAdapter.getSelectors<RootState>((state) => state.kiosks);\n\n// Connections\nconst getConnectionEntities = (\n  state: RootState,\n  connection: BaseConnection\n) => {\n  const inmate = selectInmateById(state, connection.inmateId);\n  const contact = selectContactById(state, connection.userId);\n  // TODO improve this\n  if (!inmate) return;\n  if (!contact) return;\n  return { inmate, contact, ...connection };\n};\n\nexport const selectConnectionRequests = (state: RootState) => {\n  return selectAllConnections(state).filter(\n    (connection) => connection.status === \"pending\"\n  );\n};\n\nexport const selectApprovedConnections = (state: RootState) => {\n  return selectAllConnections(state).map(\n    (connection) => connection.status === \"approved\"\n  );\n};\n\nexport const selectAllConnectionInfo = (\n  state: RootState,\n  requests: BaseConnection[]\n): Connection[] => {\n  return requests\n    .map((request) => getConnectionEntities(state, request))\n    .filter(notEmpty);\n};\n\n// Calls\nconst getCallEntities = (\n  state: RootState,\n  call: BaseCall\n): Call | undefined => {\n  const connection = selectConnectionById(state, call.connectionId);\n  if (!connection) return;\n\n  const kiosk = selectKioskById(state, call.kioskId);\n  if (!kiosk) return;\n\n  // TODO add error handling\n  const detailedConnection = getConnectionEntities(state, connection);\n  if (!detailedConnection) return;\n  return { ...call, connection: detailedConnection, kiosk };\n};\n\nexport const getCallsInfo = (\n  state: RootState,\n  visitations: BaseCall[]\n): Call[] => {\n  return visitations\n    .map((visitation) => getCallEntities(state, visitation))\n    .filter(notEmpty);\n};\n\nexport const getCallInfo = (state: RootState, callId: number) => {\n  const plainCall = selectCallById(state, callId);\n  if (!plainCall) return;\n  return getCallEntities(state, plainCall) as Call;\n};\n\nexport const selectLiveCalls = (state: RootState): Call[] => {\n  const calls = selectAllCalls(state);\n  return getCallsInfo(\n    state,\n    calls.filter(\n      (call) => call.status === \"missing-monitor\" || call.status === \"live\"\n    )\n  );\n};\n\n// Inmate\n\nexport const selectInmateConnectionsById = (\n  state: RootState,\n  inmateId: number\n) => {\n  const inmate = selectInmateById(state, inmateId);\n  if (!inmate) return;\n  const connections = selectAllConnections(state);\n  return selectAllConnectionInfo(\n    state,\n    connections.filter((connection) => connection.inmateId === inmateId)\n  );\n};\n\nexport const selectInmateCallsById = (state: RootState, inmateId: number) => {\n  const inmate = selectInmateById(state, inmateId);\n  if (!inmate) return;\n  const calls = selectAllCalls(state);\n  return calls.filter((call) => call.inmateId === inmateId);\n};\n","/*\n  Copyright 2020 Ameelio.org.\n  Published under the GPL v3.\n\n  You can obtain a copy of the GPL v3 at:\n  https://www.gnu.org/licenses/gpl-3.0.en.html\n\n  This file was inspired by code from https://github.com/Dirvann/mediasoup-sfu-webrtc-video-rooms,\n  which was published under the Apache License.\n  Copyright 2020 github.com/Dirvann.\n\n  You can obtain a copy of the Apache License at:\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  This file was substantially modified by Ameelio to streamline\n  the signalling protocol and change the structure of how a RoomClient\n  is initialized and what events it exposes for easier use by\n  Ameelio's client-side code, and to refactor and restructure the code\n  for easier maintainenance, among other changes.\n*/\nconst MEDIA_TYPE = {\n  audio: \"audioType\",\n  video: \"videoType\",\n  screen: \"screenType\",\n};\n\nwindow.rc = null;\nwindow.consumers = [];\nwindow.producers = [];\n\nconst config = {\n  video: {\n    width: { min: 640, ideal: 1920 },\n    height: { min: 400, ideal: 1080 },\n    encodings: [\n      {\n        rid: \"r0\",\n        maxBitrate: 100000,\n        scalabilityMode: \"S1T3\",\n      },\n      {\n        rid: \"r1\",\n        maxBitrate: 300000,\n        scalabilityMode: \"S1T3\",\n      },\n      {\n        rid: \"r2\",\n        maxBitrate: 900000,\n        scalabilityMode: \"S1T3\",\n      },\n    ],\n    codecOptions: {\n      videoGoogleStartBitrate: 1000,\n    },\n  },\n};\n\nclass RoomClient {\n  constructor(mediasoupClient, socket, callId) {\n    window.rc = this;\n    this.mediasoupClient = mediasoupClient;\n    this.socket = socket;\n    this.callId = callId;\n\n    // We will eventually have...\n    // Two transports (or one, if we are a monitor)\n    this.producerTransport = null;\n    this.consumerTransport = null;\n\n    // A device\n    this.device = null;\n\n    // Consumers and producers\n    this.consumers = {};\n    this.producers = {};\n\n    // Event handlers\n    this.handlers = { consume: [] };\n  }\n\n  async request(name, data) {\n    return new Promise((resolve, reject) => {\n      this.socket.emit(name, data, (response) => {\n        if (response.error) reject(response.error);\n        else resolve(response);\n      });\n    });\n  }\n\n  async handleTransportConnect(transport) {\n    return new Promise((resolve, reject) => {\n      // Wait for the producer transport to connect...\n      transport.on(\"connect\", async ({ dtlsParameters }, callback, errback) => {\n        console.log(\"got connect!\");\n        await this.request(\"establishDtls\", {\n          dtlsParameters,\n          callId: this.callId,\n          transportId: transport.id,\n        });\n\n        callback();\n        resolve();\n      });\n    });\n  }\n\n  async init() {\n    // Request to join the room.\n    // We will recieve two transports and\n    // and rtpCapabilities object, if we are allowed in.\n    const {\n      producerTransportInfo,\n      consumerTransportInfo,\n      routerRtpCapabilities,\n    } = await this.request(\"join\", { callId: this.callId });\n\n    // Load up a local media device consistent\n    // with the server's RTP capabilities.\n    this.device = await this.loadDevice(routerRtpCapabilities);\n\n    // Set up both transports and promise to send\n    // dtls info when they connect (this won't occur until\n    // someone actually produces).\n    if (producerTransportInfo) {\n      this.producerTransport = this.device.createSendTransport(\n        producerTransportInfo\n      );\n      this.handleTransportConnect(this.producerTransport);\n    }\n\n    this.consumerTransport = this.device.createRecvTransport(\n      consumerTransportInfo\n    );\n    this.handleTransportConnect(this.consumerTransport);\n\n    // Declare what our device is capable of.\n    await this.request(\"declareRtpCapabilities\", {\n      rtpCapabilities: this.device.rtpCapabilities,\n    });\n\n    // We don't actually need to wait for this request to come back.\n    this.request(\"finishConnecting\", { callId: this.callId });\n\n    // When our producer transport is producing a new stream,\n    // inform the server.\n\n    if (this.producerTransport) {\n      this.producerTransport.on(\n        \"produce\",\n        async ({ kind, rtpParameters }, callback, errback) => {\n          console.log(\"Sending produce request\");\n\n          const { producerId } = await this.request(\"produce\", {\n            callId: this.callId,\n            kind,\n            rtpParameters,\n          });\n\n          callback({ id: producerId });\n        }\n      );\n    }\n\n    // When we get a consumer, fire an event.\n    this.socket.on(\"consume\", async (info) => {\n      const { consumer, stream } = await this.consume(info);\n\n      this.socket.emit(\"resumeConsumer\", {\n        callId: this.callId,\n        consumerId: consumer.id,\n      });\n\n      this.handlers.consume.forEach((f) => f(info.kind, stream, info.user));\n    });\n  }\n\n  getMediaConstraints(type, deviceId) {\n    if (type === MEDIA_TYPE.audio) {\n      return { audio: { deviceId } };\n    } else if (type === MEDIA_TYPE.video) {\n      return {\n        video: {\n          width: config.video.width,\n          height: config.video.height,\n          deviceId,\n        },\n      };\n    }\n  }\n\n  async produce(type, deviceId = null) {\n    const mediaConstraints = this.getMediaConstraints(type, deviceId);\n    console.log(\"Media constraints are\", mediaConstraints);\n    const stream = await navigator.mediaDevices.getUserMedia(mediaConstraints);\n\n    console.log(\"Got stream\");\n\n    const track = (type === MEDIA_TYPE.audio\n      ? stream.getAudioTracks()\n      : stream.getVideoTracks())[0];\n\n    const params = { track };\n\n    console.log(\"got track\");\n\n    if (type === MEDIA_TYPE.video) {\n      params.encodings = config.video.encodings;\n      params.codecOptions = config.video.codecOptions;\n    }\n\n    console.log(\"producing with params\", params);\n\n    const producer = await this.producerTransport.produce(params);\n    console.log(\"produced with id\", producer.id);\n    window.producers.push(producer);\n    this.producers[producer.id] = producer;\n  }\n\n  async loadDevice(routerRtpCapabilities) {\n    const device = new this.mediasoupClient.Device();\n\n    await device.load({ routerRtpCapabilities });\n\n    return device;\n  }\n\n  async consume(info) {\n    const consumer = await this.consumerTransport.consume(info);\n    const stream = new MediaStream();\n\n    this.consumers[consumer.id] = consumer;\n\n    stream.addTrack(consumer.track);\n\n    console.log(\"Successfully created stream.\");\n    return { consumer, stream };\n  }\n\n  async on(event, fn) {\n    if (!(event in this.handlers)) {\n      this.handlers[event] = [];\n    }\n    this.handlers[event].push(fn);\n  }\n\n  async terminate() {\n    console.log(\"sending request to terminate\");\n    await this.request(\"terminate\", { callId: this.callId });\n  }\n}\n\nexport default RoomClient;\n","import React, { ReactElement, useState } from \"react\";\nimport \"./Video.css\";\nimport { Menu, Dropdown, Button, Modal } from \"antd\";\nimport {\n  AudioMutedOutlined,\n  AudioOutlined,\n  LockFilled,\n  MessageFilled,\n  MoreOutlined,\n  SettingFilled,\n} from \"@ant-design/icons\";\nimport { CallAlert } from \"src/typings/Call\";\n\nconst { SubMenu } = Menu;\n\ninterface Props {\n  alerts: CallAlert[];\n  terminateCall: () => void;\n  lockCall: () => void;\n  muteCall: () => void;\n  unmuteCall: () => void;\n  emitAlert: (alert: CallAlert) => void;\n  isAudioOn: boolean;\n}\n\nexport default function VideoOverlay({\n  alerts,\n  terminateCall,\n  lockCall,\n  muteCall,\n  unmuteCall,\n  isAudioOn,\n  emitAlert,\n}: Props): ReactElement {\n  const [selectedAlert, setSelectedAlert] = useState<CallAlert | null>(null);\n\n  const handleConfirmation = () => {\n    if (selectedAlert) emitAlert(selectedAlert);\n    setSelectedAlert(null);\n  };\n\n  const menu = (\n    <Menu>\n      <SubMenu key=\"alert\" icon={<MessageFilled />} title=\"Send Alert\">\n        {alerts.map((alert) => (\n          <Menu.Item key={alert.id} onClick={() => setSelectedAlert(alert)}>\n            {alert.title}\n          </Menu.Item>\n        ))}\n      </SubMenu>\n      <Menu.Item key=\"lock\" icon={<LockFilled />} onClick={() => lockCall()}>\n        Lock\n      </Menu.Item>\n      <Menu.Item\n        key=\"terminate\"\n        icon={<SettingFilled />}\n        onClick={() => terminateCall()}\n      >\n        Terminate Call\n      </Menu.Item>\n      <Menu.Item\n        key=\"mute\"\n        icon={isAudioOn ? <AudioMutedOutlined /> : <AudioOutlined />}\n        onClick={() => (isAudioOn ? muteCall() : unmuteCall())}\n      >\n        {isAudioOn ? \"Mute\" : \"Unmute\"}\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <div className=\"video-commands-overlay\">\n      <Dropdown overlay={menu}>\n        <Button>\n          <MoreOutlined />\n        </Button>\n      </Dropdown>\n      <Modal\n        title=\"Are you sure you want to send this alert?\"\n        visible={!!selectedAlert}\n        onOk={handleConfirmation}\n        onCancel={() => setSelectedAlert(null)}\n      >\n        <p>Send the following alert to the participants:</p>\n        <p>{selectedAlert?.body}</p>\n      </Modal>\n    </div>\n  );\n}\n","import React, { ReactElement, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"src/redux\";\nimport RoomClient from \"src/pages/LiveCall/RoomClient\";\nimport * as mediasoupClient from \"mediasoup-client\";\nimport { Spin } from \"antd\";\nimport \"./Video.css\";\nimport VideoOverlay from \"./VideoOverlay\";\nimport { CallAlert, LiveCall } from \"src/typings/Call\";\nimport { AudioMutedOutlined } from \"@ant-design/icons\";\nimport { UI } from \"src/utils\";\n\ninterface Props {\n  width: number | string;\n  height: number | string;\n  call: LiveCall;\n  socket: SocketIOClient.Socket;\n  alerts: CallAlert[];\n  terminateCall: (id: number) => void;\n  muteCall: (id: number) => void;\n  unmuteCall: (id: number) => void;\n  isAudioOn: boolean;\n  lockCall: (id: number) => void;\n}\n\ndeclare global {\n  interface Window {\n    Debug: any;\n  }\n}\n\nfunction Loader(): ReactElement {\n  return (\n    <div className=\"video-loading-spinner\">\n      <Spin tip=\"Loading video call...\" />\n    </div>\n  );\n}\n\nconst VideoChat: React.FC<Props> = React.memo(\n  ({\n    call,\n    width,\n    height,\n    socket,\n    alerts,\n    terminateCall,\n    lockCall,\n    muteCall,\n    unmuteCall,\n    isAudioOn,\n  }) => {\n    const token = useSelector((state: RootState) => state.session.user.token);\n    const id = useSelector((state: RootState) => state.session.user.id);\n\n    const [loading, setLoading] = useState(false);\n    const [isAuthed, setIsAuthed] = useState(false);\n    const [rc, setRc] = useState<RoomClient>();\n\n    const callId = call.id;\n\n    const joinRoom = useCallback(async () => {\n      const rc = new RoomClient(mediasoupClient, socket, callId);\n      await rc.init();\n      setRc(rc);\n    }, [socket, callId]);\n\n    const emitAlert = async (alert: CallAlert) => {\n      const { participants } = await new Promise((resolve, reject) => {\n        socket.emit(\"info\", { callId }, resolve);\n      });\n      console.log(participants);\n      socket.emit(\"textMessage\", {\n        callId,\n        contents: alert.body,\n        recipients: participants,\n      });\n\n      UI.openNotificationWithIcon(\n        \"Alert succesfully issue.\",\n        \"Both parties have been notified.\",\n        \"success\"\n      );\n    };\n\n    // Asynchronously load the room\n    useEffect(() => {\n      setLoading(true);\n      if (!isAuthed) {\n        (async () => {\n          if (!socket.connected) {\n            console.log(\"Not connected, so waiting until connected.\");\n            window.Debug = socket;\n            await new Promise((resolve) => socket.on(\"connect\", resolve));\n            console.log(\"OK\");\n          }\n\n          await new Promise((resolve) => {\n            // TODO fetch actual credentials from redux\n            socket.emit(\n              \"authenticate\",\n              {\n                type: \"monitor\",\n                id,\n                token,\n              },\n              resolve\n            );\n          });\n          await joinRoom();\n          console.log(\"authenticated\");\n          setIsAuthed(true);\n        })();\n      }\n    }, [call.id, id, token, socket, joinRoom, isAuthed]);\n\n    const measuredRef = useCallback(\n      (node) => {\n        if (node !== null && rc && isAuthed) {\n          (async () => {\n            rc.on(\n              \"consume\",\n              async (\n                kind: string,\n                stream: MediaStream,\n                user: { type: string; id: number }\n              ) => {\n                if (node) {\n                  if (kind === \"video\") {\n                    const video = document.createElement(\"video\");\n                    video.style.width = \"50%\";\n                    video.style.height = \"100%\";\n                    video.srcObject = stream;\n                    video.id = `${user.type}-video`;\n                    video.autoplay = true;\n                    node.appendChild(video);\n                  } else if (kind === \"audio\") {\n                    const audio = document.createElement(\"audio\");\n                    audio.srcObject = stream;\n                    audio.autoplay = true;\n                    audio.id = `${user.type}-audio`;\n                    audio.muted = isAudioOn;\n\n                    node.appendChild(audio);\n                  }\n\n                  setLoading(false);\n                }\n              }\n            );\n          })();\n        }\n      },\n      [rc, isAuthed, isAudioOn]\n    );\n\n    useEffect(() => {\n      console.log(isAudioOn);\n      const inmate = document.getElementById(\"inmate-audio\");\n      const user = document.getElementById(\"user-audio\");\n      if (inmate) (inmate as HTMLAudioElement).muted = isAudioOn;\n      if (user) (user as HTMLAudioElement).muted = isAudioOn;\n    }, [isAudioOn]);\n\n    useEffect(() => {\n      if (rc && call) {\n        const interval = setInterval(() => {\n          rc.socket.emit(\"heartbeat\", { callId: call.id });\n        }, 1000);\n        return () => clearInterval(interval);\n      }\n    }, [rc, call]);\n\n    return (\n      <div\n        className=\"video-wrapper\"\n        style={{\n          width,\n          height,\n        }}\n        ref={measuredRef}\n      >\n        {/* <video id=\"visitor-video\"/>\n        <video id=\"inmate-video\"/>\n        <audio id=\"visitor-audio\"/>\n        <audio id=\"inmate-audio\"/> */}\n        {!isAudioOn && (\n          <AudioMutedOutlined\n            style={{\n              position: \"absolute\",\n              bottom: 24,\n              right: 24,\n              fontSize: 36,\n              color: \"red\",\n            }}\n          />\n        )}\n        <VideoOverlay\n          alerts={alerts}\n          terminateCall={() => {\n            if (rc) {\n              rc.terminate();\n              UI.openNotificationWithIcon(\n                `Call #${call.id} terminated`,\n                \"We notified both participants of the incident.\",\n                \"info\"\n              );\n            }\n          }}\n          lockCall={() => lockCall(callId)}\n          muteCall={() => muteCall(callId)}\n          unmuteCall={() => unmuteCall(callId)}\n          isAudioOn={isAudioOn}\n          emitAlert={emitAlert}\n        />\n        {loading && <Loader />}\n      </div>\n    );\n  }\n);\n\nexport default VideoChat;\n","import React, { ReactElement } from \"react\";\nimport { Badge, Card } from \"antd\";\nimport \"./Video.css\";\n\ninterface Props {\n  width: number | string;\n  height: number | string;\n}\n\nexport default function VideoSkeleton({ width, height }: Props): ReactElement {\n  return (\n    <Badge.Ribbon text=\"Offline\">\n      <Card style={{ width, height }} className=\"video-wrapper\"></Card>\n    </Badge.Ribbon>\n  );\n}\n","import React, { ReactElement, ReactNode } from \"react\";\nimport { Typography, Layout, Space, Col, Row } from \"antd\";\nimport { FULL_WIDTH, PADDING } from \"src/styles/styles\";\n\ninterface Props {\n  title: string;\n  subtitle: string;\n  extra?: ReactNode[];\n}\n\nconst HEADER_STYLE = {\n  backgroundColor: \"white\",\n  boxShadow: \"0 2px 4px rgb(53 72 88 / 7%\",\n  marginBottom: \"16px\",\n  paddingLeft: PADDING,\n  paddingRight: PADDING,\n  display: \"flex\",\n  alignItems: \"center\",\n  lineHeight: 1.2,\n};\n\nexport default function Header({\n  title,\n  subtitle,\n  extra,\n}: Props): ReactElement {\n  return (\n    <Layout.Header\n      style={{\n        ...HEADER_STYLE,\n        paddingTop: extra?.length ? \"72px\" : \"48px\",\n        paddingBottom: extra?.length ? \"72px\" : \"48px\",\n      }}\n    >\n      <Space direction=\"vertical\" style={FULL_WIDTH}>\n        <Typography.Title level={3} style={{ marginBottom: 0 }}>\n          {title}\n        </Typography.Title>\n        <Typography.Text>{subtitle}</Typography.Text>\n        {extra?.length && (\n          <hr\n            style={{ border: 0, height: 1, backgroundColor: \"rgba(0,0,0,.15)\" }}\n          />\n        )}\n        <Row gutter={16}>\n          {extra?.map((item, idx) => (\n            <Col key={idx}>{item}</Col>\n          ))}\n        </Row>\n      </Space>\n    </Layout.Header>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { RootState } from \"src/redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport {\n  CALL_ALERTS,\n  GRID_TO_SPAN_WIDTH,\n  GRID_TO_VH_HEIGHT,\n} from \"src/utils/constants\";\nimport { FULL_WIDTH, WRAPPER_STYLE } from \"src/styles/styles\";\nimport io from \"socket.io-client\";\nimport { selectLiveCalls } from \"src/redux/selectors\";\nimport { Layout, Row, Col, Space, Pagination } from \"antd\";\nimport { fetchCalls } from \"src/redux/modules/call\";\nimport VideoChat from \"src/pages/LiveCall/VideoChat\";\nimport VideoSkeleton from \"./VideoSkeleton\";\nimport { GridOption, LiveCall } from \"src/typings/Call\";\nimport _ from \"lodash\";\nimport Header from \"src/components/Header/Header\";\n\nconst { Content } = Layout;\n\nconst mapStateToProps = (state: RootState) => ({\n  visitations: selectLiveCalls(state) as LiveCall[],\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      fetchCalls,\n    },\n    dispatch\n  );\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst MAX_VH_HEIGHT_FRAMES = 80;\n\nconst LiveVisitationContainer: React.FC<PropsFromRedux> = ({\n  visitations,\n  fetchCalls,\n}) => {\n  const [socket, setSocket] = useState<SocketIOClient.Socket>();\n  const [visibleCalls, setVisibleCalls] = useState<LiveCall[]>([]);\n  const [grid, setGrid] = useState<GridOption>(1);\n  const [frameVhHeight, setFrameVhHeight] = useState(MAX_VH_HEIGHT_FRAMES);\n\n  const [consumeAudioRecord, setConsumeAudioRecord] = useState<\n    Record<number, boolean>\n  >({});\n\n  useEffect(() => {\n    const now = new Date().getTime();\n    fetchCalls({\n      approved: true,\n      firstLive: [0, now].join(\",\"),\n      end: [now, now + 1e8].join(\",\"),\n    });\n    const interval = setInterval(() => {\n      const now = new Date().getTime();\n      fetchCalls({\n        approved: true,\n        firstLive: [0, now].join(\",\"),\n        end: [now, now + 1e8].join(\",\"),\n      });\n    }, 30000);\n    return () => clearInterval(interval);\n  }, [fetchCalls]);\n\n  useEffect(() => {\n    if (!socket) {\n      setSocket(\n        io.connect(\n          process.env.REACT_APP_MEDIASOUP_HOSTNAME || \"localhost:8000\"\n          // { transports: [\"websocket\"] }\n        )\n      );\n    }\n  }, [setSocket, socket]);\n\n  useEffect(() => {\n    setVisibleCalls(visitations.slice(0, grid));\n  }, [grid, visitations]);\n\n  const handleVideoTermination = () => {\n    // TODO add redux store request\n  };\n\n  // Grid options\n  const handleGridChange = (grid: GridOption) => {\n    setGrid(grid);\n    setFrameVhHeight(GRID_TO_VH_HEIGHT[grid]);\n  };\n\n  const OPTIONS: GridOption[] = [1, 2, 4, 6, 8];\n\n  const onPageChange = (page: number, _?: number) => {\n    const startIdx = (page - 1) * grid;\n    const endIdx = startIdx + grid;\n    setVisibleCalls(visitations.slice(startIdx, endIdx));\n  };\n\n  const onShowSizeChange = (_: number, pageSize: number) => {\n    handleGridChange(pageSize as GridOption);\n  };\n\n  return (\n    <Content>\n      <Header\n        title=\"Live Calls\"\n        subtitle=\"Monitor, send alerts and terminate calls if needed. All in real-time\"\n      />\n      <Space direction=\"vertical\" style={{ ...FULL_WIDTH, ...WRAPPER_STYLE }}>\n        {visitations.length > 0 && (\n          <Pagination\n            defaultCurrent={1}\n            defaultPageSize={grid}\n            onChange={onPageChange}\n            pageSize={grid}\n            pageSizeOptions={OPTIONS.map((e) => `${e}`)}\n            total={visitations.length}\n            showSizeChanger={true}\n            onShowSizeChange={onShowSizeChange}\n          />\n        )}\n        <Row>\n          {Array.from(Array(grid).keys()).map((idx) => (\n            <Col span={GRID_TO_SPAN_WIDTH[grid]}>\n              {visibleCalls.length - 1 >= idx && socket ? (\n                <VideoChat\n                  height={`${frameVhHeight}vh`}\n                  socket={socket}\n                  call={visibleCalls[idx]}\n                  width=\"100%\"\n                  alerts={CALL_ALERTS}\n                  terminateCall={handleVideoTermination}\n                  muteCall={(callId: number) => {\n                    setConsumeAudioRecord(_.omit(consumeAudioRecord, callId));\n                  }}\n                  unmuteCall={(callId: number) =>\n                    setConsumeAudioRecord({\n                      ...consumeAudioRecord,\n                      [callId]: true,\n                    })\n                  }\n                  isAudioOn={visibleCalls[idx].id in consumeAudioRecord}\n                  lockCall={(callId: number) => {\n                    const call = visitations.find((call) => call.id === callId);\n                    // TODO add call lock logic\n                    // https://github.com/Ameelio/connect-doc-client/issues/38\n                    if (call) console.log(\"call locked!\");\n                  }}\n                />\n              ) : (\n                <VideoSkeleton width=\"100%\" height={`${frameVhHeight}vh`} />\n              )}\n            </Col>\n          ))}\n        </Row>\n      </Space>\n    </Content>\n  );\n};\n\nexport default connector(LiveVisitationContainer);\n","import React, { useState, useEffect } from \"react\";\nimport FullCalendar, {\n  EventClickArg,\n  EventContentArg,\n  EventInput,\n} from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport \"./CalendarView.css\";\nimport { VisitationToEventInput } from \"src/utils/Common\";\nimport { Call } from \"src/typings/Call\";\n\ninterface Props {\n  visitations: Call[];\n}\n\nconst CalendarView: React.FC<Props> = ({ visitations }) => {\n  const [events, setEvents] = useState<EventInput[]>([]);\n\n  const handleEventClick = (clickInfo: EventClickArg) => {\n    if (\n      window.confirm(\n        `Are you sure you want to delete the event '${clickInfo.event.title}'`\n      )\n    ) {\n      clickInfo.event.remove();\n    }\n  };\n\n  useEffect(() => {\n    setEvents(\n      visitations.map((visitation) => VisitationToEventInput(visitation))\n    );\n  }, [visitations]);\n\n  const renderEventContent = (\n    eventContent: EventContentArg\n  ): React.ReactFragment => {\n    return (\n      <>\n        <b>{eventContent.timeText}</b>\n        <i>{eventContent.event.title}</i>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"demo-app-main\">\n      <FullCalendar\n        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n        headerToolbar={{\n          left: \"prev,next today\",\n          center: \"title\",\n          right: \"dayGridMonth,timeGridWeek,timeGridDay\",\n        }}\n        initialView=\"timeGridWeek\"\n        editable={true}\n        selectable={true}\n        selectMirror={true}\n        dayMaxEvents={true}\n        weekends={false}\n        businessHours={true}\n        events={events} // alternatively, use the `events` setting to fetch from a feed\n        eventContent={renderEventContent} // custom render function\n        eventClick={handleEventClick}\n        themeSystem=\"bootstrap\"\n        // eventsSet={(events: EventApi[]) => setCurrentEvents(events)} // called after events are initialized/added/changed/removed\n        /* you can update a remote database when these fire:\n            eventAdd={function(){}}\n            eventChange={function(){}}\n            eventRemove={function(){}}\n            */\n      />\n    </div>\n  );\n};\n\nexport default CalendarView;\n","import React from \"react\";\nimport CalendarView from \"src/components/calendar/CalendarView\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { RootState } from \"src/redux\";\nimport { getCallsInfo, selectAllCalls } from \"src/redux/selectors\";\nimport { Layout, PageHeader } from \"antd\";\nimport { WRAPPER_STYLE } from \"src/styles/styles\";\n\nconst { Content } = Layout;\nconst mapStateToProps = (state: RootState) => ({\n  visitations: getCallsInfo(state, selectAllCalls(state)),\n});\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst UnconnectedKioskCalendarContainer: React.FC<PropsFromRedux> = ({\n  visitations,\n}) => {\n  return (\n    <Content>\n      <PageHeader title=\"Calendar\" />\n      <div style={WRAPPER_STYLE}>\n        <CalendarView visitations={visitations} />\n      </div>\n    </Content>\n  );\n};\n\nexport default connector(UnconnectedKioskCalendarContainer);\n","import React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { RootState } from \"src/redux\";\nimport { WRAPPER_STYLE } from \"src/styles/styles\";\nimport {\n  selectAllConnectionInfo,\n  selectConnectionRequests,\n} from \"src/redux/selectors\";\nimport { Table, Space, Layout, Avatar, Button } from \"antd\";\nimport { genFullName } from \"src/utils/Common\";\nimport { updateConnection } from \"src/redux/modules/connections\";\nimport { BaseConnection, Connection } from \"src/typings/Connection\";\nimport Header from \"src/components/Header/Header\";\n\nconst { Column } = Table;\nconst { Content } = Layout;\n\nconst mapStateToProps = (state: RootState) => ({\n  requests: selectAllConnectionInfo(state, selectConnectionRequests(state)),\n});\n\nconst mapDispatchToProps = { updateConnection };\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst ConnectionRequestsContainer: React.FC<PropsFromRedux> = ({\n  updateConnection,\n  requests,\n}) => {\n  const handleAccept = (request: BaseConnection): void => {\n    updateConnection({ connectionId: request.id, status: \"approved\" });\n  };\n\n  const handleDecline = (request: BaseConnection): void => {\n    updateConnection({ connectionId: request.id, status: \"denied\" });\n  };\n\n  return (\n    <Content>\n      <Header\n        title=\"Approval Requests\"\n        subtitle=\"Review all connection requests between incarcerated people in your facility and their loved one on the outside.\"\n      />\n      <Table dataSource={requests} style={WRAPPER_STYLE}>\n        <Column\n          title=\"\"\n          dataIndex=\"inmate\"\n          key=\"inmateProfilePic\"\n          render={(inmate: Inmate) => (\n            <>\n              {\n                <Avatar\n                  src={inmate.profileImgPath}\n                  shape=\"circle\"\n                  size={{ xs: 24, sm: 32, md: 40, lg: 64, xl: 80, xxl: 100 }}\n                />\n              }\n            </>\n          )}\n        />\n        <Column\n          title=\"Inmate\"\n          dataIndex=\"inmate\"\n          key=\"inmateProfilePic\"\n          render={(inmate: Inmate) => (\n            <>\n              <Space direction=\"vertical\">\n                <span>{genFullName(inmate)}</span>\n                <span>{inmate.inmateNumber}</span>\n                {/* <span>{format(new Date(inmate.dob), \"DD/mm/yy\")}</span> */}\n                <span>{inmate.location}</span>\n              </Space>\n            </>\n          )}\n        />\n        <Column\n          title=\"\"\n          dataIndex=\"contact\"\n          key=\"contactProfilePic\"\n          render={(contact: Contact) => (\n            <>\n              <Avatar\n                src={contact.profileImgPath}\n                shape=\"circle\"\n                size={{ xs: 24, sm: 32, md: 40, lg: 64, xl: 80, xxl: 100 }}\n              />\n            </>\n          )}\n        />\n        <Column\n          title=\"Contact\"\n          dataIndex=\"contact\"\n          key=\"contactInfo\"\n          render={(contact: Contact) => (\n            <>\n              <Space direction=\"vertical\">\n                <span>{genFullName(contact)}</span>\n                <span>Visitor ID: {contact.id}</span>\n                <span>{contact.relationship}</span>\n              </Space>\n            </>\n          )}\n        />\n        <Column\n          title=\"\"\n          key=\"actions\"\n          render={(_text, request: Connection) => (\n            <Space>\n              <Button type=\"primary\" onClick={() => handleAccept(request)}>\n                Accept\n              </Button>\n              <Button danger onClick={() => handleDecline(request)}>\n                Reject\n              </Button>\n            </Space>\n          )}\n        />\n      </Table>\n    </Content>\n  );\n};\n\nexport default connector(ConnectionRequestsContainer);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { ReactElement } from \"react\";\nimport { Menu, Dropdown } from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\";\nimport { DatePicker, Space } from \"antd\";\n\nconst { RangePicker } = DatePicker;\n\ninterface Props {\n  setStartDate: (date: number) => void;\n  setEndDate: (date: number) => void;\n  setDuration: (maxDuration: number) => void;\n}\n\nexport default function CallFiltersHeader({\n  setDuration,\n  setStartDate,\n  setEndDate,\n}: Props): ReactElement {\n  const DURATION_FILTERS = [Infinity, 3, 5, 10, 15, 20];\n\n  const DurationFilters = (\n    <Menu>\n      {DURATION_FILTERS.map((duration) => (\n        <Menu.Item key={duration} onClick={() => setDuration(duration)}>\n          {\"<\"}\n          {duration}\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  return (\n    <Space align=\"center\">\n      <RangePicker\n        onChange={(date) => {\n          if (!date) return;\n          if (date[0]) setStartDate(date[0].unix() * 1000);\n          if (date[1]) setEndDate(date[1].unix() * 1000);\n        }}\n      />\n      <Dropdown overlay={DurationFilters} trigger={[\"click\"]}>\n        <a className=\"ant-dropdown-link\" onClick={(e) => e.preventDefault()}>\n          Call Duration <DownOutlined />\n        </a>\n      </Dropdown>\n    </Space>\n  );\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { RootState } from \"src/redux\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport { FULL_WIDTH, WRAPPER_STYLE } from \"src/styles/styles\";\nimport { genFullName } from \"src/utils/Common\";\nimport { getCallsInfo, selectAllCalls } from \"src/redux/selectors\";\nimport { format } from \"date-fns\";\nimport { fetchCalls } from \"src/redux/modules/call\";\nimport CallFiltersHeader from \"./CallFilters\";\nimport { Table, Space, Layout, Button, Tag, Input, Select } from \"antd\";\nimport { push } from \"connected-react-router\";\nimport { Connection } from \"src/typings/Connection\";\nimport { CallStatus, RecordedCall } from \"src/typings/Call\";\nimport Header from \"src/components/Header/Header\";\nimport { EyeOutlined } from \"@ant-design/icons\";\nimport _ from \"lodash\";\n\nconst { Column } = Table;\nconst { Content } = Layout;\n\nconst mapStateToProps = (state: RootState) => ({\n  logs: getCallsInfo(state, selectAllCalls(state)).filter(\n    (x) => x.startTime && x.endTime\n  ) as RecordedCall[],\n  history: state.router,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators({ fetchCalls, push }, dispatch);\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype SearchFilter =\n  | \"inmateId\"\n  | \"contactName\"\n  | \"contactId\"\n  | \"inmateName\"\n  | \"kioskName\";\n\nconst LABEL_TO_FILTER_MAP: Record<SearchFilter, string> = {\n  inmateId: \"Member ID\",\n  inmateName: \"Member Name\",\n  contactId: \"Contact ID\",\n  contactName: \"Contact Name\",\n  kioskName: \"Kiosk Name\",\n};\n\nconst LogsContainer: React.FC<PropsFromRedux> = ({\n  logs,\n  fetchCalls,\n  push,\n}) => {\n  // TODO refactor filter to filter based on store instead of displaying redux data\n  // Always call API while waiting\n  const [filteredLogs, setFilteredLogs] = useState<RecordedCall[]>([]);\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n  const [global, setGlobal] = useState<string>(\"\");\n  const [limit] = useState(100);\n  const [offset] = useState(0);\n  const [startDate, setStartDate] = useState<number>();\n  const [endDate, setEndDate] = useState<number>();\n  const [maxDuration, setMaxDuration] = useState<number>();\n  const [loading, setLoading] = useState<boolean>(false);\n  const [activeSearchFilter, setActiveSearchFilter] = useState<SearchFilter>(\n    \"inmateId\"\n  );\n\n  const delayedQuery = useCallback(\n    _.debounce(() => setGlobal(searchQuery), 1000),\n    [searchQuery]\n  );\n\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(e.target.value);\n  };\n\n  useEffect(() => {\n    delayedQuery();\n    return delayedQuery.cancel;\n  }, [searchQuery, delayedQuery]);\n\n  useEffect(() => {\n    setLoading(true);\n    (async () =>\n      fetchCalls({\n        query: global,\n        startDate,\n        endDate,\n        minDuration: 0,\n        maxDuration,\n        limit,\n        offset,\n      }))().then(() => setLoading(false));\n  }, [fetchCalls, limit, offset, startDate, endDate, maxDuration, global]);\n\n  useEffect(() => {\n    let tempLogs = logs;\n\n    if (startDate && endDate)\n      tempLogs = tempLogs.filter(\n        (log) => log.startTime >= startDate && log.startTime <= endDate\n      );\n\n    if (searchQuery)\n      switch (activeSearchFilter) {\n        case \"inmateId\":\n          tempLogs = tempLogs.filter((log) =>\n            `${log.connection.inmate.inmateNumber}`.includes(searchQuery)\n          );\n          break;\n        case \"inmateName\":\n          tempLogs = tempLogs.filter((log) =>\n            genFullName(log.connection.inmate).includes(searchQuery)\n          );\n          break;\n        case \"contactName\":\n          tempLogs = tempLogs.filter((log) =>\n            genFullName(log.connection.contact).includes(searchQuery)\n          );\n          break;\n        case \"contactId\":\n          tempLogs = tempLogs.filter((log) =>\n            `${log.connection.contact.id}`.includes(searchQuery)\n          );\n          break;\n        default:\n          break;\n      }\n    setFilteredLogs(tempLogs);\n  }, [\n    logs,\n    setFilteredLogs,\n    startDate,\n    endDate,\n    activeSearchFilter,\n    searchQuery,\n  ]);\n\n  return (\n    <Content>\n      <Header\n        title=\"Search for Call Logs\"\n        subtitle=\"Search by different parameters and retrieve recordings of past calls\"\n        extra={[\n          <Input.Group compact>\n            <Select\n              defaultValue=\"inmateId\"\n              onSelect={(value) => setActiveSearchFilter(value)}\n            >\n              {Object.keys(LABEL_TO_FILTER_MAP).map((key) => (\n                <Select.Option key={key} value={key as SearchFilter}>\n                  {LABEL_TO_FILTER_MAP[key as SearchFilter]}\n                </Select.Option>\n              ))}\n            </Select>\n            <Input.Search\n              style={{ width: \"auto\" }}\n              placeholder={`Search by ${LABEL_TO_FILTER_MAP[activeSearchFilter]}...`}\n              allowClear\n              value={searchQuery}\n              onChange={handleSearchChange}\n              onSearch={(value) => {\n                setGlobal(value);\n              }}\n            />\n          </Input.Group>,\n          <CallFiltersHeader\n            setStartDate={setStartDate}\n            setEndDate={setEndDate}\n            setDuration={setMaxDuration}\n          />,\n        ]}\n      />\n      <Space direction=\"vertical\" style={{ ...WRAPPER_STYLE, ...FULL_WIDTH }}>\n        <Table dataSource={filteredLogs} loading={loading}>\n          <Column\n            title=\"Date\"\n            dataIndex=\"startTime\"\n            key=\"date\"\n            render={(time) => (\n              <>\n                <span>{format(time, \"MM/dd/yy\")}</span>\n              </>\n            )}\n          />\n          <Column\n            title=\"Start Time\"\n            dataIndex=\"startTime\"\n            key=\"startTime\"\n            render={(time) => (\n              <>\n                <span>{format(time, \"HH:mm\")}</span>\n              </>\n            )}\n          />\n          <Column\n            title=\"End Time\"\n            dataIndex=\"endTime\"\n            key=\"endTime\"\n            render={(time) => (\n              <>\n                <span>{format(time, \"HH:mm\")}</span>\n              </>\n            )}\n          />\n          <Column\n            title=\"Inmate Name\"\n            dataIndex=\"connection\"\n            key=\"connection\"\n            render={(connection: Connection) => (\n              <>\n                <span>{genFullName(connection.inmate)}</span>\n              </>\n            )}\n          />\n          <Column\n            title=\"Inmate ID\"\n            dataIndex=\"connection\"\n            key=\"inmateId\"\n            render={(connection: Connection) => (\n              <>\n                <span>{connection.inmate.inmateNumber}</span>\n              </>\n            )}\n          />\n          <Column\n            title=\"Contact Name\"\n            dataIndex=\"connection\"\n            key=\"contactName\"\n            render={(connection: Connection) => (\n              <>\n                <span>{genFullName(connection.contact)}</span>\n              </>\n            )}\n          />\n          {/* Change this */}\n          <Column\n            title=\"Location\"\n            dataIndex=\"connection\"\n            key=\"location\"\n            render={(connection: Connection) => (\n              <>\n                <span>{connection.inmate.location}</span>\n              </>\n            )}\n          />\n          <Column\n            title=\"Status\"\n            dataIndex=\"status\"\n            key=\"location\"\n            render={(status: CallStatus) => (\n              <>\n                <Tag>{status}</Tag>\n              </>\n            )}\n          />\n\n          <Column\n            title=\"Recording\"\n            key=\"action\"\n            render={(_text, visitation: RecordedCall) => (\n              <Space size=\"middle\">\n                <Button\n                  onClick={() => push(`/call/${visitation.id}`)}\n                  icon={<EyeOutlined />}\n                >\n                  View\n                </Button>\n              </Space>\n            )}\n          />\n        </Table>\n      </Space>\n    </Content>\n  );\n};\n\nexport default connector(LogsContainer);\n","import React, { ReactElement } from \"react\";\nimport { Form, Input, Select, Switch } from \"antd\";\nimport { SendOutlined } from \"@ant-design/icons\";\nimport { STAFF_PERMISSION_OPTIONS } from \"src/utils/constants\";\n\nconst { Option } = Select;\n\nexport interface StaffFormFields {\n  email: string;\n  role: string;\n  permissions: Permission[];\n}\ninterface Props {\n  // onFinish: () => void;\n  data: StaffFormFields;\n  onChange: (data: StaffFormFields) => void;\n}\n\nexport default function CreateStaffForm({\n  data,\n  onChange,\n}: Props): ReactElement {\n  const [form] = Form.useForm();\n\n  return (\n    <Form form={form} name=\"control-hooks\">\n      <Form.Item\n        name=\"email\"\n        label=\"Email\"\n        rules={[{ type: \"email\", required: true }]}\n      >\n        <Input\n          placeholder=\"Email\"\n          prefix={<SendOutlined className=\"site-form-item-icon\" />}\n          value={data.email}\n          onChange={(event) => onChange({ ...data, email: event.target.value })}\n        />\n      </Form.Item>\n      <Form.Item name=\"gender\" label=\"Role\" rules={[{ required: true }]}>\n        <Select\n          placeholder=\"Select a role\"\n          value={data.role}\n          onChange={(value) => onChange({ ...data, role: value })}\n          allowClear\n        >\n          <Option value=\"operator\">Operator</Option>\n          <Option value=\"investigator\">Investigator</Option>\n          <Option value=\"warden\">Warden</Option>\n          <Option value=\"admin\">Admin</Option>\n        </Select>\n      </Form.Item>\n      <Form.Item>\n        {/* TODO create coomponent for the switches */}\n        {Object.keys(STAFF_PERMISSION_OPTIONS).map((key) => (\n          <div>\n            <span>{STAFF_PERMISSION_OPTIONS[key as Permission]}</span>\n            <Switch\n              defaultChecked={false}\n              checked={data.permissions.includes(key as Permission)}\n              onChange={(checked) => {\n                if (checked)\n                  onChange({\n                    ...data,\n                    permissions: [...data.permissions, key as Permission],\n                  });\n                else\n                  onChange({\n                    ...data,\n                    permissions: data.permissions.filter(\n                      (permission) => permission !== key\n                    ),\n                  });\n              }}\n            />\n          </div>\n        ))}\n      </Form.Item>\n    </Form>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { RootState } from \"src/redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport { updateStaff } from \"src/redux/modules/staff\";\nimport { STAFF_PERMISSION_OPTIONS } from \"src/utils/constants\";\nimport { WRAPPER_STYLE } from \"src/styles/styles\";\nimport {\n  Table,\n  Tag,\n  Space,\n  Layout,\n  Avatar,\n  Divider,\n  Modal,\n  Button,\n  Switch,\n} from \"antd\";\nimport { selectAllStaff } from \"src/redux/selectors\";\nimport { cloneObject, genFullName, mapPermissionMap } from \"src/utils/Common\";\nimport CreateStaffForm, { StaffFormFields } from \"./CreateStaffForm\";\nimport Header from \"src/components/Header/Header\";\nimport { UserAddOutlined } from \"@ant-design/icons\";\n\nconst { Column } = Table;\nconst { Content } = Layout;\n\nconst mapStateToProps = (state: RootState) => ({\n  staff: selectAllStaff(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators({ updateStaff }, dispatch);\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst StaffContainer: React.FC<PropsFromRedux> = ({ staff, updateStaff }) => {\n  const [modalType, setModalType] = useState<\"create\" | \"edit\" | null>(null);\n  const [selected, setSelected] = useState<Staff>();\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [formData, setFormData] = useState<StaffFormFields>({\n    email: \"\",\n    role: \"\",\n    permissions: [],\n  });\n  const [selectedPermissions, setSelectedPermissions] = useState<\n    Record<Permission, boolean>\n  >({\n    allowRead: false,\n    allowCalltimes: false,\n    allowApproval: false,\n    allowRestructure: false,\n    allowMonitor: false,\n  });\n\n  const handleOk = () => {\n    setConfirmLoading(true);\n    switch (modalType) {\n      case \"edit\":\n        if (selected)\n          updateStaff({\n            userId: selected.id,\n            permissions: Object.keys(selectedPermissions).filter(\n              (key) => selectedPermissions[key as Permission]\n            ) as Permission[],\n          });\n        break;\n      case \"create\":\n        // do somethin\n        break;\n    }\n\n    setConfirmLoading(false);\n  };\n\n  useEffect(() => {\n    if (selected)\n      setSelectedPermissions(mapPermissionMap(selected.permissions));\n  }, [selected]);\n\n  return (\n    <Content>\n      <Header\n        title=\"Staff\"\n        subtitle=\"Manage your staff, edit their access permissions, and add new members.\"\n        extra={[\n          <Button\n            onClick={() => setModalType(\"create\")}\n            icon={<UserAddOutlined />}\n          >\n            Add Staff Member\n          </Button>,\n        ]}\n      />\n      <div style={WRAPPER_STYLE}>\n        <Table dataSource={staff}>\n          <Column\n            title=\"\"\n            dataIndex=\"profileImgPath\"\n            key=\"profileImgPath\"\n            render={(img) => (\n              <>\n                <Avatar src={img} size=\"large\" />\n              </>\n            )}\n          />\n          <Column title=\"First Name\" dataIndex=\"firstName\" key=\"firstName\" />\n          <Column title=\"Last Name\" dataIndex=\"lastName\" key=\"lastName\" />\n          <Column\n            title=\"Role\"\n            dataIndex=\"role\"\n            key=\"role\"\n            render={(role) => (\n              <>\n                <Tag color=\"blue\" key={role}>\n                  {role || \"Operator\"}\n                </Tag>\n              </>\n            )}\n          />\n          <Column\n            title=\"\"\n            key=\"edit\"\n            render={(_text, record: Staff) => (\n              <Button\n                onClick={() => {\n                  setSelected(record);\n                  setModalType(\"edit\");\n                }}\n              >\n                Edit\n              </Button>\n            )}\n          />\n        </Table>\n      </div>\n      {/* </Space> */}\n      <Modal\n        title=\"Add Staff\"\n        visible={modalType === \"create\"}\n        onOk={handleOk}\n        confirmLoading={confirmLoading}\n        onCancel={() => setModalType(null)}\n      >\n        <CreateStaffForm data={formData} onChange={setFormData} />\n      </Modal>\n      <Modal\n        title=\"Edit Staff\"\n        visible={modalType === \"edit\"}\n        onOk={handleOk}\n        confirmLoading={confirmLoading}\n        onCancel={() => setModalType(null)}\n      >\n        {selected && (\n          <Space direction=\"vertical\" size=\"small\" style={{ width: \"100%\" }}>\n            <span>Name: {genFullName(selected)}</span>\n            <span>Role: {selected.role}</span>\n            <span>Email: {selected.email}</span>\n            <Divider />\n            {Object.keys(STAFF_PERMISSION_OPTIONS).map((key) => (\n              <Space>\n                <span>{STAFF_PERMISSION_OPTIONS[key as Permission]}</span>\n                <Switch\n                  defaultChecked={selected.permissions.includes(\n                    key as Permission\n                  )}\n                  checked={selectedPermissions[key as Permission]}\n                  onChange={(checked) => {\n                    const update = cloneObject(selectedPermissions) as Record<\n                      Permission,\n                      boolean\n                    >;\n                    update[key as Permission] = checked;\n                    setSelectedPermissions(update);\n                  }}\n                />\n              </Space>\n            ))}\n          </Space>\n        )}\n      </Modal>\n    </Content>\n  );\n};\n\nexport default connector(StaffContainer);\n","import { Form, Input, InputNumber } from \"antd\";\nimport React from \"react\";\n\ninterface Props {\n  editing: boolean;\n  dataIndex: string;\n  title: string;\n  inputType: \"text\" | \"number\";\n  record: any;\n  index: number;\n}\n\nconst EditableCell: React.FC<Props> = ({\n  children,\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  ...restProps\n}) => {\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\n  return (\n    <td {...restProps}>\n      {editing ? (\n        <Form.Item\n          name={dataIndex}\n          style={{\n            margin: 0,\n          }}\n          rules={[\n            {\n              required: false,\n              message: `Please Input ${title}!`,\n            },\n          ]}\n        >\n          {inputNode}\n        </Form.Item>\n      ) : (\n        children\n      )}\n    </td>\n  );\n};\n\nexport default EditableCell;\n","import { EyeOutlined } from \"@ant-design/icons\";\nimport { Button, Form, Popconfirm, Space, Table, Typography } from \"antd\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { TableColumn } from \"src/typings/Common\";\nimport EditableCell from \"./EditableCell\";\n\ninterface Props {\n  originalData: Record<string, any>[];\n  columns: TableColumn[];\n  onSave: Function;\n  onViewItem: (id: number) => void;\n}\n\nexport default function EditableTable({\n  originalData,\n  columns,\n  onSave,\n  onViewItem,\n}: Props) {\n  const [form] = Form.useForm();\n  const [data, setData] = useState(originalData);\n  const [editingId, setEditingId] = useState(null);\n\n  const isEditing = (record: any) => record.id === editingId;\n\n  const edit = (record: any) => {\n    form.setFieldsValue({\n      ...record,\n    });\n    setEditingId(record.id);\n  };\n\n  const cancel = () => {\n    setEditingId(null);\n  };\n\n  const save = async (id: number) => {\n    try {\n      const row = await form.validateFields();\n      const newData = [...data];\n      const index = newData.findIndex((item) => id === item.id);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, { ...item, ...row });\n        await onSave(newData[index]);\n        setData(newData);\n        setEditingId(null);\n      } else {\n        newData.push(row);\n        setData(newData);\n        setEditingId(null);\n      }\n    } catch (err) {\n      console.log(\"Validate Failed:\", err);\n    }\n  };\n\n  const columnsWithEdit = columns.concat([\n    {\n      title: \"\",\n      dataIndex: \"operation\",\n      render: (_: any, record: any) => {\n        const editable = isEditing(record);\n        return editable ? (\n          <Space>\n            <Typography.Link onClick={() => save(record.id)}>\n              Save\n            </Typography.Link>\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\n              <Typography.Link>Cancel</Typography.Link>\n            </Popconfirm>\n          </Space>\n        ) : (\n          <Space size=\"large\">\n            <Typography.Link\n              disabled={editingId !== null}\n              onClick={() => edit(record)}\n            >\n              Quick Edit\n            </Typography.Link>\n            <Button\n              disabled={editingId !== null}\n              onClick={() => onViewItem(record.id)}\n              icon={<EyeOutlined />}\n            >\n              View\n            </Button>\n          </Space>\n        );\n      },\n    },\n  ]);\n  const mergedColumns = columnsWithEdit.map((col) => {\n    return col.editable\n      ? {\n          ...col,\n          onCell: (record: any) => ({\n            record,\n            inputType: \"text\",\n            dataIndex: col.dataIndex,\n            title: col.title,\n            editing: isEditing(record),\n          }),\n        }\n      : col;\n  });\n  return (\n    <Form form={form} component={false}>\n      <Table\n        components={{\n          body: {\n            cell: EditableCell,\n          },\n        }}\n        bordered\n        dataSource={data}\n        columns={mergedColumns as any}\n        pagination={{\n          onChange: cancel,\n        }}\n      />\n    </Form>\n  );\n}\n","import React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { selectAllInmates } from \"src/redux/selectors\";\nimport { Layout, Avatar } from \"antd\";\nimport EditableTable from \"src/components/editable-table/EditableTable\";\nimport { updateInmate } from \"src/redux/modules/inmate\";\nimport { RootState } from \"src/redux\";\nimport { TableColumn } from \"src/typings/Common\";\nimport { WRAPPER_STYLE } from \"src/styles/styles\";\nimport { push } from \"connected-react-router\";\nimport Header from \"src/components/Header/Header\";\n\nconst { Content } = Layout;\n\nconst mapStateToProps = (state: RootState) => ({\n  inmates: selectAllInmates(state),\n});\n\nconst mapDispatchToProps = { updateInmate, push };\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst UnconnectedInmateContainer: React.FC<PropsFromRedux> = ({\n  updateInmate,\n  inmates,\n  push,\n}) => {\n  const columns: TableColumn[] = [\n    {\n      title: \"\",\n      dataIndex: \"profileImgPath\",\n      editable: false,\n      render: (img: any) => (\n        <>\n          <Avatar src={img} size=\"large\" />\n        </>\n      ),\n    },\n    {\n      title: \"Inmate Number\",\n      dataIndex: \"inmateNumber\",\n      editable: true,\n    },\n    {\n      title: \"First Name\",\n      dataIndex: \"firstName\",\n      editable: true,\n    },\n    {\n      title: \"Last Name\",\n      dataIndex: \"lastName\",\n      editable: true,\n    },\n    {\n      title: \"Location\",\n      dataIndex: \"location\",\n      editable: true,\n    },\n  ];\n\n  return (\n    <Content>\n      <Header\n        title=\"Incarcerated People\"\n        subtitle=\"Manage the members of your facility, access detailed information, and edit their info as needed.\"\n      />\n      <div style={WRAPPER_STYLE}>\n        <EditableTable\n          originalData={inmates}\n          columns={columns}\n          onSave={(inmate: Inmate) => updateInmate(inmate)}\n          onViewItem={(id: number) => push(`/members/${id}`)}\n        />\n      </div>\n    </Content>\n  );\n};\n\nexport default connector(UnconnectedInmateContainer);\n","import React, { ReactElement } from \"react\";\nimport { RootState } from \"src/redux\";\nimport { connect, ConnectedProps, useSelector } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport {\n  getCallsInfo,\n  selectInmateById,\n  selectInmateCallsById,\n  selectInmateConnectionsById,\n} from \"src/redux/selectors\";\nimport {\n  Avatar,\n  Col,\n  Descriptions,\n  Layout,\n  PageHeader,\n  Row,\n  Space,\n  Timeline,\n  Typography,\n} from \"antd\";\nimport {\n  WHITE_BACKGROUND_LAYOUT,\n  WRAPPER_STYLE,\n  FULL_WIDTH,\n} from \"src/styles/styles\";\nimport { format } from \"date-fns\";\nimport { genFullName } from \"src/utils/Common\";\nimport { push } from \"connected-react-router\";\nimport { Call } from \"src/typings/Call\";\nimport { ClockCircleOutlined } from \"@ant-design/icons\";\n\nconst { Content } = Layout;\n\ntype TParams = { id: string };\n\nconst mapStateToProps = (\n  state: RootState,\n  ownProps: RouteComponentProps<TParams>\n) => ({\n  inmate: selectInmateById(state, parseInt(ownProps.match.params.id)),\n  connections:\n    selectInmateConnectionsById(state, parseInt(ownProps.match.params.id)) ||\n    [],\n  calls: getCallsInfo(\n    state,\n    selectInmateCallsById(state, parseInt(ownProps.match.params.id)) || []\n  ),\n});\n\nconst mapDispatchToProps = { push };\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst renderItem = (call: Call) => {\n  // TODO timestamp should probably be different her\n  const timestamp = format(call.scheduledStartTime, \"MM/dd HH:mm\");\n  switch (call.status) {\n    case \"scheduled\":\n      return (\n        <Timeline.Item label={timestamp} color=\"yellow\">\n          Call scheduled with {genFullName(call.connection.contact)}\n        </Timeline.Item>\n      );\n    case \"cancelled\":\n      return (\n        <Timeline.Item label={timestamp} color=\"red\">\n          Call with {genFullName(call.connection.contact)} was cancelled\n        </Timeline.Item>\n      );\n    case \"missing-monitor\":\n    case \"live\":\n      return (\n        <Timeline.Item label={timestamp} color=\"green\">\n          Call happening with {genFullName(call.connection.contact)}\n        </Timeline.Item>\n      );\n    case \"terminated\":\n    case \"ended\":\n      return call.videoReady ? (\n        <Timeline.Item label={format(call.scheduledStartTime, \"MM/dd HH:mm\")}>\n          {/* expand this to include other cases */}\n          <Typography.Link onClick={() => push(`/call/${call.id}`)}>\n            Called {genFullName(call.connection.contact)}\n          </Typography.Link>\n        </Timeline.Item>\n      ) : (\n        <Timeline.Item\n          dot={<ClockCircleOutlined style={{ fontSize: \"16px\" }} />}\n          label={timestamp}\n        >\n          {/* expand this to include other cases */}\n          <Typography.Link onClick={() => push(`/call/${call.id}`)}>\n            Processsing call with {genFullName(call.connection.contact)}\n          </Typography.Link>\n        </Timeline.Item>\n      );\n  }\n};\n\nfunction InmateUnconnectedContainer({\n  inmate,\n  connections,\n  calls,\n  push,\n}: PropsFromRedux & RouteComponentProps<TParams>): ReactElement {\n  const facility = useSelector(\n    (state: RootState) => state.facilities.selected?.name\n  );\n\n  if (!inmate || !facility) return <div />;\n\n  const routes = [\n    {\n      path: \"/\",\n      breadcrumbName: facility,\n    },\n    {\n      path: \"/members\",\n      breadcrumbName: \"Logs\",\n    },\n    {\n      path: \"/\",\n      breadcrumbName: genFullName(inmate),\n    },\n  ];\n\n  return (\n    <Layout>\n      <Content style={{ ...WRAPPER_STYLE }}>\n        <PageHeader\n          ghost={false}\n          onBack={() => window.history.back()}\n          title={genFullName(inmate)}\n          subTitle={facility}\n          breadcrumb={{ routes }}\n          style={{ marginBottom: 32 }}\n        >\n          <Descriptions size=\"small\" column={3}>\n            <Descriptions.Item label=\"First Name\">\n              {inmate.firstName}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Last Name\">\n              {inmate.lastName}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Unique ID\">\n              {inmate.inmateNumber}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Location\">\n              {inmate.location}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"DOB\">{inmate.dob}</Descriptions.Item>\n            <Descriptions.Item label=\"Race\">{inmate.race}</Descriptions.Item>\n            <Descriptions.Item label=\"Sentence\">\n              {inmate.sentence}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Sentence Length\">\n              {inmate.sentnceLength}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Call Quota\">\n              {inmate.quota}\n            </Descriptions.Item>\n          </Descriptions>\n        </PageHeader>\n        <Row justify=\"space-between\">\n          <Col\n            flex={1}\n            style={{ ...WHITE_BACKGROUND_LAYOUT, ...WRAPPER_STYLE }}\n          >\n            <Space direction=\"vertical\" style={FULL_WIDTH}>\n              <Typography.Title level={3}>Call Activity</Typography.Title>\n              <Timeline mode={\"left\"}>{calls.map(renderItem)}</Timeline>\n            </Space>\n          </Col>\n          <Col\n            flex={1}\n            style={{ ...WHITE_BACKGROUND_LAYOUT, ...WRAPPER_STYLE }}\n          >\n            <Typography.Title level={3}>Connections</Typography.Title>\n            <Row style={{ ...WRAPPER_STYLE }} justify=\"space-between\">\n              {connections.map((connection) => (\n                <Col span={8}>\n                  <Space direction=\"vertical\">\n                    <Avatar\n                      src={connection.contact.profileImgPath}\n                      size={{\n                        xs: 24,\n                        sm: 32,\n                        md: 40,\n                        lg: 64,\n                        xl: 80,\n                        xxl: 100,\n                      }}\n                    />\n                    <Typography.Text>\n                      {genFullName(connection.contact)}\n                    </Typography.Text>\n                    <Typography.Text>{connection.relationship}</Typography.Text>\n                  </Space>\n                </Col>\n              ))}\n            </Row>\n          </Col>\n        </Row>\n      </Content>\n    </Layout>\n  );\n}\n\nexport default connector(InmateUnconnectedContainer);\n","import { Card } from \"antd\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst COLOR = \"rgba(0, 137, 255, 1)\";\nconst BG = \"rgba(0, 137, 255, 0.4)\";\nconst DARKER_COLOR = \"rgba(2, 117, 216, 1)\";\n\ninterface Props {\n  title: string;\n  labels: string[];\n  label: string;\n  data: number[];\n}\n\nconst LineChart: React.FC<Props> = ({ title, label, labels, data }) => {\n  const chartData = {\n    labels,\n    datasets: [\n      {\n        label,\n        lineTension: 0.1,\n        backgroundColor: BG,\n        borderColor: COLOR,\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: COLOR,\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 5,\n        pointHoverRadius: 8,\n        pointHoverBackgroundColor: COLOR,\n        pointHoverBorderColor: DARKER_COLOR,\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data,\n      },\n    ],\n  };\n\n  return (\n    <Card title={title}>\n      <Line data={chartData} />\n    </Card>\n  );\n};\n\nexport default LineChart;\n","import { Card } from \"antd\";\nimport React, { ReactElement } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { CONTAINER_BORDER_RADIUS } from \"src/styles/styles\";\n\ninterface Props {\n  title: string;\n  labels: string[];\n  data: number[];\n  backgroundColor: string[];\n  hoverBackgroundColor: string[];\n}\nexport default function DonutChart({\n  title,\n  labels,\n  data,\n  backgroundColor,\n  hoverBackgroundColor,\n}: Props): ReactElement {\n  const chartData = {\n    labels,\n    datasets: [\n      {\n        data,\n        backgroundColor,\n        hoverBackgroundColor,\n      },\n    ],\n  };\n\n  return (\n    <Card title={title} style={CONTAINER_BORDER_RADIUS}>\n      <Doughnut data={chartData} />\n    </Card>\n  );\n}\n","import React from \"react\";\n\nimport { Text, View, StyleSheet } from \"@react-pdf/renderer\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    borderBottomWidth: 2,\n    borderBottomColor: \"#112131\",\n    borderBottomStyle: \"solid\",\n    padding: 8,\n    alignItems: \"stretch\",\n  },\n  extraColumn: {\n    flexDirection: \"column\",\n    flexGrow: 2,\n    alignSelf: \"flex-end\",\n  },\n  detailColumn: {\n    flexDirection: \"column\",\n    flexGrow: 9,\n    textTransform: \"uppercase\",\n  },\n  name: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    // fontFamily: \"Lato Bold\",\n  },\n  subtitle: {\n    fontSize: 10,\n    // alignSelf: \"flex-end\",\n    // fontFamily: \"Lato\",\n  },\n  extra: {\n    // fontFamily: \"Lato\",\n    fontSize: 10,\n    color: \"black\",\n    alignSelf: \"flex-end\",\n    fontStyle: \"italic\",\n  },\n});\n\ninterface Props {\n  title: string;\n  subtitle: string;\n  extra: string;\n}\n\nconst Header = ({ title, subtitle, extra }: Props) => (\n  <View style={styles.container}>\n    <View style={styles.detailColumn}>\n      <Text style={styles.name}>{title}</Text>\n      <Text style={styles.subtitle}>{subtitle}</Text>\n    </View>\n    <View style={styles.extraColumn}>\n      <Text style={styles.extra}>{extra}</Text>\n    </View>\n  </View>\n);\n\nexport default Header;\n","import { StyleSheet, Text, View } from \"@react-pdf/renderer\";\nimport React from \"react\";\n\nconst styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    backgroundColor: \"#e5f2ff\",\n    padding: 4,\n  },\n  title: {\n    // fontFamily: 'Lato Bold',\n    fontWeight: \"bold\",\n    fontSize: 16,\n    textTransform: \"uppercase\",\n    width: \"100%\",\n  },\n});\n\nconst SectionHeader = ({ title }: { title: string }) => (\n  <View style={styles.container}>\n    <Text style={styles.title}>{title}</Text>\n  </View>\n);\n\nexport default SectionHeader;\n","import React from \"react\";\nimport { Text, View, StyleSheet } from \"@react-pdf/renderer\";\nimport { genFullName } from \"src/utils/Common\";\nimport { Call } from \"src/typings/Call\";\n\ninterface Props {\n  block: number;\n  calls: Call[];\n  canViewDetails: boolean;\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8,\n    borderBottomWidth: 2,\n    borderBottomColor: \"#112131\",\n    marginBottom: 8,\n  },\n  row: {\n    display: \"flex\",\n    borderBottomStyle: \"solid\",\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    marginVertical: 8,\n  },\n  header: {\n    textDecoration: \"underline\",\n    fontWeight: \"bold\",\n  },\n});\n\nconst DailyReportCall = ({ block, calls, canViewDetails }: Props) => (\n  <View style={styles.container}>\n    {calls.map((call) => (\n      <View key={call.id}>\n        <View style={styles.row}>\n          <View>\n            <Text style={styles.header}>Call ID</Text>\n            <Text>{call.id}</Text>\n          </View>\n          <View>\n            <Text style={styles.header}>Call Station</Text>\n            <Text>{call.kiosk.name}</Text>\n          </View>\n        </View>\n        <View style={styles.row}>\n          <View>\n            <Text style={styles.header}>Incarcerated Person</Text>\n            <Text>{genFullName(call.connection.inmate)}</Text>\n          </View>\n          <View>\n            <Text style={styles.header}>Unique ID</Text>\n            <Text>{call.connection.inmate.inmateNumber}</Text>\n          </View>\n          <View>\n            <Text style={styles.header}>Housing</Text>\n            <Text>{call.connection.inmate.location}</Text>\n          </View>\n        </View>\n        {canViewDetails && (\n          <View style={styles.row}>\n            <View>\n              <Text style={styles.header}>Contact ID</Text>\n              <Text>{call.connection.contact.id}</Text>\n            </View>\n            <View>\n              <Text style={styles.header}>Contact Name</Text>\n              <Text>{genFullName(call.connection.contact)}</Text>\n            </View>\n            <View>\n              <Text style={styles.header}>Relationship</Text>\n              <Text>{call.connection.contact.relationship}</Text>\n            </View>\n          </View>\n        )}\n      </View>\n    ))}\n  </View>\n);\n\nexport default DailyReportCall;\n","import React from \"react\";\nimport { Call } from \"src/typings/Call\";\nimport { Document, Page, View, StyleSheet } from \"@react-pdf/renderer\";\nimport { format } from \"date-fns\";\nimport Header from \"src/components/pdf/Header\";\nimport { SelectedFacility } from \"src/typings/Facility\";\nimport SectionHeader from \"src/components/pdf/SectionHeader\";\nimport DailyReportCall from \"./DailyReportCall\";\n\nconst styles = StyleSheet.create({\n  page: {\n    padding: 30,\n  },\n  container: {\n    flex: 1,\n    flexDirection: \"row\",\n  },\n});\n\ninterface Props {\n  callBlocks: Record<string, Call[]>;\n  facility: SelectedFacility;\n  canViewDetails: boolean;\n}\n\nconst DailyReport: React.FC<Props> = React.memo(\n  ({ callBlocks, facility, canViewDetails }) => (\n    <Document\n      author=\"Ameelio.org\"\n      keywords=\"schedule, conneect\"\n      title=\"Daily Schedule\"\n    >\n      <Page style={styles.page}>\n        <Header\n          title=\"Daily Activity Report\"\n          subtitle={`${facility.name}`}\n          extra={`Generated on ${format(new Date(), \"MMMM/dd/yyyy HH:mm:ss\")}`}\n        />\n        {Object.keys(callBlocks).map((block) => (\n          <View key={block}>\n            <SectionHeader\n              title={format(new Date(parseInt(block)), \"HH:mm\")}\n            ></SectionHeader>\n            <DailyReportCall\n              block={parseInt(block)}\n              calls={callBlocks[block]}\n              canViewDetails={canViewDetails}\n            />\n          </View>\n        ))}\n      </Page>\n    </Document>\n  )\n);\n\nexport default DailyReport;\n","import React, { useEffect, useState } from \"react\";\nimport { Button } from \"antd\";\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\nimport { SelectedFacility } from \"src/typings/Facility\";\nimport { format } from \"date-fns\";\nimport { Call } from \"src/typings/Call\";\nimport DailyReport from \"./DailyReport\";\nimport _ from \"lodash\";\nimport { DownloadOutlined } from \"@ant-design/icons\";\n\ninterface Props {\n  facility: SelectedFacility;\n  calls: Call[];\n  canViewDetails: boolean;\n}\n\nconst PDFDownloadButton: React.FC<Props> = React.memo(\n  ({ calls, facility, canViewDetails }) => {\n    // TODO: delete this safeguard once the maintainers of this package resolve aa known issue\n    // https://github.com/diegomura/react-pdf/issues/844\n    const [hasMounted, setHasMounted] = useState(false);\n\n    useEffect(() => {\n      setTimeout(() => setHasMounted(true), 2000);\n    }, []);\n\n    if (!hasMounted)\n      return (\n        <Button disabled loading>\n          Generating daily report...\n        </Button>\n      );\n\n    return (\n      <PDFDownloadLink\n        document={\n          <DailyReport\n            callBlocks={_.groupBy(calls, (call) => call.scheduledStartTime)}\n            facility={facility}\n            canViewDetails={true}\n          />\n        }\n        fileName={`Daily Schedule | ${facility?.name}@${format(\n          new Date(),\n          \"MM/dd/yyyy-HH:mm\"\n        )}`}\n      >\n        <Button icon={<DownloadOutlined />}>\n          Download Schedule {canViewDetails ? \"(Admin)\" : \"(Public)\"}\n        </Button>\n      </PDFDownloadLink>\n    );\n  }\n);\n\nexport default PDFDownloadButton;\n","import { Card, Statistic } from \"antd\";\nimport React, { ReactElement } from \"react\";\n\ninterface Props {\n  title: string;\n  value: string | number;\n  suffix: string;\n  prefix: JSX.Element;\n}\n\nexport default function MetricCard({\n  title,\n  value,\n  suffix,\n  prefix,\n}: Props): ReactElement {\n  return (\n    <Card>\n      <Statistic title={title} value={value} prefix={prefix} suffix={suffix} />\n    </Card>\n  );\n}\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport LineChart from \"src/components/charts/LineChart\";\nimport DonutChart from \"src/components/charts/DonutChart\";\nimport { Row, Col, Layout, Space } from \"antd\";\nimport {\n  StarOutlined,\n  VideoCameraOutlined,\n  GlobalOutlined,\n} from \"@ant-design/icons\";\nimport {\n  BASE_CHART_COLORS,\n  FULL_WIDTH,\n  WRAPPER_STYLE,\n} from \"src/styles/styles\";\nimport {\n  getCallsInfo,\n  selectAllCalls,\n  selectTotalInmates,\n} from \"src/redux/selectors\";\nimport { RootState } from \"src/redux\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { fetchCalls } from \"src/redux/modules/call\";\nimport PDFDownloadButton from \"./PDFDownloadButton\";\nimport { LiveCall } from \"src/typings/Call\";\nimport { onlyUnique } from \"src/utils/Common\";\nimport MetricCard from \"./MetricCard\";\nimport { format } from \"date-fns\";\nimport _ from \"lodash\";\nimport { callsToday, callsToWeeklyData } from \"src/utils/Call\";\nimport Header from \"src/components/Header/Header\";\n\nconst { Content } = Layout;\n\nconst mapStateToProps = (state: RootState) => ({\n  // TODO update this once we have status selecotr\n  facility: state.facilities.selected,\n  calls: getCallsInfo(state, selectAllCalls(state)) as LiveCall[],\n  numInmates: selectTotalInmates(state),\n});\n\nconst mapDispatchToProps = { fetchCalls };\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nfunction Dashboard({\n  facility,\n  calls,\n  numInmates,\n}: PropsFromRedux): ReactElement {\n  const [ratingsCount, setRatingsCount] = useState<number[]>();\n  const [callVolume, setCallVolume] = useState<Record<string, number>>();\n\n  useEffect(() => {\n    const groups = _.groupBy(\n      calls.filter((call) => !!call.rating),\n      (call) => call.rating\n    );\n    const sortedKeys = _.keys(groups).sort();\n    setRatingsCount(sortedKeys.map((key) => groups[key].length));\n    setCallVolume(callsToWeeklyData(calls));\n  }, [calls]);\n\n  if (!ratingsCount || !callVolume || !facility) return <div />;\n\n  return (\n    <Layout>\n      <Header\n        title=\"Dashboard\"\n        subtitle=\"Analyze your facility data and print the daily call schedule.\"\n        extra={[\n          <PDFDownloadButton\n            calls={callsToday(calls)}\n            facility={facility}\n            canViewDetails={true}\n          />,\n          <PDFDownloadButton\n            calls={callsToday(calls)}\n            facility={facility}\n            canViewDetails={false}\n          />,\n        ]}\n      />\n      <Content>\n        <Space\n          direction=\"vertical\"\n          style={{ ...FULL_WIDTH, ...WRAPPER_STYLE }}\n          size=\"large\"\n        >\n          <Row gutter={16}>\n            <Col span={8} className=\"bg-white\">\n              <MetricCard\n                title=\"Calls This Week\"\n                value={\n                  Object.values(callVolume)[\n                    Object.values(callVolume).length - 1\n                  ]\n                }\n                prefix={<StarOutlined />}\n                suffix={`calls`}\n              />\n            </Col>\n            <Col span={8} className=\"bg-white\">\n              <MetricCard\n                title=\"Live Video Calls\"\n                value={\n                  calls.filter(\n                    (call) =>\n                      call.status === \"live\" ||\n                      call.status === \"missing-monitor\"\n                  ).length\n                }\n                prefix={<VideoCameraOutlined />}\n                suffix=\"calls\"\n              />\n            </Col>\n            <Col span={8} className=\"bg-white\">\n              <MetricCard\n                title=\"Facility Video Usage\"\n                value={(\n                  (calls\n                    .map((call) => call.connection.inmateId)\n                    .filter(onlyUnique).length *\n                    100) /\n                  numInmates\n                ).toFixed(2)}\n                suffix=\"%\"\n                prefix={<GlobalOutlined />}\n              />\n            </Col>\n          </Row>\n          <Row gutter={16}>\n            <Col span={12}>\n              <LineChart\n                title=\"Calls\"\n                label=\"# calls\"\n                labels={Object.keys(callVolume)}\n                data={Object.values(callVolume)}\n              />\n            </Col>\n            <Col span={12}>\n              <DonutChart\n                title={`Ratings Breakdown ${format(new Date(), \"MMMM\")}`}\n                data={ratingsCount}\n                backgroundColor={BASE_CHART_COLORS}\n                hoverBackgroundColor={BASE_CHART_COLORS}\n                labels={[\"Terrible\", \"Poor\", \"Okay\", \"Good\", \"Amazing\"]}\n              />\n            </Col>\n          </Row>\n        </Space>\n      </Content>\n    </Layout>\n  );\n}\n\nexport default connector(Dashboard);\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport { RootState } from \"src/redux\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport {\n  TimePicker,\n  Layout,\n  Row,\n  Col,\n  Space,\n  Button,\n  Typography,\n  Tree,\n} from \"antd\";\nimport { NodeCallSlot } from \"src/typings/Facility\";\nimport { WeekdayMap, WEEKDAYS, DEFAULT_DURATION_MS } from \"src/utils/constants\";\nimport { WHITE_BACKGROUND_LAYOUT, WRAPPER_STYLE } from \"src/styles/styles\";\nimport moment from \"moment\";\nimport { CallBlock, WeeklySchedule } from \"src/typings/Call\";\nimport { Tabs } from \"antd\";\nimport {\n  dayOfWeekAsString,\n  mapCallSlotsToTimeBlock,\n  mapCallBlockToCallSlots,\n} from \"src/utils/Call\";\nimport { cloneObject } from \"src/utils/Common\";\nimport { updateCallTimes } from \"src/redux/modules/facility\";\nimport { format } from \"date-fns\";\nimport Header from \"src/components/Header/Header\";\nimport { selectAllNodes } from \"src/redux/selectors\";\nimport { DataNode } from \"antd/lib/tree\";\n\nconst { TabPane } = Tabs;\nconst { RangePicker } = TimePicker;\nconst { Content } = Layout;\n\nconst mapStateToProps = (state: RootState) => ({\n  facility: state.facilities.selected,\n  nodes: selectAllNodes(state),\n});\nconst mapDispatchToProps = { updateCallTimes };\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype Tab = \"setting\" | \"facility\";\n\nfunction SettingsContainer({\n  facility,\n  nodes,\n  updateCallTimes,\n}: PropsFromRedux): ReactElement {\n  const [ranges, setRanges] = useState<WeeklySchedule>();\n  const [activeTab, setActiveTab] = useState<Tab>(\"setting\");\n  const [callSlots, setCallSlots] = useState<NodeCallSlot[]>([]);\n\n  useEffect(() => {\n    if (facility) {\n      setCallSlots(facility.callTimes);\n      setRanges(mapCallSlotsToTimeBlock(facility.callTimes));\n    }\n  }, [facility]);\n\n  if (!facility || !ranges) return <div />;\n\n  const dateFormat = \"HH:mm\";\n\n  const tabCallback = (key: string) => {\n    setActiveTab(key as Tab);\n  };\n\n  const onChange = (start: Date, end: Date, day: WeekdayMap, idx: number) => {\n    const r = cloneObject(ranges) as WeeklySchedule;\n    // update call block\n    r[day][idx] = {\n      start: start.toString(),\n      end: end.toString(),\n      duration: DEFAULT_DURATION_MS,\n      idx,\n      day,\n    };\n    setCallSlots(mapCallBlockToCallSlots(r));\n    setRanges(r);\n  };\n\n  const handleSubmission = (e: React.MouseEvent) => {\n    updateCallTimes({ callSlots, zone: \"America_LosAngeles\" });\n  };\n  const renderItem = (day: WeekdayMap, ranges: CallBlock[]) => {\n    return (\n      <Row style={{ width: \"100%\", margin: 16 }}>\n        <Col flex={1} span={12}>\n          <Typography.Text>{dayOfWeekAsString(day)}</Typography.Text>\n        </Col>\n        {/* <Col> */}\n        <Col flex={1} span={12}>\n          <Space direction=\"vertical\">\n            {ranges.length > 0 ? (\n              ranges.map((time) => (\n                <RangePicker\n                  minuteStep={30}\n                  use12Hours={true}\n                  defaultValue={[\n                    moment(\n                      format(new Date(time.start), dateFormat),\n                      dateFormat\n                    ),\n                    moment(format(new Date(time.end), dateFormat), dateFormat),\n                  ]}\n                  onChange={(values) => {\n                    if (!values || !values[0] || !values[1]) return;\n                    // TODO with date range picker, convert to right day\n                    onChange(\n                      values[0].toDate(),\n                      values[1].toDate(),\n                      day,\n                      time.idx\n                    );\n                  }}\n                  format={dateFormat}\n                />\n              ))\n            ) : (\n              <RangePicker\n                format={dateFormat}\n                minuteStep={30}\n                use12Hours={true}\n                onChange={(values) => {\n                  if (!values || !values[0] || !values[1]) return;\n                  onChange(values[0].toDate(), values[1].toDate(), day, 0);\n                }}\n              />\n            )}\n          </Space>\n        </Col>\n        {/* </Col> */}\n      </Row>\n    );\n  };\n\n  return (\n    <Content>\n      <Header\n        title=\"Settings\"\n        subtitle=\"Adjust the call hours, facility information, and facility kiosk directory as needed.\"\n      />\n      <div style={WRAPPER_STYLE}>\n        <Content style={WHITE_BACKGROUND_LAYOUT}>\n          <Tabs defaultActiveKey={activeTab} onChange={tabCallback}>\n            <TabPane tab=\"General Settings\" key=\"setting\">\n              <Space direction=\"vertical\">\n                {WEEKDAYS.map((weekday) =>\n                  renderItem(weekday, ranges[weekday])\n                )}\n                <Button type=\"primary\" block onClick={handleSubmission}>\n                  Save Changes\n                </Button>\n              </Space>\n            </TabPane>\n            <TabPane tab=\"Facility\" key=\"facility\">\n              <Tree\n                treeData={nodes as DataNode[]}\n                defaultExpandAll={true}\n                draggable={true}\n              />\n            </TabPane>\n            {/* <TabPane tab=\"Call Hours\" key=\"facility\"></TabPane> */}\n          </Tabs>\n        </Content>\n      </div>\n    </Content>\n  );\n}\n\nexport default connector(SettingsContainer);\n","import React, { ReactElement } from \"react\";\nimport { Space, Typography } from \"antd\";\nimport { format } from \"date-fns\";\nimport { CallMessage } from \"src/typings/Call\";\n\nexport function MessageDisplay({\n  message,\n}: {\n  message: CallMessage;\n}): ReactElement {\n  const { type } = message.from;\n  const getDisplayName = () => {\n    switch (type) {\n      case \"inmate\":\n        return \"You\";\n      case \"monitor\":\n        return \"DOC\";\n      case \"user\":\n        return \"Loved One\";\n    }\n  };\n  return (\n    <Space\n      direction=\"vertical\"\n      align={type === \"inmate\" ? \"end\" : \"start\"}\n      style={{ width: \"100%\" }}\n    >\n      <Space>\n        <Typography.Text strong>{getDisplayName()}</Typography.Text>\n        <Typography.Text type=\"secondary\">\n          {format(new Date(message.timestamp), \"HH:mm\")}\n        </Typography.Text>\n      </Space>\n      <Typography.Text>{message.content}</Typography.Text>\n    </Space>\n  );\n}\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport { RootState } from \"src/redux\";\nimport { connect, ConnectedProps, useSelector } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { fetchRecording } from \"src/redux/modules/call\";\nimport { getCallInfo } from \"src/redux/selectors\";\nimport { Button, Descriptions, Layout, PageHeader, Space } from \"antd\";\nimport ReactPlayer from \"react-player\";\nimport { WRAPPER_STYLE } from \"src/styles/styles\";\nimport { format } from \"date-fns\";\nimport { genFullName } from \"src/utils/Common\";\nimport { DownloadOutlined, InfoCircleOutlined } from \"@ant-design/icons\";\nimport { CallMessage, RecordedCall } from \"src/typings/Call\";\nimport { MessageDisplay } from \"./MessageDisplay\";\n\nconst { Content, Sider } = Layout;\n\nconst mapStateToProps = (\n  state: RootState,\n  ownProps: RouteComponentProps<TParams>\n) => ({\n  call: getCallInfo(state, parseInt(ownProps.match.params.id)) as RecordedCall,\n});\n\nconst mapDispatchToProps = { fetchRecording };\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype TParams = { id: string };\n\nfunction RecordingBase({\n  call,\n  match,\n  fetchRecording,\n}: PropsFromRedux & RouteComponentProps<TParams>): ReactElement {\n  const [callId] = useState(match.params.id);\n  const [chatCollapsed, setChatCollapsed] = useState(false);\n  const [recordingUrl, setRecordingUrl] = useState<string>();\n  const [messages, setMessages] = useState<CallMessage[]>([]);\n\n  const facility = useSelector(\n    (state: RootState) => state.facilities.selected?.name\n  );\n\n  useEffect(() => {\n    // TODO what if data is not loaded\n    if (call && !call.recordingUrl) {\n      // TODO this can lead to infinite loops, add loaded flag to model\n      fetchRecording(call.id);\n    }\n  }, [call, fetchRecording]);\n\n  useEffect(() => {\n    if (call?.recordingUrl) {\n      setRecordingUrl(call.recordingUrl);\n    }\n    if (call?.messages) {\n      setMessages(call.messages);\n    }\n  }, [call, setRecordingUrl]);\n\n  const routes = [\n    {\n      path: \"logs\",\n      breadcrumbName: \"Logs\",\n    },\n    {\n      path: \"call\",\n      breadcrumbName: `Call #${callId}`,\n    },\n  ];\n\n  if (!call) return <div />;\n\n  return (\n    <Layout>\n      <Content style={WRAPPER_STYLE}>\n        <ReactPlayer\n          autoplay={true}\n          muted={true}\n          controls={true}\n          width=\"100%\"\n          url={call.recordingUrl}\n        />\n        <PageHeader\n          ghost={false}\n          onBack={() => window.history.back()}\n          title={`Call #${callId}`}\n          subTitle={facility}\n          breadcrumb={{ routes }}\n          extra={[\n            <Button\n              key=\"download\"\n              download\n              target={\"_blank\"}\n              icon={<DownloadOutlined />}\n              href={recordingUrl}\n            >\n              Download\n            </Button>,\n            <Button\n              key=\"info\"\n              onClick={() => console.log(\"add connection page\")}\n              icon={<InfoCircleOutlined />}\n            >\n              Connection\n            </Button>,\n          ]}\n        >\n          <Descriptions size=\"small\" column={3}>\n            <Descriptions.Item label=\"Incarcerated Person\">\n              {genFullName(call.connection.inmate)}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Inmate ID\">\n              {call.connection.inmate.id}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Visitor\">\n              {genFullName(call.connection.contact)}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Relationship\">\n              {call.connection.relationship}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Date\">\n              {format(call.startTime, \"HH:mm\")}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Start Time\">\n              {format(call.startTime, \"HH:mm\")}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"End Time\">\n              {format(call.endTime, \"HH:mm\")}\n            </Descriptions.Item>\n            {/* TODO add kiosk name once we incoporate the nodes endpoint */}\n            <Descriptions.Item label=\"Location\">\n              Under the stairs\n            </Descriptions.Item>\n          </Descriptions>\n        </PageHeader>\n      </Content>\n      <Sider\n        theme=\"light\"\n        style={{ height: \"100vh\", maxHeight: \"100vh\" }}\n        width={300}\n        collapsible\n        collapsed={chatCollapsed}\n        onCollapse={(collapsed) => setChatCollapsed(collapsed)}\n      >\n        {!chatCollapsed && (\n          <div>\n            <PageHeader title=\"Chat\" />{\" \"}\n            <div style={WRAPPER_STYLE}>\n              <Space\n                direction=\"vertical\"\n                style={{\n                  overflowY: \"scroll\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  height: \"100%\",\n                }}\n              >\n                {messages.map((message) => (\n                  <MessageDisplay message={message} />\n                ))}\n              </Space>\n            </div>\n          </div>\n        )}\n      </Sider>\n    </Layout>\n  );\n}\n\nexport default connector(RecordingBase);\n","import LiveVisitationsPage from \"src/pages/LiveCall\";\nimport CalendarPage from \"src/pages/Calendar\";\nimport RequestsPage from \"src/pages/ConnectionRequests\";\nimport LogsPage from \"src/pages/CallLogs\";\nimport StaffPage from \"src/pages/Staff\";\nimport InmatesPage from \"src/pages/Inmates\";\nimport InmateDetailPage from \"src/pages/Inmate\";\n\nimport DashboardPage from \"src/pages/Dashboard\";\nimport SettingsPage from \"src//pages/Settings\";\nimport RecordingPage from \"src/pages/Recording\";\nimport { CallAlert, GridOption } from \"src/typings/Call\";\nimport { Route } from \"src/typings/Common\";\n\nexport enum CardType {\n  LiveCall = \"live\",\n  Contact = \"contact\",\n  ConnectionRequest = \"request\",\n  ApprovedConnectioo = \"connection\",\n  Inmate = \"inmate\",\n  Staff = \"staff\",\n  PastVisitation = \"record\",\n}\n\nexport enum CardSize {\n  Small = \"small\",\n  Medium = \"medium\",\n  Large = \"large\",\n}\n\nexport enum LoadingTypes {\n  AcceptConnection = \"accept\",\n  FetchRecording = \"video\",\n}\n\nexport const UNAUTHENTICATED_USER_ID = -999;\n\nexport const TOKEN_KEY = \"token\";\nexport const REMEMBER_TOKEN_KEY = \"remember\";\n\nexport const STAFF_PERMISSION_OPTIONS: Record<Permission, string> = {\n  allowRead: \"Can view\",\n  allowCalltimes: \"Manage calltimes\",\n  allowApproval: \"Approve connections\",\n  allowRestructure: \"Reorganize facility\",\n  allowMonitor: \"Monitor live calls\",\n};\n\nexport enum WeekdayMap {\n  Sunday = 0,\n  Monday = 1,\n  Tuesday = 2,\n  Wednesday = 3,\n  Thursday = 4,\n  Friday = 5,\n  Saturday = 6,\n}\n\nexport const ROUTES: Route[] = [\n  { path: \"/calendar\", component: CalendarPage, label: \"Page\" },\n  { path: \"/requests\", component: RequestsPage, label: \"Connection Requests\" },\n  { path: \"/logs\", component: LogsPage, label: \"Search for Visits\" },\n  { path: \"/staff\", component: StaffPage, label: \"Staff\" },\n  { path: \"/members\", component: InmatesPage, label: \"Inmates\" },\n  {\n    path: \"/members/:id\",\n    component: InmateDetailPage,\n    label: \"Incarcerated Individual\",\n  },\n  { path: \"/visitations\", component: LiveVisitationsPage, label: \"Live Calls\" },\n  { path: \"/settings\", component: SettingsPage, label: \"Settings\" },\n  { path: \"/call/:id\", component: RecordingPage, label: \"Past Call\" },\n  { path: \"/\", component: DashboardPage, label: \"Dashboard\" },\n];\n\nexport const WEEKDAYS = [\n  WeekdayMap.Sunday,\n  WeekdayMap.Monday,\n  WeekdayMap.Tuesday,\n  WeekdayMap.Wednesday,\n  WeekdayMap.Thursday,\n  WeekdayMap.Friday,\n  WeekdayMap.Saturday,\n];\n\n// 30 min\nexport const DEFAULT_DURATION_MS = 1800000;\n\nexport const SIDEBAR_WIDTH = 216;\n\nexport const GRID_TO_SPAN_WIDTH: { [key in GridOption]: number } = {\n  1: 24,\n  2: 12,\n  4: 12,\n  6: 8,\n  8: 6,\n};\n\nexport const GRID_TO_VH_HEIGHT: { [key in GridOption]: number } = {\n  1: 80,\n  2: 80,\n  4: 40,\n  6: 40,\n  8: 40,\n};\n\nexport const CALL_ALERTS: CallAlert[] = [\n  {\n    id: 0,\n    title: \"Unallowed visitor\",\n    body:\n      \"All participants on the call must have  been registered and pre-approved ahead of time. The presence of unallowed visitors may lead to call termination.\",\n  },\n  {\n    id: 1,\n    title: \"Appropriate clothing\",\n    body:\n      \"All adult and minor visitors, including attorneys, must be fully dressed in appopriate, conventional clothing which is not unduly provocative, suggestive, or revealing and does not resemble offender attire or present adornments which could be used as a weapon.\",\n  },\n  {\n    id: 2,\n    title: \"Clothing exposure\",\n    body:\n      \"Any clothing worn on the top half of the body must have sleeves and not expose the cleavage line, back, midriff and/or underarm at any time while standing, sitting, and/or bending down.\",\n  },\n  {\n    id: 3,\n    title: \"Appropriate undergarments\",\n    body: \"Appropriate undergarments are required, and will not be visible.\",\n  },\n  {\n    id: 4,\n    title: \"No sheer clothing\",\n    body:\n      \"Clothing which is sheer or transparent will not be permitted. Clothing that contains holes and/or rips will not be permitted.\",\n  },\n  {\n    id: 5,\n    title: \"Clothing no shorter than knee\",\n    body:\n      \"Outer garments worn on the bottom half of the body must be no shorter than the knee while standing.\",\n  },\n  {\n    id: 6,\n    title: \"Leggings no shorter than knee\",\n    body:\n      \"Leggings and jeggings may only be worn under outer garments that must be no shorter than the knee while standing.\",\n  },\n];\n","import { User } from \"src/typings/Session\";\nimport {\n  REMEMBER_TOKEN_KEY,\n  TOKEN_KEY,\n  UNAUTHENTICATED_USER_ID,\n} from \"src/utils/constants\";\n\n// TODO migrate this to redux slice\n// @gabe: I attempted the migraton, but it's creating some wild circular dependeies\n\ntype SessionStatus = \"inactive\" | \"active\" | \"loading\";\n\ninterface SessionState {\n  status: SessionStatus;\n  user: User;\n  redirectUrl: string;\n}\n\n// Constants & Shapes\nconst SET_SESSION = \"user/SET_SESSION\";\nconst SET_REDIRECT_URL = \"user/SET_REDIRECT_URL\";\nconst LOGOUT = \"user/LOGOUT\";\nconst SET_SESSION_STATUS = \"user/SET_SESSION_STATUS\";\n\ninterface SetSessionAction {\n  type: typeof SET_SESSION;\n  payload: User;\n}\ninterface LogoutAction {\n  type: typeof LOGOUT;\n}\n\ninterface SetRedirectUrlAction {\n  type: typeof SET_REDIRECT_URL;\n  payload: string;\n}\n\ninterface SetSessionStatusAction {\n  type: typeof SET_SESSION_STATUS;\n  payload: SessionStatus;\n}\n\ntype UserActionTypes =\n  | LogoutAction\n  | SetSessionAction\n  | SetRedirectUrlAction\n  | SetSessionStatusAction;\n\nexport const logout = (): UserActionTypes => {\n  return {\n    type: LOGOUT,\n  };\n};\n\nexport const setSession = (user: User): UserActionTypes => {\n  return {\n    type: SET_SESSION,\n    payload: user,\n  };\n};\n\nexport const setRedirectUrl = (url: string): UserActionTypes => {\n  return {\n    type: SET_REDIRECT_URL,\n    payload: url,\n  };\n};\n\nexport const setSessiooStatus = (status: SessionStatus): UserActionTypes => {\n  return {\n    type: SET_SESSION_STATUS,\n    payload: status,\n  };\n};\n// Reducer\nconst initialState: SessionState = {\n  user: {\n    id: UNAUTHENTICATED_USER_ID,\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    token: \"\",\n    remember: \"\",\n  },\n  status: \"inactive\",\n  redirectUrl: \"/\",\n};\n\nexport function sessionReducer(\n  state = initialState,\n  action: UserActionTypes\n): SessionState {\n  switch (action.type) {\n    case SET_SESSION:\n      return { ...state, user: action.payload, status: \"active\" };\n    case LOGOUT:\n      sessionStorage.removeItem(TOKEN_KEY);\n      sessionStorage.removeItem(REMEMBER_TOKEN_KEY);\n      return {\n        ...state,\n        user: {\n          id: UNAUTHENTICATED_USER_ID,\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          token: \"\",\n          remember: \"\",\n        },\n        status: \"inactive\",\n        redirectUrl: \"/\",\n      };\n    case SET_REDIRECT_URL:\n      return { ...state, redirectUrl: action.payload };\n    case SET_SESSION_STATUS:\n      return { ...state, status: action.payload };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { staffSlice } from \"./modules/staff\";\nimport { inmatesSlice } from \"./modules/inmate\";\nimport { sessionReducer } from \"./modules/session\";\nimport { connectionsSlice } from \"./modules/connections\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { contactsSlice } from \"./modules/contact\";\nimport { callsSlice } from \"./modules/call\";\nimport { facilitiesSlice } from \"./modules/facility\";\nimport { connectRouter, routerMiddleware } from \"connected-react-router\";\nimport { createBrowserHistory, History } from \"history\";\nimport { socketsSlice } from \"./modules/socket\";\nimport { nodesSlice } from \"./modules/node\";\nimport { kiosksSlice } from \"./modules/kiosk\";\n\nexport const history = createBrowserHistory();\n\nexport const createRootReducer = (history: History) =>\n  combineReducers({\n    staff: staffSlice.reducer,\n    session: sessionReducer,\n    inmates: inmatesSlice.reducer,\n    contacts: contactsSlice.reducer,\n    connections: connectionsSlice.reducer,\n    calls: callsSlice.reducer,\n    facilities: facilitiesSlice.reducer,\n    router: connectRouter(history),\n    sockets: socketsSlice.reducer,\n    nodes: nodesSlice.reducer,\n    kiosks: kiosksSlice.reducer,\n  });\n\nexport const rootReducer = createRootReducer(history);\n\nexport const Store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(routerMiddleware(history)),\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface SocketState {\n  socket?: SocketIOClient.Socket;\n}\n\nconst initialState: SocketState = {};\n\nexport const socketsSlice = createSlice({\n  name: \"socket\",\n  initialState: initialState,\n  reducers: {\n    setSocket: (state, action: PayloadAction<SocketIOClient.Socket>) => ({\n      ...state,\n      socket: action.payload,\n    }),\n  },\n});\n\nexport const socketsActions = socketsSlice.actions;\n","import { API_URL, fetchTimeout } from \"./Common\";\nimport url from \"url\";\nimport { setSessiooStatus, setSession } from \"src/redux/modules/session\";\nimport { Store } from \"src/redux\";\nimport { REMEMBER_TOKEN_KEY, TOKEN_KEY } from \"src/utils/constants\";\nimport camelcaseKeys from \"camelcase-keys\";\nimport { User, UserCredentials } from \"src/typings/Session\";\n\nasync function initializeSession(body: any) {\n  const user = camelcaseKeys(body.data) as User;\n  Store.dispatch(setSession(user));\n\n  localStorage.setItem(TOKEN_KEY, user.token);\n  localStorage.setItem(REMEMBER_TOKEN_KEY, user.remember);\n  // loadData();\n}\n\nexport async function loginWithToken(): Promise<void> {\n  try {\n    const remember = localStorage.getItem(REMEMBER_TOKEN_KEY);\n    if (!remember) {\n      throw Error(\"Cannot load token\");\n    }\n    Store.dispatch(setSessiooStatus(\"loading\"));\n    const response = await fetchTimeout(\n      url.resolve(API_URL, \"auth/login/remember\"),\n      {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          remember: remember,\n        }),\n      }\n    );\n    const body = await response.json();\n    if (body.status !== 200) {\n      Store.dispatch(setSessiooStatus(\"inactive\"));\n      throw body;\n    }\n    await initializeSession(body);\n  } catch (err) {\n    throw Error(err);\n  }\n}\n\nexport async function loginWithCredentials(\n  cred: UserCredentials\n): Promise<void> {\n  Store.dispatch(setSessiooStatus(\"loading\"));\n  const response = await fetchTimeout(url.resolve(API_URL, \"auth/login\"), {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      email: cred.email,\n      password: cred.password,\n    }),\n  });\n  const body = await response.json();\n  if (body.status !== 200) {\n    Store.dispatch(setSessiooStatus(\"inactive\"));\n    throw body;\n  }\n  await initializeSession(body);\n}\n","import React, { ReactElement } from \"react\";\nimport { RootState } from \"src/redux\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport {\n  Input,\n  Layout,\n  Button,\n  Form,\n  Checkbox,\n  Row,\n  Typography,\n  Space,\n  Card,\n} from \"antd\";\n\n// import { ReactComponent as Operator } from \"src/assets/avatars/bald.svg\";\n// import { ReactComponent as Supervisor } from \"src/assets/avatars/woman.svg\";\n// import { ReactComponent as Admin } from \"src/assets/avatars/professor.svg\";\n// import { ReactComponent as Investigator } from \"src/assets/avatars/investigator.svg\";\n// import { OPERATOR, SUPERVISOR, ADMIN, INVESTIGATOR } from \"src/data/sample\";\nimport { ReactComponent as Logo } from \"src/assets/logo.svg\";\nimport \"./index.css\";\nimport { Redirect } from \"react-router\";\nimport { loginWithCredentials } from \"src/api/Session\";\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { UI } from \"src/utils\";\n\nconst { Content } = Layout;\n\nconst mapStateToProps = (state: RootState) => ({\n  session: state.session,\n});\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst TOAST_KEY = \"login\";\n\nfunction UnconnectedLoginContainer({ session }: PropsFromRedux): ReactElement {\n  if (session.status === \"active\") {\n    UI.showToast(\n      TOAST_KEY,\n      `Welcome back, ${session.user.firstName}!`,\n      \"success\"\n    );\n    return <Redirect to={session.redirectUrl} />;\n  }\n\n  const onFinish = async (values: any) => {\n    UI.showToast(TOAST_KEY, \"Authenticating with credentials...\", \"loading\");\n    try {\n      await loginWithCredentials({\n        email: values.email,\n        password: values.password,\n        remember: values.remember,\n      });\n    } catch (err) {\n      UI.showToast(TOAST_KEY, \"Invalid email or password\", \"error\");\n    }\n  };\n\n  const onFinishFailed = (_errorInfo: any) => {\n    UI.showToast(TOAST_KEY, \"Invalid email or password\", \"error\");\n  };\n\n  return (\n    <Content className=\"d-flex flex-column\">\n      <Space direction=\"vertical\" className=\"m-auto\">\n        <Row justify=\"center\">\n          <Logo className=\"login-logo\" />\n        </Row>\n\n        <Card className=\"login-form-container\">\n          <Row justify=\"center\">\n            <Typography.Title level={3}>Log in to Ameelio</Typography.Title>\n          </Row>\n          <Form\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            className=\"login-form\"\n          >\n            <Form.Item\n              name=\"email\"\n              rules={[{ required: true, message: \"Email is required.\" }]}\n            >\n              <Input\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Email\"\n              />\n            </Form.Item>\n\n            <Form.Item\n              name=\"password\"\n              rules={[{ required: true, message: \"Password is required.\" }]}\n            >\n              <Input.Password\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Password\"\n              />\n            </Form.Item>\n\n            <Form.Item name=\"remember\" valuePropName=\"checked\">\n              <Checkbox>Remember me</Checkbox>\n            </Form.Item>\n\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                size=\"large\"\n                block\n                loading={session.status === \"loading\"}\n              >\n                Log In\n              </Button>\n            </Form.Item>\n          </Form>\n        </Card>\n      </Space>\n    </Content>\n  );\n}\n\nexport default connector(UnconnectedLoginContainer);\n","import * as React from \"react\";\nimport { Redirect, Route, RouteProps } from \"react-router\";\n\nexport interface ProtectedRouteProps extends RouteProps {\n  isAuthenticated: boolean;\n  authenticationPath: string;\n}\n\nexport const ProtectedRoute: React.FC<ProtectedRouteProps> = (props) => {\n  let redirectPath = \"\";\n  if (!props.isAuthenticated) {\n    redirectPath = props.authenticationPath;\n  }\n\n  if (redirectPath) {\n    const renderComponent = () => <Redirect to={{ pathname: redirectPath }} />;\n    return <Route {...props} component={renderComponent} render={undefined} />;\n  } else {\n    return <Route {...props} />;\n  }\n};\n\nexport default ProtectedRoute;\n","import React, { ReactElement, useState } from \"react\";\nimport { Layout, Menu as AntdMenu, Avatar, Space, Dropdown, Badge } from \"antd\";\nimport {\n  DesktopOutlined,\n  PieChartOutlined,\n  TeamOutlined,\n  SettingOutlined,\n  UserAddOutlined,\n  DownOutlined,\n} from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { Facility, SelectedFacility } from \"src/typings/Facility\";\nimport \"./Menu.css\";\nimport { genFullName, getInitials, generateBgColor } from \"src/utils/Common\";\nimport { SIDEBAR_WIDTH } from \"src/utils/constants\";\nimport { User } from \"src/typings/Session\";\n\nconst { Sider } = Layout;\nconst { SubMenu } = AntdMenu;\n\ninterface Props {\n  isLoggedIn: boolean;\n  user: User;\n  selected: SelectedFacility;\n  facilities: Facility[];\n  logout: () => void;\n  select: (facility: Facility) => void;\n  requestsCount: number;\n  liveCallsCount: number;\n}\n\nconst FacilityAvatar = ({ facility }: { facility: Facility }): JSX.Element => (\n  <Avatar\n    size=\"large\"\n    shape=\"square\"\n    style={{ backgroundColor: generateBgColor(facility.name) }}\n  >\n    {getInitials(facility.name)}\n  </Avatar>\n);\n\nexport default function Menu({\n  isLoggedIn,\n  user,\n  selected,\n  facilities,\n  select,\n  logout,\n  requestsCount,\n  liveCallsCount,\n}: Props): ReactElement {\n  const [collapsed, setCollapsed] = useState<boolean>(false);\n  const history = useHistory();\n  if (!isLoggedIn) return <div />;\n\n  const headerMenu = (\n    <AntdMenu>\n      <SubMenu key=\"sub2\" title=\"Switch Organization\">\n        {facilities.map((facility) => (\n          <AntdMenu.Item key={facility.nodeId} onClick={() => select(facility)}>\n            <Space>\n              <FacilityAvatar facility={facility} />\n              <span>{facility.name}</span>\n            </Space>\n          </AntdMenu.Item>\n        ))}\n      </SubMenu>\n      <AntdMenu.Item>\n        <span onClick={() => logout()}>Log out</span>\n      </AntdMenu.Item>\n    </AntdMenu>\n  );\n\n  return (\n    <Sider\n      collapsible\n      collapsed={collapsed}\n      onCollapse={(collapsed) => setCollapsed(collapsed)}\n      width={SIDEBAR_WIDTH}\n    >\n      <Dropdown overlay={headerMenu}>\n        <Space align=\"center\" className=\"menu-header\">\n          <FacilityAvatar facility={selected} />\n          {!collapsed && (\n            <Space direction=\"vertical\" size={0}>\n              <Space align=\"center\">\n                <span className=\"menu-header-facility\">{selected.name}</span>\n                <DownOutlined style={{ color: \"white\" }} />\n              </Space>\n              <span className=\"menu-header-name\">{genFullName(user)}</span>\n            </Space>\n          )}\n        </Space>\n      </Dropdown>\n\n      {/* </div> */}\n      <AntdMenu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\">\n        <AntdMenu.Item\n          key=\"dash\"\n          icon={<PieChartOutlined />}\n          onClick={() => history.push(\"/\")}\n        >\n          Dashboard\n        </AntdMenu.Item>\n        <AntdMenu.Item\n          key=\"live\"\n          icon={<DesktopOutlined />}\n          onClick={() => history.push(\"/visitations\")}\n        >\n          Live Video Calls\n          <Badge count={liveCallsCount} />\n        </AntdMenu.Item>\n        <AntdMenu.Item\n          key=\"requests\"\n          icon={<UserAddOutlined />}\n          onClick={() => history.push(\"/requests\")}\n        >\n          Approval Requests\n          <Badge count={requestsCount} />\n        </AntdMenu.Item>\n        <AntdMenu.Item\n          key=\"search\"\n          icon={<UserAddOutlined />}\n          onClick={() => history.push(\"/logs\")}\n        >\n          Search for Visits\n        </AntdMenu.Item>\n        <AntdMenu.Item\n          key=\"staff\"\n          icon={<TeamOutlined />}\n          onClick={() => history.push(\"/staff\")}\n        >\n          Staff\n        </AntdMenu.Item>\n        <AntdMenu.Item\n          key=\"members\"\n          icon={<TeamOutlined />}\n          onClick={() => history.push(\"/members\")}\n        >\n          Incarcerated People\n        </AntdMenu.Item>\n        <AntdMenu.Item\n          key=\"settings\"\n          icon={<SettingOutlined />}\n          onClick={() => history.push(\"/settings\")}\n        >\n          Settings\n        </AntdMenu.Item>\n      </AntdMenu>\n    </Sider>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.scss\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport { RootState } from \"src/redux\";\nimport { connect, ConnectedProps, useSelector } from \"react-redux\";\nimport ProtectedRoute, {\n  ProtectedRouteProps,\n} from \"./components/hocs/ProtectedRoute\";\nimport { loginWithToken } from \"./api/Session\";\nimport Menu from \"./components/Menu/Menu\";\nimport { Layout, Spin } from \"antd\";\nimport { logout, setRedirectUrl } from \"src/redux/modules/session\";\nimport { fetchFacilities } from \"./redux/modules/facility\";\nimport {\n  selectAllFacilities,\n  selectConnectionRequests,\n  selectLiveCalls,\n} from \"./redux/selectors\";\nimport { selectActiveFacility } from \"src/redux/modules/facility\";\nimport { ROUTES } from \"./utils/constants\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { History } from \"history\";\nimport { fetchContacts } from \"./redux/modules/contact\";\nimport { fetchStaff } from \"./redux/modules/staff\";\nimport { fetchInmates } from \"./redux/modules/inmate\";\nimport { fetchConnections } from \"./redux/modules/connections\";\nimport { fetchNodes } from \"./redux/modules/node\";\nimport { fetchKiosks } from \"./redux/modules/kiosk\";\nimport { fetchCalls } from \"./redux/modules/call\";\nimport { startOfMonth } from \"date-fns/esm\";\nimport { endOfMonth } from \"date-fns\";\nimport { Facility } from \"./typings/Facility\";\n\nconst mapStateToProps = (state: RootState) => ({\n  session: state.session,\n  selected: state.facilities.selected,\n  pathname: state.router.location.pathname,\n  liveCallsCount: selectLiveCalls(state).length,\n  requestsCount: selectConnectionRequests(state).length,\n});\nconst mapDispatchToProps = {\n  logout,\n  fetchFacilities,\n  selectActiveFacility,\n  fetchContacts,\n  fetchStaff,\n  fetchInmates,\n  fetchConnections,\n  fetchNodes,\n  fetchKiosks,\n  fetchCalls,\n  setRedirectUrl,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst LOGIN_PATH = \"/login\";\n\nconst Loader = () => (\n  <div className=\"d-flex vh-100 vw-100\">\n    <Spin size=\"large\" className=\"m-auto\" tip={\"Loading workpace...\"} />\n  </div>\n);\n\nfunction App({\n  session,\n  selected,\n  pathname,\n  liveCallsCount,\n  requestsCount,\n  selectActiveFacility,\n  logout,\n  fetchFacilities,\n  fetchContacts,\n  fetchInmates,\n  fetchStaff,\n  fetchConnections,\n  fetchNodes,\n  fetchKiosks,\n  fetchCalls,\n  setRedirectUrl,\n  history,\n}: PropsFromRedux & { history: History }) {\n  const [isAuthenticated, setIsAuthenticated] = useState(\n    session.status === \"active\"\n  );\n  const [isInitingData, setIsInitingData] = useState(true);\n\n  useEffect(() => setIsAuthenticated(session.status === \"active\"), [\n    session.status,\n  ]);\n\n  const defaultProtectedRouteProps: ProtectedRouteProps = {\n    isAuthenticated,\n    authenticationPath: LOGIN_PATH,\n  };\n\n  const facilities = useSelector(selectAllFacilities);\n\n  useEffect(() => {\n    // localStorage.setItem(\"debug\", \"*\");\n    localStorage.removeItem(\"debug\");\n    (async () => {\n      try {\n        await loginWithToken();\n        await fetchFacilities();\n      } catch (err) {}\n    })();\n  }, [fetchFacilities]);\n\n  useEffect(() => {\n    if (isAuthenticated) fetchFacilities();\n  }, [isAuthenticated, fetchFacilities]);\n\n  useEffect(() => {\n    if (!isAuthenticated && pathname !== LOGIN_PATH) setRedirectUrl(pathname);\n  }, [setRedirectUrl, isAuthenticated, pathname]);\n\n  useEffect(() => {\n    if (selected) {\n      setIsInitingData(true);\n      (async () => {\n        await Promise.allSettled([\n          fetchContacts(),\n          fetchStaff(),\n          fetchInmates(),\n          fetchConnections(),\n          fetchKiosks(),\n          fetchNodes(),\n        ]);\n        fetchCalls({\n          startDate: startOfMonth(new Date()).getTime(),\n          endDate: endOfMonth(new Date()).getTime(),\n        });\n      })().then(() => setIsInitingData(false));\n    }\n  }, [\n    selected,\n    fetchContacts,\n    fetchStaff,\n    fetchConnections,\n    fetchInmates,\n    fetchNodes,\n    fetchCalls,\n    fetchKiosks,\n  ]);\n\n  return (\n    <ConnectedRouter history={history}>\n      <Layout style={{ minHeight: \"100vh\" }}>\n        {selected && (\n          <Menu\n            user={session.user}\n            isLoggedIn={isAuthenticated}\n            logout={logout}\n            selected={selected}\n            facilities={facilities}\n            select={(facility: Facility) => selectActiveFacility(facility)}\n            liveCallsCount={liveCallsCount}\n            requestsCount={requestsCount}\n          />\n        )}\n        <Layout>\n          {((isInitingData && isAuthenticated) ||\n            session.status === \"loading\") && <Loader />}\n          <Switch>\n            <Route exact path={LOGIN_PATH} component={Login}></Route>\n            {ROUTES.map((route) => (\n              <ProtectedRoute\n                exact\n                {...defaultProtectedRouteProps}\n                path={route.path}\n                component={route.component}\n                key={route.label}\n              ></ProtectedRoute>\n            ))}\n          </Switch>\n        </Layout>\n      </Layout>\n    </ConnectedRouter>\n  );\n}\n\nexport default connector(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { history, Store } from \"./redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <App history={history} />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}