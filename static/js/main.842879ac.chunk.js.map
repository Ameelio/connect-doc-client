{"version":3,"sources":["redux/modules/visitation.ts","redux/modules/connections.ts","api/Connection.ts","utils/utils.ts","api/Common.ts","redux/modules/connection_requests.ts","redux/modules/inmate.ts","redux/modules/contact.ts","api/Persona.ts","redux/modules/staff.ts","redux/helpers.ts","redux/modules/call.ts","redux/modules/facility.ts","redux/selectors.ts","pages/LiveVisitation/RoomClient.js","pages/LiveVisitation/VideoOverlay.tsx","pages/LiveVisitation/VideoChat.tsx","pages/LiveVisitation/VideoSkeleton.tsx","pages/LiveVisitation/index.tsx","components/calendar/CalendarView.tsx","components/containers/Sidebar.tsx","components/containers/Container.tsx","components/containers/Wrapper.tsx","pages/Calendar/index.tsx","components/cards/UserSnippetCard.tsx","pages/ConnectionRequests/ConnectionRequestCard.tsx","components/hocs/WithLoadingProps.tsx","pages/ConnectionRequests/index.tsx","components/headers/VisitationCardHeader.tsx","components/cards/VisitationCard.tsx","pages/PastVisitations/CallFilters.tsx","pages/PastVisitations/index.tsx","pages/Staff/CreateStaffForm.tsx","pages/Staff/index.tsx","components/cards/ConnectionCard.tsx","components/cards/UserCard.tsx","components/cards/SidebarCard.tsx","pages/Inmate/index.tsx","components/charts/LineChart.tsx","components/charts/BarChart.tsx","pages/Dashboard/index.tsx","utils/Call.ts","pages/Settings/index.tsx","pages/Recording/index.tsx","utils/constants.ts","redux/modules/user.ts","redux/index.ts","redux/modules/socket.ts","api/User.ts","pages/Login/index.tsx","components/hocs/ProtectedRoute.tsx","components/headers/Menu.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["selectPastVisitation","visitation","type","payload","initialVisitationState","liveVisitations","selectedVisitation","scheduledVisitations","hasLoaded","hasLoadedScheduledVisitations","pastVisitations","selectedPastVisitation","visitationsReducer","state","action","length","liveVisitationsPostDeletion","filter","id","findIndex","connectionsAdapter","createEntityAdapter","connectionsSlice","createSlice","name","initialState","getInitialState","reducers","connectionsAddOne","addOne","connectionsAddMany","addMany","connectionsUpdate","updateOne","connectionsRemove","removeOne","connectionsActions","actions","getApprovedConnections","a","fetchAuthenticated","body","status","data","connections","map","connection","camelcaseKeys","console","log","Store","dispatch","setConnectionRequests","updateConnection","connectionId","method","JSON","stringify","connection_id","genFullName","entity","firstName","lastName","genImageUri","user","profileImgPath","calculateDurationMS","start","end","secs","format","addSeconds","Date","formatSecondsToMS","differenceInSeconds","cloneObject","obj","parse","createCallOptionsParam","filters","options","approved","toString","limit","offset","firstLive","push","startDate","endDate","minDuration","maxDuration","query","x","encodeURIComponent","join","toQueryString","generateBgColor","label","BACKGROUND_COLORS","Math","abs","str","hash","i","charCodeAt","hashCode","openNotificationWithIcon","message","description","notification","ADD_CONNECTION","selectConnectionRequest","requests","selectedRequest","connectionsReducer","requestsPostApproval","requestsPostDeletion","acceptConnectionRequest","request","declineConnectionRequest","inmatesAdapter","inmatesSlice","inmatesAddMany","inmatesUpdate","inmatesActions","contactsAdapter","contactsSlice","contactsAddMany","contactsActions","getInmates","inmates","inmate","getStaff","staff","admins","admin","getContacts","contacts","users","contact","staffAdapter","updateStaff","createAsyncThunk","args","url","resolve","API_URL","user_id","userId","permissions","changes","createStaff","email","role","loading","staffSlice","staffSetAll","setAll","staffUpdateOne","extraReducers","builder","addCase","fulfilled","rejected","error","staffActions","loadStaff","cleanVisitation","scheduledStartTime","scheduledEndTime","startTime","first_live","endTime","last_live","kiosk","kiosk_id","videoReady","video_ready","callsAdapter","fetchCalls","visitations","calls","fetchRecording","callId","recordingUrl","callsSlice","callsAddMany","callsSetAll","facilitiesAdapter","selectActiveFacility","facility","nodeId","Error","callTimes","call_times","fetchFacilities","getState","session","fBody","facilities","updateCallTimes","callSlots","zone","facilitiesSlice","setSelected","selected","pending","getSelectors","selectConnectionById","selectById","selectAll","selectInmateById","selectAllInmates","selectContactById","selectCallById","selectAllCalls","selectAllStaff","selectAllFacilities","getConnectionEntities","inmateId","getAllConnectionsInfo","getVisitationEntities","detailedConnection","getAllCallsInfo","getCallInfo","plainCall","MEDIA_TYPE","window","rc","consumers","producers","config","video","width","min","ideal","height","encodings","rid","maxBitrate","scalabilityMode","codecOptions","videoGoogleStartBitrate","RoomClient","mediasoupClient","socket","this","producerTransport","consumerTransport","device","handlers","consume","Promise","reject","emit","response","transport","on","callback","errback","dtlsParameters","transportId","producerTransportInfo","consumerTransportInfo","routerRtpCapabilities","loadDevice","createSendTransport","handleTransportConnect","createRecvTransport","rtpCapabilities","kind","rtpParameters","producerId","info","consumer","stream","consumerId","forEach","f","deviceId","audio","mediaConstraints","getMediaConstraints","navigator","mediaDevices","getUserMedia","track","getAudioTracks","getVideoTracks","params","produce","producer","Device","load","MediaStream","addTrack","event","fn","SubMenu","Menu","VideoOverlay","alerts","terminateCall","lockCall","muteCall","unmuteCall","isAudioOn","emitAlert","useState","selectedAlert","setSelectedAlert","menu","key","icon","MessageFilled","title","alert","Item","onClick","LockFilled","SettingFilled","AudioMutedOutlined","AudioOutlined","className","overlay","MoreOutlined","visible","onOk","onCancel","Loader","tip","VideoChat","React","memo","call","token","useSelector","authInfo","apiToken","setLoading","isAuthed","setIsAuthed","setRc","joinRoom","useCallback","init","participants","contents","recipients","useEffect","connected","Debug","measuredRef","node","document","createElement","style","srcObject","autoplay","appendChild","interval","setInterval","clearInterval","ref","terminate","VideoSkeleton","Ribbon","text","Content","Layout","connector","connect","bindActionCreators","setSocket","visibleCalls","setVisibleCalls","grid","setGrid","frameVhHeight","setFrameVhHeight","consumeAudioRecord","setConsumeAudioRecord","now","getTime","io","process","slice","handleVideoTermination","GridMenu","option","GRID_TO_VH_HEIGHT","handleGridChange","WRAPPER_STYLE","direction","placement","Array","from","keys","idx","span","GRID_TO_SPAN_WIDTH","CALL_ALERTS","_","omit","CalendarView","events","setEvents","VisitationToEventInput","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","headerToolbar","left","center","right","initialView","editable","selectable","selectMirror","dayMaxEvents","weekends","businessHours","eventContent","timeText","eventClick","clickInfo","confirm","remove","themeSystem","Sidebar","children","Container","fluid","rounded","Wrapper","horizontal","UserSnippetCard","size","nameFontSize","CardSize","Medium","detailFontSize","Image","src","roundedCircle","CardType","Contact","Inmate","inmateNumber","genSnippet","Table","Column","WithLoading","Component","loadingType","props","defaultOptions","loop","animationData","rendererSettings","preserveAspectRatio","Spinner","animation","LoadingTypes","AcceptConnection","LottieSpinner","FetchRecording","genFeedback","accept","decline","Large","Button","variant","getConnectionRequests","padding","PADDING","dataSource","dataIndex","render","shape","xs","sm","md","lg","xl","xxl","location","relationship","_text","setTimeout","handleAccept","danger","handleDecline","VisitationCardHeader","kioskId","currentTime","VisitationCard","actionLabel","handleClick","setNow","timer","clearTimeout","LiveVisitation","RangePicker","DatePicker","CallFiltersHeader","setDuration","setStartDate","setEndDate","DURATION_FILTERS","Infinity","DurationFilters","duration","align","onChange","date","unix","trigger","e","preventDefault","DownOutlined","logs","history","router","searchQuery","setSearchQuery","global","setGlobal","setMaxDuration","placeholder","allowClear","value","target","onSearch","time","Option","Select","CreateStaffForm","Form","useForm","form","rules","required","prefix","SendOutlined","Object","STAFF_PERMISSION_OPTIONS","defaultChecked","checked","includes","permission","htmlType","modalType","setModalType","confirmLoading","setConfirmLoading","formData","setFormData","allowRead","allowCalltimes","allowApproval","allowRestructure","allowMonitor","selectedPermissions","setSelectedPermissions","handleOk","img","color","record","update","ConnectionCard","fontColor","decoration","border","UserCard","genDetails","SidebarCard","isActive","activeBorder","ConnectionRequest","connectionRequest","PastVisitation","Staff","member","genCard","InmateContainer","COLOR","LineChart","labels","datasets","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","BarChart","hoverBackgroundColor","callSlotToDateString","setHours","hour","setMinutes","minute","calcEndCallSlot","getDay","day","addMilliseconds","mapCallBlockToCallSlots","ranges","rangeList","WEEKDAYS","weekday","reduce","prev","curr","concat","range","iterator","getHours","getMinutes","TabPane","Tabs","TimePicker","mapDispatchToProps","setRanges","activeTab","setActiveTab","setCallSlots","groups","groupBy","sorted","sort","ct1","ct2","times","timeRanges","first","DEFAULT_DURATION_MS","assign","mapCallSlotsToTimeBlock","r","defaultActiveKey","tab","margin","flex","Text","minuteStep","use12Hours","defaultValue","moment","values","toDate","renderItem","block","ownProps","parseInt","match","routes","path","breadcrumbName","ghost","onBack","back","subTitle","breadcrumb","extra","download","DownloadOutlined","href","InfoCircleOutlined","column","muted","controls","WeekdayMap","paddingTop","ROUTES","component","CalendarPage","RequestsPage","LogsPage","StaffPage","InmatesPage","LiveVisitationsPage","SettingsPage","RecordingPage","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","1","2","4","6","8","setSession","userState","rememberToken","isLoggedIn","sessionReducer","socketsSlice","createBrowserHistory","rootReducer","combineReducers","reducer","connectRouter","sockets","configureStore","middleware","getDefaultMiddleware","routerMiddleware","fetchTimeout","fetchUrl","timeout","race","fetch","mode","nodeResource","requestOptions","headers","Accept","Authorization","json","initializeAppData","allSettled","cleanUser","first_name","last_name","profile_img_path","initializeSession","remember","localStorage","setItem","loginWithToken","getItem","loginWithCredentials","cred","password","setError","to","onFinish","initialValues","onFinishFailed","_errorInfo","UserOutlined","Password","LockOutlined","valuePropName","ProtectedRoute","redirectPath","isAuthenticated","authenticationPath","pathname","undefined","Sider","AntdMenu","FacilityAvatar","split","n","select","logout","collapsed","setCollapsed","useHistory","headerMenu","collapsible","onCollapse","theme","defaultSelectedKeys","PieChartOutlined","DesktopOutlined","UserAddOutlined","TeamOutlined","SettingOutlined","Header","defaultProtectedRouteProps","header","setHeader","removeItem","route","find","minHeight","exact","Login","textAlign","Boolean","hostname","ReactDOM","StrictMode","store","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.842879ac.chunk.js","sourcesContent":["import { AppThunk } from \"src/redux/helpers\";\n\nconst SET_LIVE_VISITATIONS = \"visitation/SET_LIVE_VISITATIONS\";\nconst SELECT_LIVE_VISITATION = \"visitation/SELECT_LIVE_VISITATION\";\nconst DELETE_LIVE_VISITATION = \"visitation/DELETE_LIVE_VISITATION\";\nconst SET_SCHEDULED_VISITATIONS = \"visitation/SET_SCHEDULED_VISITATIONS\";\nconst SET_PAST_VISITATIONS = \"visitation/SET_PASET_PAST_VISITATIONS\";\nconst SELECT_PAST_VISITATION = \"visitation/SELECT_PAST_VISITATION\";\nconst ADD_VIDEO_RECORDING = \"visitation/ADD_VIDEO_RECORDING\";\n// Action Constants & Shapes\ninterface SetLiveVisitationAction {\n  type: typeof SET_LIVE_VISITATIONS;\n  payload: LiveVisitation[];\n}\n\ninterface SelectLivitationAction {\n  type: typeof SELECT_LIVE_VISITATION;\n  payload: LiveVisitation;\n}\n\ninterface DeleteLiveVisitationAction {\n  type: typeof DELETE_LIVE_VISITATION;\n  payload: LiveVisitation;\n}\n\ninterface SetScheduledVisitationsAction {\n  type: typeof SET_SCHEDULED_VISITATIONS;\n  payload: BaseVisitation[];\n}\n\ninterface SetPastVisitationsAction {\n  type: typeof SET_PAST_VISITATIONS;\n  payload: RecordedVisitation[];\n}\n\ninterface SelectVisitationsAction {\n  type: typeof SELECT_PAST_VISITATION;\n  payload: RecordedVisitation;\n}\n\ninterface RecordingKeyValue {\n  id: number;\n  value: string;\n}\ninterface AddRecordingAction {\n  type: typeof ADD_VIDEO_RECORDING;\n  payload: RecordingKeyValue;\n}\n\ntype LiveVisitationActionTypes =\n  | SetLiveVisitationAction\n  | SelectLivitationAction\n  | DeleteLiveVisitationAction\n  | SetScheduledVisitationsAction\n  | SetPastVisitationsAction\n  | SelectVisitationsAction\n  | AddRecordingAction;\n\n// Action Creators\nexport const setLiveVisitations = (\n  visitations: LiveVisitation[]\n): LiveVisitationActionTypes => {\n  return {\n    type: SET_LIVE_VISITATIONS,\n    payload: visitations,\n  };\n};\n\nexport const selectLiveVisitation = (\n  visitation: LiveVisitation\n): LiveVisitationActionTypes => {\n  return {\n    type: SELECT_LIVE_VISITATION,\n    payload: visitation,\n  };\n};\n\nconst deleteLiveVisitation = (\n  visitation: LiveVisitation\n): LiveVisitationActionTypes => {\n  return {\n    type: DELETE_LIVE_VISITATION,\n    payload: visitation,\n  };\n};\n\nexport const setScheduledVisitations = (\n  visitations: BaseVisitation[]\n): LiveVisitationActionTypes => {\n  return {\n    type: SET_SCHEDULED_VISITATIONS,\n    payload: visitations,\n  };\n};\n\nexport const setPastVisitations = (\n  visitations: RecordedVisitation[]\n): LiveVisitationActionTypes => {\n  return {\n    type: SET_PAST_VISITATIONS,\n    payload: visitations,\n  };\n};\n\nexport const selectPastVisitation = (\n  visitation: RecordedVisitation\n): LiveVisitationActionTypes => {\n  return {\n    type: SELECT_PAST_VISITATION,\n    payload: visitation,\n  };\n};\n\nconst addRecording = (id: number, value: string) => {\n  return {\n    type: ADD_VIDEO_RECORDING,\n    payload: { id: id, value: value },\n  };\n};\n\n// Reducer\nconst initialVisitationState: VisitationState = {\n  liveVisitations: [],\n  selectedVisitation: null,\n  scheduledVisitations: [],\n  hasLoaded: false,\n  hasLoadedScheduledVisitations: false,\n  pastVisitations: [],\n  selectedPastVisitation: null,\n};\n\nexport function visitationsReducer(\n  state = initialVisitationState,\n  action: LiveVisitationActionTypes\n): VisitationState {\n  switch (action.type) {\n    case SET_LIVE_VISITATIONS:\n      const selectedVisitation = action.payload.length\n        ? action.payload[0]\n        : null;\n      return {\n        ...state,\n        liveVisitations: action.payload,\n        selectedVisitation: selectedVisitation, //TODO this assumes that there is at least one live visitation. This will break for zero state\n        hasLoaded: true,\n      };\n    case SELECT_LIVE_VISITATION:\n      return { ...state, selectedVisitation: action.payload };\n    case DELETE_LIVE_VISITATION:\n      const liveVisitationsPostDeletion = state.liveVisitations.filter(\n        (visitation) => visitation.id !== action.payload.id\n      );\n\n      return {\n        ...state,\n        liveVisitations: liveVisitationsPostDeletion,\n        selectedVisitation: liveVisitationsPostDeletion.length\n          ? liveVisitationsPostDeletion[0]\n          : null,\n      };\n    case SET_SCHEDULED_VISITATIONS:\n      return {\n        ...state,\n        scheduledVisitations: action.payload,\n        hasLoadedScheduledVisitations: true,\n      };\n    case SET_PAST_VISITATIONS:\n      const selectedPastVisitation = action.payload.length\n        ? action.payload[0]\n        : null;\n      return {\n        ...state,\n        pastVisitations: action.payload,\n        selectedPastVisitation: selectedPastVisitation,\n      };\n    case SELECT_PAST_VISITATION:\n      return {\n        ...state,\n        selectedPastVisitation: action.payload,\n      };\n    case ADD_VIDEO_RECORDING:\n      const foundIndex = state.pastVisitations.findIndex(\n        (visitation) => visitation.id === action.payload.id\n      );\n      // state.pastVisitations[foundIndex].recordingUrl = action.payload.value;\n\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n}\n\n//TODO replace these with real API calls\nexport const terminateLiveVisitation = (\n  visitation: LiveVisitation\n): AppThunk => async (dispatch) => {\n  dispatch(deleteLiveVisitation(visitation));\n};\n","import { createSlice, createEntityAdapter } from \"@reduxjs/toolkit\";\n\n// The magic line\n\nexport const connectionsAdapter = createEntityAdapter<BaseConnection>();\n\nexport const connectionsSlice = createSlice({\n  name: \"connections\",\n  initialState: connectionsAdapter.getInitialState(),\n  reducers: {\n    connectionsAddOne: connectionsAdapter.addOne,\n    connectionsAddMany: connectionsAdapter.addMany,\n    connectionsUpdate: connectionsAdapter.updateOne,\n    connectionsRemove: connectionsAdapter.removeOne,\n  },\n});\n\nexport const connectionsActions = connectionsSlice.actions;\n","import { API_URL, fetchAuthenticated } from \"./Common\";\nimport url from \"url\";\nimport { Store } from \"src/redux\";\nimport {\n  setConnectionRequests,\n  setConnections,\n} from \"src/redux/modules/connection_requests\";\nimport { connectionsActions } from \"src/redux/modules/connections\";\nimport camelcaseKeys from \"camelcase-keys\";\n\nexport async function getApprovedConnections(): Promise<BaseConnection[]> {\n  const body = await fetchAuthenticated(`/connections?status=approved`);\n\n  if (body.status !== 200 || !body.data) {\n    throw body;\n  }\n\n  const connections = ((body.data as Record<string, unknown>)\n    .connections as Object[]).map((connection) =>\n    camelcaseKeys(connection)\n  ) as BaseConnection[];\n  console.log(connections);\n  Store.dispatch(connectionsActions.connectionsAddMany(connections));\n  return connections;\n}\n\nexport async function getConnectionRequests(): Promise<BaseConnection[]> {\n  const body = await fetchAuthenticated(`/connections?status=pending`);\n  if (body.status !== 200 || !body.data) {\n    throw body;\n  }\n\n  const connections = ((body.data as Record<string, unknown>)\n    .connections as Object[]).map((connection) =>\n    camelcaseKeys(connection)\n  ) as BaseConnection[];\n  console.log(connections);\n\n  Store.dispatch(setConnectionRequests(connections));\n  return connections;\n}\n\nexport async function updateConnection(\n  connectionId: number,\n  status: \"approved\" | \"pending\" | \"denied\"\n): Promise<void> {\n  const body = await fetchAuthenticated(\"/connection\", {\n    method: \"PUT\",\n    body: JSON.stringify({ connection_id: connectionId, status }),\n  });\n\n  if (body.status !== 200 || !body.data) {\n    throw body;\n  }\n}\n","import { EventInput } from \"@fullcalendar/react\";\nimport { addSeconds, format, differenceInSeconds } from \"date-fns\";\nimport { toQueryString } from \"src/api/Common\";\nimport { NodeCallSlot } from \"src/typings/Node\";\nimport { STAFF_PERMISSION_OPTIONS, WeekdayMap } from \"./constants\";\nimport { CallBlock, Weekday } from \"src/typings/Call\";\nimport _ from \"lodash\";\nimport { notification } from \"antd\";\n\nexport const genFullName = (entity?: BasePersona): string =>\n  entity ? `${entity.firstName} ${entity.lastName}` : \"\";\n\nexport const genImageUri = (user?: BasePersona): string => {\n  return user?.profileImgPath || \"default.jpg\";\n};\n\nexport const VisitationToEventInput = (visitation: Visitation): EventInput => {\n  return {\n    title: `${genFullName(visitation.connection.inmate)} <> ${genFullName(\n      visitation.connection.contact\n    )}`,\n    start: visitation.scheduledStartTime,\n    end: visitation.scheduledEndTime,\n  };\n};\n\nconst formatSecondsToMS = (secs: number): string => {\n  return format(addSeconds(new Date(0), secs), \"mm:ss\");\n};\nexport const calculateDurationMS = (start: Date, end: Date): string => {\n  const secs = differenceInSeconds(end, start);\n  return formatSecondsToMS(secs);\n};\n\nexport const mapPermissionMap = (\n  permissions: Permission[]\n): Record<Permission, boolean> => {\n  return {\n    allowRead: permissions.includes(\"allowRead\"),\n    allowApproval: permissions.includes(\"allowApproval\"),\n    allowMonitor: permissions.includes(\"allowMonitor\"),\n    allowCalltimes: permissions.includes(\"allowCalltimes\"),\n    allowRestructure: permissions.includes(\"allowRestructure\"),\n  };\n};\n\nexport const cloneObject = (obj: Object): Object =>\n  JSON.parse(JSON.stringify(obj));\n\nexport const createCallOptionsParam = (filters: CallFilters): string => {\n  const options = [\n    [\"approved\", filters.approved?.toString() || \"true\"],\n    [\"limit\", filters.limit?.toString() || \"100\"],\n    [\"offset\", filters.offset?.toString() || \"0\"],\n  ];\n  if (filters.firstLive) options.push([\"first_live\", filters.firstLive]);\n  if (filters.end) options.push([\"end\", filters.end]);\n  if (filters.startDate && filters.endDate)\n    options.push([\"start\", `${filters.startDate},${filters.endDate}`]);\n  if (filters.minDuration && filters.maxDuration)\n    options.push([\n      \"duration\",\n      `${filters.minDuration}, ${filters.maxDuration}`,\n    ]);\n  if (filters.query?.length) options.push([\"global\", filters.query]);\n  console.log(options);\n  return toQueryString(options);\n};\nexport const getInitials = (str: string) => {\n  return str\n    .split(\" \")\n    .map((n) => n[0])\n    .join(\"\");\n};\n\nfunction hashCode(str: string): number {\n  var hash = 0;\n  for (var i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 6) - hash);\n  }\n  return hash;\n}\n\nexport function generateBgColor(label: string): string {\n  const BACKGROUND_COLORS = [\n    \"#093145\",\n    \"#3C6478\",\n    \"#107896\",\n    \"#43ABC9\",\n    \"#C2571A\",\n    \"#9A2617\",\n  ];\n  return BACKGROUND_COLORS[\n    Math.abs(hashCode(label) % BACKGROUND_COLORS.length)\n  ];\n}\n\nexport const openNotificationWithIcon = (\n  message: string,\n  description: string,\n  type: \"success\" | \"info\" | \"error\" | \"warning\"\n) => {\n  notification[type]({\n    message,\n    description,\n  });\n};\n","import { Store } from \"src/redux\";\nimport url from \"url\";\nimport { getApprovedConnections } from \"./Connection\";\nimport { getContacts, getInmates, getStaff } from \"./Persona\";\n\nexport const API_URL = `${process.env.REACT_APP_BASE_URL}api/`;\n\nexport interface ApiResponse {\n  date: number;\n  good: boolean;\n  status?: \"OK\" | \"ERROR\" | \"succeeded\" | 200;\n  message?: string;\n  data: Record<string, unknown> | Record<string, unknown>[] | unknown;\n}\n\nexport function fetchTimeout(\n  fetchUrl: string,\n  options: Record<string, unknown>,\n  timeout = 15000\n): Promise<Response> {\n  return Promise.race([\n    fetch(fetchUrl, { ...options, mode: \"cors\" }),\n    new Promise<Response>((_, reject) =>\n      setTimeout(() => reject(new Error(\"timeout\")), timeout)\n    ),\n  ]);\n}\n\nexport function toQueryString(options: string[][]) {\n  return options.map((x) => x[0] + \"=\" + encodeURIComponent(x[1])).join(\"&\");\n}\n\nexport async function fetchAuthenticated(\n  fetchUrl: string,\n  options: Record<string, unknown> = {},\n  nodeResource = true,\n  timeout = 15000\n): Promise<ApiResponse> {\n  const state = Store.getState();\n\n  const requestOptions = {\n    ...options,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${state.session.authInfo.apiToken}`,\n    },\n  };\n\n  const url = `${API_URL}${\n    nodeResource ? `node/${state.facilities.selected?.nodeId}` : \"\"\n  }${fetchUrl}`;\n  const response = await fetchTimeout(url, requestOptions, timeout);\n  const body = await response.json();\n  return body;\n}\n\nexport async function initializeAppData() {\n  await Promise.allSettled([\n    getInmates(),\n    getApprovedConnections(),\n    getStaff(),\n    getContacts(),\n  ]);\n}\n","import { updateConnection } from \"src/api/Connection\";\nimport { AppThunk } from \"src/redux/helpers\";\nimport { openNotificationWithIcon } from \"src/utils/utils\";\n\nconst SET_CONNECTION_REQUESTS = \"connection/SET_CONNECTION_REQUESTS\";\nconst DELETE_CONNECTION_REQUEST = \"connection/DECLINE_CONNECTION_REQUEST\";\nconst SELECT_CONNECTION_REQUEST = \"connection/SELECT_CONNECTION_REQUEST\";\nconst SET_CONNECTIONS = \"connection/SET_CONNECTIONS\";\nconst ADD_CONNECTION = \"connection/ACCEPT_CONNECTION_REQUEST\";\n\n// Action Constants & Shapes\ninterface SetConnectionRequestsAction {\n  type: typeof SET_CONNECTION_REQUESTS;\n  payload: BaseConnection[];\n}\n\ninterface AddConnectionAction {\n  type: typeof ADD_CONNECTION;\n  payload: BaseConnection;\n}\n\ninterface DeleteConnectionRequestAction {\n  type: typeof DELETE_CONNECTION_REQUEST;\n  payload: BaseConnection;\n}\n\ninterface SetConnectionsAction {\n  type: typeof SET_CONNECTIONS;\n  payload: BaseConnection[];\n}\n\ninterface SelectConnectionRequestAction {\n  type: typeof SELECT_CONNECTION_REQUEST;\n  payload: BaseConnection;\n}\n\ntype ConnectionActionTypes =\n  | SetConnectionRequestsAction\n  | AddConnectionAction\n  | DeleteConnectionRequestAction\n  | SetConnectionsAction\n  | SelectConnectionRequestAction;\n\n// Action Creators\nexport const setConnectionRequests = (\n  connections: BaseConnection[]\n): ConnectionActionTypes => {\n  return {\n    type: SET_CONNECTION_REQUESTS,\n    payload: connections,\n  };\n};\n\nconst addConnection = (connection: BaseConnection): ConnectionActionTypes => {\n  return {\n    type: ADD_CONNECTION,\n    payload: connection,\n  };\n};\n\nconst deleteConnectionRequeest = (\n  connection: BaseConnection\n): ConnectionActionTypes => {\n  return {\n    type: DELETE_CONNECTION_REQUEST,\n    payload: connection,\n  };\n};\n\nexport const selectConnectionRequest = (\n  connection: BaseConnection\n): ConnectionActionTypes => {\n  return {\n    type: SELECT_CONNECTION_REQUEST,\n    payload: connection,\n  };\n};\n\nexport const setConnections = (\n  connections: BaseConnection[]\n): ConnectionActionTypes => {\n  return {\n    type: SET_CONNECTIONS,\n    payload: connections,\n  };\n};\n\n// Reducer\nconst initialState: ConnectionState = {\n  requests: [],\n  connections: [],\n  selectedRequest: null,\n};\n\nexport function connectionsReducer(\n  state = initialState,\n  action: ConnectionActionTypes\n): ConnectionState {\n  switch (action.type) {\n    case SET_CONNECTIONS:\n      return {\n        ...state,\n        connections: action.payload,\n      };\n    case SET_CONNECTION_REQUESTS:\n      const selectedRequest = action.payload.length ? action.payload[0] : null;\n      return {\n        ...state,\n        requests: action.payload,\n        selectedRequest: selectedRequest,\n      };\n    case ADD_CONNECTION:\n      const requestsPostApproval = state.requests.filter(\n        (connection) => connection.id !== action.payload.id\n      );\n      return {\n        ...state,\n        connections: [...state.connections, action.payload],\n        requests: requestsPostApproval,\n        selectedRequest: requestsPostApproval.length\n          ? requestsPostApproval[0]\n          : null,\n      };\n    case DELETE_CONNECTION_REQUEST:\n      const requestsPostDeletion = state.requests.filter(\n        (connection) => connection.id !== action.payload.id\n      );\n      return {\n        ...state,\n        requests: requestsPostDeletion,\n        selectedRequest: requestsPostDeletion.length\n          ? requestsPostDeletion[0]\n          : null,\n      };\n\n    case SELECT_CONNECTION_REQUEST:\n      return { ...state, selectedRequest: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport const acceptConnectionRequest = (\n  request: BaseConnection\n): AppThunk => async (dispatch) => {\n  //TODO replace this with the API call\n  await updateConnection(request.id, \"approved\");\n  // const connection: BaseConnection = {\n  //   ...request,\n  //   approvedAt: new Date(),\n  // };\n  dispatch(addConnection(request));\n  openNotificationWithIcon(\"Connection created!\", \"Hooray!\", \"success\");\n};\n\nexport const declineConnectionRequest = (\n  request: BaseConnection\n): AppThunk => async (dispatch) => {\n  await updateConnection(request.id, \"denied\");\n  //TODO replace this with actual API call\n  dispatch(deleteConnectionRequeest(request));\n  openNotificationWithIcon(\"Connection rejected\", \"Very sad\", \"info\");\n};\n","import { createSlice, createEntityAdapter } from \"@reduxjs/toolkit\";\n\nexport const inmatesAdapter = createEntityAdapter<Inmate>();\n\nexport const inmatesSlice = createSlice({\n  name: \"inmates\",\n  initialState: inmatesAdapter.getInitialState(),\n  reducers: {\n    inmatesAddMany: inmatesAdapter.addMany,\n    inmatesUpdate: inmatesAdapter.updateOne,\n    // selectInmate: (state, action: PayloadAction<Inmate>) => action.payload,\n  },\n});\n\nexport const inmatesActions = inmatesSlice.actions;\n","import { createSlice, createEntityAdapter } from \"@reduxjs/toolkit\";\n\nexport const contactsAdapter = createEntityAdapter<Contact>();\n\nexport const contactsSlice = createSlice({\n  name: \"inmates\",\n  initialState: contactsAdapter.getInitialState(),\n  reducers: {\n    contactsAddMany: contactsAdapter.addMany,\n  },\n});\n\nexport const contactsActions = contactsSlice.actions;\n","import { API_URL, fetchAuthenticated } from \"./Common\";\nimport url from \"url\";\nimport { Store } from \"src/redux\";\nimport { inmatesActions } from \"src/redux/modules/inmate\";\nimport camelcaseKeys from \"camelcase-keys\";\nimport { contactsActions } from \"src/redux/modules/contact\";\n\nexport async function getInmates(): Promise<Inmate[]> {\n  const body = await fetchAuthenticated(`/inmates`, {}, false);\n\n  if (body.status !== 200 || !body.data) {\n    throw body;\n  }\n\n  const inmates = ((body.data as Record<string, unknown>)\n    .inmates as Object[]).map((inmate) => camelcaseKeys(inmate)) as Inmate[];\n\n  Store.dispatch(inmatesActions.inmatesAddMany(inmates));\n  return inmates;\n}\n\nexport async function getStaff(): Promise<Staff[]> {\n  const body = await fetchAuthenticated(`/admins`);\n\n  if (body.status !== 200 || !body.data) {\n    throw body;\n  }\n\n  const staff = ((body.data as Record<string, unknown>)\n    .admins as Object[]).map((admin) => camelcaseKeys(admin)) as Staff[];\n\n  return staff;\n}\n\nexport async function getContacts(): Promise<Contact[]> {\n  const body = await fetchAuthenticated(`/users`);\n\n  if (body.status !== 200 || !body.data) {\n    throw body;\n  }\n\n  const contacts = ((body.data as Record<string, unknown>)\n    .users as Object[]).map((contact) => camelcaseKeys(contact)) as Contact[];\n\n  console.log(contacts);\n  Store.dispatch(contactsActions.contactsAddMany(contacts));\n  return contacts;\n}\n","import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n  EntityState,\n} from \"@reduxjs/toolkit\";\nimport { API_URL, fetchAuthenticated } from \"src/api/Common\";\nimport { getStaff } from \"src/api/Persona\";\nimport { AppThunk } from \"../helpers\";\nimport url from \"url\";\nimport camelcaseKeys from \"camelcase-keys\";\n\nexport const staffAdapter = createEntityAdapter<Staff>();\n\nexport const updateStaff = createAsyncThunk(\n  \"staff/updateStaff\",\n  async (args: { userId: number; permissions: Permission[] }) => {\n    const body = await fetchAuthenticated(\n      url.resolve(API_URL, `node/1/admin`),\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          user_id: args.userId,\n          permissions: args.permissions,\n        }),\n      }\n    );\n\n    //TODO update this with API return when it's actually supported\n    // const staff = camelcaseKeys((body.data as Record<string, unknown>)\n    // .admin as Object) as Staff;;\n\n    return { userId: args.userId, changes: { permissions: args.permissions } };\n  }\n);\n\nexport const createStaff = createAsyncThunk(\n  \"staff/createStaff\",\n  async (args: { email: string; role: string; permissions: Permission[] }) => {\n    const body = await fetchAuthenticated(\n      url.resolve(API_URL, `node/1/admin`),\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: args.email,\n          role: args.role,\n          permissions: args.permissions,\n        }),\n      }\n    );\n\n    //TODO update this with API return when it's actually supported\n    const staff = camelcaseKeys(\n      (body.data as Record<string, unknown>).staff as Object\n    ) as Staff;\n\n    return staff;\n  }\n);\ninterface StaffState extends EntityState<Staff> {\n  error?: string;\n}\n\nconst initialState: StaffState = staffAdapter.getInitialState({\n  loading: false,\n});\n\nexport const staffSlice = createSlice({\n  name: \"staff\",\n  initialState: initialState,\n  reducers: {\n    staffSetAll: staffAdapter.setAll,\n    staffUpdateOne: staffAdapter.updateOne,\n  },\n  extraReducers: (builder) => {\n    builder.addCase(updateStaff.fulfilled, (state, action) => {\n      staffAdapter.updateOne(state, {\n        id: action.payload.userId,\n        changes: action.payload.changes,\n      });\n    });\n    builder.addCase(updateStaff.rejected, (state, action) => ({\n      ...state,\n      error: action.error.message,\n    }));\n    builder.addCase(createStaff.fulfilled, (state, action) => {\n      staffAdapter.addOne(state, action.payload);\n    });\n    builder.addCase(createStaff.rejected, (state, action) => ({\n      ...state,\n      error: action.error.message,\n    }));\n  },\n});\n\nexport const staffActions = staffSlice.actions;\n\nexport const loadStaff = (): AppThunk => async (dispatch) => {\n  // TODO move this to async thunk\n  const staff = await getStaff();\n  dispatch(staffActions.staffSetAll(staff));\n};\n","import { ThunkAction } from \"redux-thunk\";\nimport { RootState } from \"./index\";\nimport { Action } from \"redux\";\n\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n\n// Visitation helpers\nexport interface RawVisitation {\n  id: number;\n  connection: BaseConnection;\n  connection_id: number;\n  users: number[];\n  start: number;\n  end: number;\n  first_live?: number;\n  last_live?: number;\n  last_status: string;\n  room_id: number;\n  kiosk_id: number;\n  approved: boolean;\n  video_ready: boolean;\n}\n\nexport function cleanVisitation(visitation: RawVisitation): BaseVisitation {\n  return {\n    id: visitation.id,\n    connectionId: visitation.connection_id,\n    scheduledStartTime: visitation.start,\n    scheduledEndTime: visitation.end,\n    startTime: visitation.first_live,\n    endTime: visitation.last_live,\n    end: visitation.end,\n    approved: visitation.approved,\n    kiosk: { id: visitation.kiosk_id } as Kiosk,\n    videoReady: visitation.video_ready,\n  } as BaseVisitation;\n}\n","import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n  EntityState,\n} from \"@reduxjs/toolkit\";\nimport { API_URL, fetchAuthenticated, toQueryString } from \"src/api/Common\";\nimport { AppThunk, cleanVisitation, RawVisitation } from \"../helpers\";\nimport url from \"url\";\nimport { createCallOptionsParam } from \"src/utils/utils\";\n\nexport const callsAdapter = createEntityAdapter<BaseVisitation>();\n\nexport const fetchCalls = createAsyncThunk(\n  \"calls/fetchAll\",\n  async (filters: CallFilters) => {\n    const body = await fetchAuthenticated(\n      `/calls?${createCallOptionsParam(filters)}`\n    );\n    if (body.status !== 200) {\n      throw body;\n    }\n\n    const visitations = ((body.data as Record<string, unknown>)\n      .calls as RawVisitation[]).map(cleanVisitation) as RecordedVisitation[];\n\n    return visitations;\n  }\n);\n\nexport const fetchRecording = createAsyncThunk(\n  \"call/fetchRecording\",\n  async (callId: number) => {\n    const body = await fetchAuthenticated(`/call/recording/${callId}`);\n    if (body.status !== 200) {\n      throw body;\n    }\n    const recordingUrl = (body.data as Record<string, unknown>).url as string;\n\n    return { callId, recordingUrl };\n  }\n);\n\ninterface VisitationState extends EntityState<BaseVisitation> {\n  error?: string;\n}\n\nconst initialState: VisitationState = callsAdapter.getInitialState({});\n\nexport const callsSlice = createSlice({\n  name: \"calls\",\n  initialState,\n  reducers: {\n    callsAddMany: callsAdapter.addMany,\n    callsSetAll: callsAdapter.setAll,\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCalls.fulfilled, (state, action) => {\n      // TODO make this a set all and filter\n      callsAdapter.setAll(state, action.payload);\n    });\n    builder.addCase(fetchCalls.rejected, (state, action) => ({\n      ...state,\n      error: action.error.message,\n    }));\n    builder.addCase(fetchRecording.fulfilled, (state, action) =>\n      callsAdapter.updateOne(state, {\n        id: action.payload.callId,\n        changes: { recordingUrl: action.payload.recordingUrl },\n      })\n    );\n    builder.addCase(fetchRecording.rejected, (state, action) => ({\n      ...state,\n      error: action.error.message,\n    }));\n  },\n});\n\nexport const callsActions = callsSlice.actions;\n","import {\n  createAsyncThunk,\n  createEntityAdapter,\n  createSlice,\n  EntityState,\n  PayloadAction,\n} from \"@reduxjs/toolkit\";\nimport camelcaseKeys from \"camelcase-keys\";\nimport { API_URL, fetchAuthenticated } from \"src/api/Common\";\nimport { SelectedFacility, Facility, NodeCallSlot } from \"src/typings/Node\";\nimport { mapCallBlockToCallSlots } from \"src/utils/Call\";\nimport url from \"url\";\nimport { Store } from \"..\";\n\nexport const facilitiesAdapter = createEntityAdapter<Facility>();\n\nexport const selectActiveFacility = createAsyncThunk(\n  \"facility/selectActiveFacility\",\n  async (facility: Facility) => {\n    const body = await fetchAuthenticated(\n      `node/${facility.nodeId}/times`,\n      {},\n      false\n    );\n\n    console.log(body);\n    if (!body.data) {\n      throw new Error(\"Could not load facility data\");\n    }\n\n    const callTimes = camelcaseKeys(\n      (body.data as Record<string, unknown>).call_times as Object\n    ) as NodeCallSlot[];\n\n    return { ...facility, callTimes };\n  }\n);\n\nexport const fetchFacilities = createAsyncThunk(\n  \"facility/fetchFacilities\",\n  async () => {\n    // TODO refactor this to use some APIServiceManager\n    const fBody = await fetchAuthenticated(\n      `user/${Store.getState().session.user.id}/facilities`,\n      {},\n      false\n    );\n\n    if (!fBody.data) {\n      throw new Error(\"Could not load list of facilities\");\n    }\n\n    const facilities = camelcaseKeys(\n      (fBody.data as Record<string, unknown>) as Object\n    ) as Facility[];\n\n    if (!facilities.length) {\n      throw new Error(\"Must have access to at least one facility\");\n    }\n\n    // fetch information for first facility\n    Store.dispatch(selectActiveFacility(facilities[0]));\n\n    return { facilities };\n  }\n);\n\nexport const updateCallTimes = createAsyncThunk(\n  \"facility/updateCallTimes\",\n  async (args: { callSlots: NodeCallSlot[]; zone: string }) => {\n    const body = await fetchAuthenticated(`/times`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        call_times: args.callSlots,\n        zone: \"America_LosAngeles\",\n      }),\n    });\n\n    // update\n    if (!body.data) {\n      throw new Error(\"Could not update call time\");\n    }\n\n    // update stsore\n    return args.callSlots;\n  }\n);\n\ninterface FacilitiesState extends EntityState<Facility> {\n  error?: string;\n  selected?: SelectedFacility;\n  loading: boolean;\n}\n\nconst initialState: FacilitiesState = facilitiesAdapter.getInitialState({\n  loading: false,\n});\n\nexport const facilitiesSlice = createSlice({\n  name: \"facilities\",\n  initialState,\n  reducers: {\n    setSelected: (state, action: PayloadAction<SelectedFacility>) => ({\n      ...state,\n      selected: action.payload,\n    }),\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchFacilities.fulfilled, (state, action) => {\n      const newState = facilitiesAdapter.setAll(\n        state,\n        action.payload.facilities\n      );\n      // console.log( action.payload.selected);\n      // newState.selected = action.payload.selected;\n      return newState;\n    });\n    builder.addCase(fetchFacilities.rejected, (state, action) => ({\n      ...state,\n      error: action.error.message,\n    }));\n    builder.addCase(selectActiveFacility.fulfilled, (state, action) => ({\n      ...state,\n      selected: action.payload,\n      loading: false,\n    }));\n    builder.addCase(selectActiveFacility.rejected, (state, action) => ({\n      ...state,\n      error: action.error.message,\n      loading: false,\n    }));\n    builder.addCase(selectActiveFacility.pending, (state) => ({\n      ...state,\n      loading: true,\n    }));\n    builder.addCase(updateCallTimes.fulfilled, (state, action) => ({\n      ...state,\n      // TODO update store with new call times\n      // selected:  {...state.selected},\n      // selected: { ...state.selected, callTimes: action.payload },\n    }));\n  },\n});\n\nexport const facilitiesActions = facilitiesSlice.actions;\n","import { RootState } from \".\";\nimport { connectionsAdapter } from \"./modules/connections\";\nimport { contactsAdapter } from \"./modules/contact\";\nimport { inmatesActions, inmatesAdapter } from \"./modules/inmate\";\nimport { createSelector } from \"reselect\";\nimport { callsAdapter } from \"./modules/call\";\nimport { staffAdapter } from \"./modules/staff\";\nimport { facilitiesAdapter } from \"./modules/facility\";\n\n// get selectors from entity adapter\nexport const {\n  selectById: selectConnectionById,\n  selectAll: selectAllConnections,\n} = connectionsAdapter.getSelectors<RootState>((state) => state.connections);\n\nexport const {\n  selectById: selectInmateById,\n  selectAll: selectAllInmates,\n} = inmatesAdapter.getSelectors<RootState>((state) => state.inmates);\n\nexport const {\n  selectById: selectContactById,\n  selectAll: selectAllContacts,\n} = contactsAdapter.getSelectors<RootState>((state) => state.contacts);\n\nexport const {\n  selectById: selectCallById,\n  selectAll: selectAllCalls,\n} = callsAdapter.getSelectors<RootState>((state) => state.calls);\n\nexport const {\n  selectById: selectStaffByIdd,\n  selectAll: selectAllStaff,\n} = staffAdapter.getSelectors<RootState>((state) => state.staff);\n\nexport const {\n  selectById: selectFacilityById,\n  selectAll: selectAllFacilities,\n} = facilitiesAdapter.getSelectors<RootState>((state) => state.facilities);\n\n// helper selectors\nconst getConnectionEntities = (\n  state: RootState,\n  connection: BaseConnection\n): Connection => {\n  const inmate = selectInmateById(state, connection.inmateId);\n  const contact = selectContactById(state, connection.userId);\n  // TODO improve this\n  if (!inmate)\n    throw new Error(\n      `Failed to locate information for inmate ${connection.inmateId}`\n    );\n  if (!contact)\n    throw new Error(\n      `Failed to locate information for contact ${connection.userId}`\n    );\n  return { inmate, contact, ...connection };\n};\n\nexport const getAllConnectionsInfo = (\n  state: RootState,\n  requests: BaseConnection[]\n): Connection[] => {\n  return requests.map((request) => getConnectionEntities(state, request));\n};\n\nexport const getVisitationEntities = (\n  state: RootState,\n  visitation: BaseVisitation\n): Visitation => {\n  const connection = selectConnectionById(state, visitation.connectionId);\n  if (!connection) throw new Error(\"Failed to locate connection information\");\n\n  // TODO add error handling\n  const detailedConnection = getConnectionEntities(state, connection);\n  return { ...visitation, connection: detailedConnection };\n};\n\nexport const getAllCallsInfo = (\n  state: RootState,\n  visitations: BaseVisitation[]\n): Visitation[] => {\n  return visitations.map((visitation) =>\n    getVisitationEntities(state, visitation)\n  );\n};\n\nexport const getCallInfo = (\n  state: RootState,\n  callId: number\n): Visitation | null => {\n  const plainCall = selectCallById(state, callId);\n  if (!plainCall) return null;\n  return getVisitationEntities(state, plainCall) as Visitation;\n};\n","/*\n  Copyright 2020 Ameelio.org.\n  Published under the GPL v3.\n\n  You can obtain a copy of the GPL v3 at:\n  https://www.gnu.org/licenses/gpl-3.0.en.html\n\n  This file was inspired by code from https://github.com/Dirvann/mediasoup-sfu-webrtc-video-rooms,\n  which was published under the Apache License.\n  Copyright 2020 github.com/Dirvann.\n\n  You can obtain a copy of the Apache License at:\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  This file was substantially modified by Ameelio to streamline\n  the signalling protocol and change the structure of how a RoomClient\n  is initialized and what events it exposes for easier use by\n  Ameelio's client-side code, and to refactor and restructure the code\n  for easier maintainenance, among other changes.\n*/\nconst MEDIA_TYPE = {\n  audio: \"audioType\",\n  video: \"videoType\",\n  screen: \"screenType\",\n};\n\nwindow.rc = null;\nwindow.consumers = [];\nwindow.producers = [];\n\nconst config = {\n  video: {\n    width: { min: 640, ideal: 1920 },\n    height: { min: 400, ideal: 1080 },\n    encodings: [\n      {\n        rid: \"r0\",\n        maxBitrate: 100000,\n        scalabilityMode: \"S1T3\",\n      },\n      {\n        rid: \"r1\",\n        maxBitrate: 300000,\n        scalabilityMode: \"S1T3\",\n      },\n      {\n        rid: \"r2\",\n        maxBitrate: 900000,\n        scalabilityMode: \"S1T3\",\n      },\n    ],\n    codecOptions: {\n      videoGoogleStartBitrate: 1000,\n    },\n  },\n};\n\nclass RoomClient {\n  constructor(mediasoupClient, socket, callId) {\n    window.rc = this;\n    this.mediasoupClient = mediasoupClient;\n    this.socket = socket;\n    this.callId = callId;\n\n    // We will eventually have...\n    // Two transports (or one, if we are a monitor)\n    this.producerTransport = null;\n    this.consumerTransport = null;\n\n    // A device\n    this.device = null;\n\n    // Consumers and producers\n    this.consumers = {};\n    this.producers = {};\n\n    // Event handlers\n    this.handlers = { consume: [] };\n  }\n\n  async request(name, data) {\n    return new Promise((resolve, reject) => {\n      this.socket.emit(name, data, (response) => {\n        if (response.error) reject(response.error);\n        else resolve(response);\n      });\n    });\n  }\n\n  async handleTransportConnect(transport) {\n    return new Promise((resolve, reject) => {\n      // Wait for the producer transport to connect...\n      transport.on(\"connect\", async ({ dtlsParameters }, callback, errback) => {\n        console.log(\"got connect!\");\n        await this.request(\"establishDtls\", {\n          dtlsParameters,\n          callId: this.callId,\n          transportId: transport.id,\n        });\n\n        callback();\n        resolve();\n      });\n    });\n  }\n\n  async init() {\n    // Request to join the room.\n    // We will recieve two transports and\n    // and rtpCapabilities object, if we are allowed in.\n    const {\n      producerTransportInfo,\n      consumerTransportInfo,\n      routerRtpCapabilities,\n    } = await this.request(\"join\", { callId: this.callId });\n\n    // Load up a local media device consistent\n    // with the server's RTP capabilities.\n    this.device = await this.loadDevice(routerRtpCapabilities);\n\n    // Set up both transports and promise to send\n    // dtls info when they connect (this won't occur until\n    // someone actually produces).\n    if (producerTransportInfo) {\n      this.producerTransport = this.device.createSendTransport(\n        producerTransportInfo\n      );\n      this.handleTransportConnect(this.producerTransport);\n    }\n\n    this.consumerTransport = this.device.createRecvTransport(\n      consumerTransportInfo\n    );\n    this.handleTransportConnect(this.consumerTransport);\n\n    // Declare what our device is capable of.\n    await this.request(\"declareRtpCapabilities\", {\n      rtpCapabilities: this.device.rtpCapabilities,\n    });\n\n    // We don't actually need to wait for this request to come back.\n    this.request(\"finishConnecting\", { callId: this.callId });\n\n    // When our producer transport is producing a new stream,\n    // inform the server.\n\n    if (this.producerTransport) {\n      this.producerTransport.on(\n        \"produce\",\n        async ({ kind, rtpParameters }, callback, errback) => {\n          console.log(\"Sending produce request\");\n\n          const { producerId } = await this.request(\"produce\", {\n            callId: this.callId,\n            kind,\n            rtpParameters,\n          });\n\n          callback({ id: producerId });\n        }\n      );\n    }\n\n    // When we get a consumer, fire an event.\n    this.socket.on(\"consume\", async (info) => {\n      const { consumer, stream } = await this.consume(info);\n\n      this.socket.emit(\"resumeConsumer\", {\n        callId: this.callId,\n        consumerId: consumer.id,\n      });\n\n      this.handlers.consume.forEach((f) => f(info.kind, stream, info.user));\n    });\n  }\n\n  getMediaConstraints(type, deviceId) {\n    if (type === MEDIA_TYPE.audio) {\n      return { audio: { deviceId } };\n    } else if (type === MEDIA_TYPE.video) {\n      return {\n        video: {\n          width: config.video.width,\n          height: config.video.height,\n          deviceId,\n        },\n      };\n    }\n  }\n\n  async produce(type, deviceId = null) {\n    const mediaConstraints = this.getMediaConstraints(type, deviceId);\n    console.log(\"Media constraints are\", mediaConstraints);\n    const stream = await navigator.mediaDevices.getUserMedia(mediaConstraints);\n\n    console.log(\"Got stream\");\n\n    const track = (type === MEDIA_TYPE.audio\n      ? stream.getAudioTracks()\n      : stream.getVideoTracks())[0];\n\n    const params = { track };\n\n    console.log(\"got track\");\n\n    if (type === MEDIA_TYPE.video) {\n      params.encodings = config.video.encodings;\n      params.codecOptions = config.video.codecOptions;\n    }\n\n    console.log(\"producing with params\", params);\n\n    const producer = await this.producerTransport.produce(params);\n    console.log(\"produced with id\", producer.id);\n    window.producers.push(producer);\n    this.producers[producer.id] = producer;\n  }\n\n  async loadDevice(routerRtpCapabilities) {\n    const device = new this.mediasoupClient.Device();\n\n    await device.load({ routerRtpCapabilities });\n\n    return device;\n  }\n\n  async consume(info) {\n    const consumer = await this.consumerTransport.consume(info);\n    const stream = new MediaStream();\n\n    this.consumers[consumer.id] = consumer;\n\n    stream.addTrack(consumer.track);\n\n    console.log(\"Successfully created stream.\");\n    return { consumer, stream };\n  }\n\n  async on(event, fn) {\n    if (!(event in this.handlers)) {\n      this.handlers[event] = [];\n    }\n    this.handlers[event].push(fn);\n  }\n\n  async terminate() {\n    console.log(\"sending request to terminate\");\n    await this.request(\"terminate\", { callId: this.callId });\n  }\n}\n\nexport default RoomClient;\n","import React, { ReactElement, useState } from \"react\";\nimport \"./Video.css\";\nimport { Menu, Spin, Dropdown, Button, Modal } from \"antd\";\nimport {\n  AudioMutedOutlined,\n  AudioOutlined,\n  LockFilled,\n  MessageFilled,\n  MoreOutlined,\n  SettingFilled,\n} from \"@ant-design/icons\";\nimport { CallAlert } from \"src/typings/Call\";\n\nconst { SubMenu } = Menu;\n\ninterface Props {\n  alerts: CallAlert[];\n  terminateCall: () => void;\n  lockCall: () => void;\n  muteCall: () => void;\n  unmuteCall: () => void;\n  emitAlert: (alert: CallAlert) => void;\n  isAudioOn: boolean;\n}\n\nexport default function VideoOverlay({\n  alerts,\n  terminateCall,\n  lockCall,\n  muteCall,\n  unmuteCall,\n  isAudioOn,\n  emitAlert,\n}: Props): ReactElement {\n  const [selectedAlert, setSelectedAlert] = useState<CallAlert | null>(null);\n\n  const handleConfirmation = () => {\n    if (selectedAlert) emitAlert(selectedAlert);\n    setSelectedAlert(null);\n  };\n\n  const menu = (\n    <Menu>\n      <SubMenu key=\"alert\" icon={<MessageFilled />} title=\"Send Alert\">\n        {alerts.map((alert) => (\n          <Menu.Item key={alert.id} onClick={() => setSelectedAlert(alert)}>\n            {alert.title}\n          </Menu.Item>\n        ))}\n      </SubMenu>\n      <Menu.Item key=\"lock\" icon={<LockFilled />} onClick={() => lockCall()}>\n        Lock\n      </Menu.Item>\n      <Menu.Item\n        key=\"terminate\"\n        icon={<SettingFilled />}\n        onClick={() => terminateCall()}\n      >\n        Terminate Call\n      </Menu.Item>\n      <Menu.Item\n        key=\"mute\"\n        icon={isAudioOn ? <AudioMutedOutlined /> : <AudioOutlined />}\n        onClick={() => (isAudioOn ? muteCall() : unmuteCall())}\n      >\n        {isAudioOn ? \"Mute\" : \"Unmute\"}\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <div className=\"video-commands-overlay\">\n      <Dropdown overlay={menu}>\n        <Button>\n          <MoreOutlined />\n        </Button>\n      </Dropdown>\n      <Modal\n        title=\"Are you sure you want to send this alert?\"\n        visible={!!selectedAlert}\n        onOk={handleConfirmation}\n        onCancel={() => setSelectedAlert(null)}\n      >\n        <p>Send the following alert to the participants:</p>\n        <p>{selectedAlert?.body}</p>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"src/redux\";\nimport RoomClient from \"src/pages/LiveVisitation/RoomClient\";\nimport * as mediasoupClient from \"mediasoup-client\";\nimport { Menu, Spin, Dropdown, Button, Space } from \"antd\";\nimport \"./Video.css\";\nimport VideoOverlay from \"./VideoOverlay\";\nimport { CallAlert } from \"src/typings/Call\";\n\ninterface Props {\n  width: number | string;\n  height: number | string;\n  call: LiveVisitation;\n  socket: SocketIOClient.Socket;\n  alerts: CallAlert[];\n  terminateCall: (id: number) => void;\n  muteCall: (id: number) => void;\n  unmuteCall: (id: number) => void;\n  isAudioOn: boolean;\n  lockCall: (id: number) => void;\n}\n\ndeclare global {\n  interface Window {\n    Debug: any;\n  }\n}\n\nfunction Loader(): ReactElement {\n  return (\n    <div className=\"video-loading-spinner\">\n      <Spin tip=\"Loading video call...\" />\n    </div>\n  );\n}\n\nconst VideoChat: React.FC<Props> = React.memo(\n  ({\n    call,\n    width,\n    height,\n    socket,\n    alerts,\n    terminateCall,\n    lockCall,\n    muteCall,\n    unmuteCall,\n    isAudioOn,\n  }) => {\n    const token = useSelector(\n      (state: RootState) => state.session.authInfo.apiToken\n    );\n    const id = useSelector((state: RootState) => state.session.user.id);\n\n    const [loading, setLoading] = useState(false);\n    const [isAuthed, setIsAuthed] = useState(false);\n    const [rc, setRc] = useState<RoomClient>();\n\n    const callId = call.id;\n\n    const joinRoom = useCallback(async () => {\n      const rc = new RoomClient(mediasoupClient, socket, callId);\n      await rc.init();\n      setRc(rc);\n    }, [socket, callId]);\n\n    const emitAlert = async (alert: CallAlert) => {\n      const { participants } = await new Promise((resolve, reject) => {\n        socket.emit(\"info\", { callId }, resolve);\n      });\n      console.log(participants);\n      socket.emit(\"textMessage\", {\n        callId,\n        contents: alert.body,\n        recipients: participants,\n      });\n    };\n\n    // Asynchronously load the room\n    useEffect(() => {\n      setLoading(true);\n      if (!isAuthed) {\n        (async () => {\n          if (!socket.connected) {\n            console.log(\"Not connected, so waiting until connected.\");\n            window.Debug = socket;\n            await new Promise((resolve) => socket.on(\"connect\", resolve));\n            console.log(\"OK\");\n          }\n\n          await new Promise((resolve) => {\n            // TODO fetch actual credentials from redux\n            socket.emit(\n              \"authenticate\",\n              {\n                type: \"monitor\",\n                id,\n                token,\n              },\n              resolve\n            );\n          });\n          await joinRoom();\n          console.log(\"authenticated\");\n          setIsAuthed(true);\n        })();\n      }\n    }, [call.id, id, token, socket, joinRoom, isAuthed]);\n\n    const measuredRef = useCallback(\n      (node) => {\n        console.log(isAudioOn);\n        if (node !== null && rc && isAuthed) {\n          (async () => {\n            rc.on(\n              \"consume\",\n              async (\n                kind: string,\n                stream: MediaStream,\n                user: { type: string; id: number }\n              ) => {\n                if (node) {\n                  if (kind === \"video\") {\n                    const video = document.createElement(\"video\");\n                    video.style.width = \"50%\";\n                    video.style.height = \"100%\";\n                    video.srcObject = stream;\n                    video.autoplay = true;\n                    node.appendChild(video);\n                  } else if (kind === \"audio\") {\n                    const audio = document.createElement(\"audio\");\n                    audio.srcObject = stream;\n                    audio.autoplay = true;\n                    node.appendChild(audio);\n                  }\n\n                  setLoading(false);\n                }\n              }\n            );\n          })();\n        }\n      },\n      [rc, isAuthed, isAudioOn]\n    );\n\n    useEffect(() => {}, [isAudioOn]);\n\n     useEffect(() => {\n      if (rc && call) {\n        const interval = setInterval(() => {\n          rc.socket.emit(\"heartbeat\", { callId: call.id });\n        }, 1000);\n        return () => clearInterval(interval);\n      }\n    }, [rc, call]);\n\n    return (\n      <div\n        className=\"video-wrapper\"\n        style={{\n          width,\n          height,\n        }}\n        ref={measuredRef}\n      >\n        {/* <video id=\"visitor-video\"/>\n        <video id=\"inmate-video\"/>\n        <audio id=\"visitor-audio\"/>\n        <audio id=\"inmate-audio\"/> */}\n        <VideoOverlay\n          alerts={alerts}\n          terminateCall={() => rc && rc.terminate() }\n          lockCall={() => lockCall(callId)}\n          muteCall={() => muteCall(callId)}\n          unmuteCall={() => unmuteCall(callId)}\n          isAudioOn={isAudioOn}\n          emitAlert={emitAlert}\n        />\n        {loading && <Loader />}\n      </div>\n    );\n  }\n);\n\nexport default VideoChat;\n","import React, { ReactElement } from \"react\";\nimport { Badge, Card } from \"antd\";\nimport \"./Video.css\";\n\ninterface Props {\n  width: number | string;\n  height: number | string;\n}\n\nexport default function VideoSkeleton({ width, height }: Props): ReactElement {\n  return (\n    <Badge.Ribbon text=\"Offline\">\n      <Card style={{ width, height }} className=\"video-wrapper\"></Card>\n    </Badge.Ribbon>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { connect, ConnectedProps, useSelector } from \"react-redux\";\nimport { RootState } from \"src/redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Form from \"react-bootstrap/Form\";\nimport SidebarCard from \"src/components/cards/SidebarCard\";\nimport VisitationCard from \"src/components/cards/VisitationCard\";\n\nimport {\n  CALL_ALERTS,\n  GRID_TO_SPAN_WIDTH,\n  GRID_TO_VH_HEIGHT,\n  WRAPPER_STYLE,\n} from \"src/utils/constants\";\nimport ConnectionDetailsCard from \"src/components/cards/ConnectionDetailsCard\";\nimport Sidebar from \"src/components/containers/Sidebar\";\nimport { genFullName } from \"src/utils/utils\";\nimport Container from \"src/components/containers/Container\";\nimport Wrapper from \"src/components/containers/Wrapper\";\nimport io from \"socket.io-client\";\nimport { getAllCallsInfo, selectAllCalls } from \"src/redux/selectors\";\nimport {\n  Menu,\n  Button,\n  Dropdown,\n  Layout,\n  Row,\n  Col,\n  Space,\n  Carousel,\n} from \"antd\";\nimport { fetchCalls } from \"src/redux/modules/call\";\nimport VideoChat from \"src/pages/LiveVisitation/VideoChat\";\nimport VideoSkeleton from \"./VideoSkeleton\";\nimport { chownSync } from \"fs\";\nimport { GridOption } from \"src/typings/Call\";\nimport { socketsActions } from \"src/redux/modules/socket\";\nimport _ from \"lodash\";\n\nconst { Content } = Layout;\n// const { setSocket } = socketsActions;\n\nconst mapStateToProps = (state: RootState) => ({\n  // TODO update this once we have status selecotr\n  visitations: getAllCallsInfo(\n    state,\n    selectAllCalls(state)\n  ) as LiveVisitation[],\n  // socket: state.sockets.socket,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      fetchCalls,\n      // setSocket\n    },\n    dispatch\n  );\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst MAX_VH_HEIGHT_FRAMES = 80;\n\nconst LiveVisitationContainer: React.FC<PropsFromRedux> = ({\n  visitations,\n  fetchCalls,\n  // socket,\n  // setSocket,\n}) => {\n  const [socket, setSocket] = useState<SocketIOClient.Socket>();\n  const [visibleCalls, setVisibleCalls] = useState<LiveVisitation[]>([]);\n  const [grid, setGrid] = useState<GridOption>(1);\n  const [frameVhHeight, setFrameVhHeight] = useState(MAX_VH_HEIGHT_FRAMES);\n\n  const [consumeAudioRecord, setConsumeAudioRecord] = useState<\n    Record<number, boolean>\n  >({});\n\n  useEffect(() => {\n    const now = new Date().getTime();\n    fetchCalls({\n      approved: true,\n      firstLive: [0, now].join(\",\"),\n      end: [now, now + 1e8].join(\",\"),\n    });\n  }, [fetchCalls]);\n\n  useEffect(() => {\n    if (!socket) {\n      setSocket(\n        io.connect(\n          process.env.REACT_APP_MEDIASOUP_HOSTNAME || \"localhost:8000\",\n          // { transports: [\"websocket\"] }\n        )\n      );\n    }\n  }, [setSocket, socket]);\n\n  useEffect(() => {\n    setVisibleCalls(visitations.slice(0, grid));\n  }, [grid, visitations]);\n\n  const handleVideoTermination = () => {\n    // TODO add redux store request\n  };\n\n  // Grid options\n  const handleGridChange = (grid: GridOption) => {\n    setGrid(grid);\n    setFrameVhHeight(GRID_TO_VH_HEIGHT[grid]);\n  };\n\n  const OPTIONS: GridOption[] = [1, 2, 4, 6, 8];\n  const GridMenu = (\n    <Menu>\n      {OPTIONS.map((option) => (\n        <Menu.Item>\n          <span onClick={() => handleGridChange(option)}>View by {option}</span>\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  // console.log(consumeAudioRecord);\n  return (\n    <Content style={WRAPPER_STYLE}>\n      <Space direction=\"vertical\" style={{ width: \"100% \" }}>\n        <Dropdown overlay={GridMenu} placement=\"bottomLeft\">\n          <Button>View by {grid}</Button>\n        </Dropdown>\n        {/* <Carousel style={{ width: \"100% \" }}> */}\n        <Row>\n          {Array.from(Array(grid).keys()).map((idx) => (\n            <Col span={GRID_TO_SPAN_WIDTH[grid]}>\n              {visibleCalls.length - 1 >= idx && socket ? (\n                <VideoChat\n                  height={`${frameVhHeight}vh`}\n                  socket={socket}\n                  call={visibleCalls[idx]}\n                  width=\"100%\"\n                  alerts={CALL_ALERTS}\n                  terminateCall={handleVideoTermination}\n                  muteCall={(callId: number) => {\n                    setConsumeAudioRecord(_.omit(consumeAudioRecord, callId));\n                  }}\n                  unmuteCall={(callId: number) =>\n                    setConsumeAudioRecord({\n                      ...consumeAudioRecord,\n                      [callId]: true,\n                    })\n                  }\n                  isAudioOn={visibleCalls[idx].id in consumeAudioRecord}\n                  lockCall={(callId: number) => {\n                    console.log(callId);\n                  }}\n                />\n              ) : (\n                <VideoSkeleton width=\"100%\" height={`${frameVhHeight}vh`} />\n              )}\n            </Col>\n          ))}\n        </Row>\n        {/* </Carousel> */}\n      </Space>\n    </Content>\n  );\n};\n\nexport default connector(LiveVisitationContainer);\n","import React, { useState, useEffect } from \"react\";\nimport FullCalendar, {\n  EventClickArg,\n  EventContentArg,\n  EventInput,\n} from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport \"./CalendarView.css\";\nimport { VisitationToEventInput } from \"src/utils/utils\";\n\ninterface Props {\n  visitations: Visitation[];\n}\n\nconst CalendarView: React.FC<Props> = ({ visitations }) => {\n  const [events, setEvents] = useState<EventInput[]>([]);\n\n  const handleEventClick = (clickInfo: EventClickArg) => {\n    if (\n      window.confirm(\n        `Are you sure you want to delete the event '${clickInfo.event.title}'`\n      )\n    ) {\n      clickInfo.event.remove();\n    }\n  };\n\n  useEffect(() => {\n    setEvents(\n      visitations.map((visitation) => VisitationToEventInput(visitation))\n    );\n  }, [visitations]);\n\n  const renderEventContent = (\n    eventContent: EventContentArg\n  ): React.ReactFragment => {\n    return (\n      <>\n        <b>{eventContent.timeText}</b>\n        <i>{eventContent.event.title}</i>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"demo-app-main\">\n      <FullCalendar\n        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n        headerToolbar={{\n          left: \"prev,next today\",\n          center: \"title\",\n          right: \"dayGridMonth,timeGridWeek,timeGridDay\",\n        }}\n        initialView=\"timeGridWeek\"\n        editable={true}\n        selectable={true}\n        selectMirror={true}\n        dayMaxEvents={true}\n        weekends={false}\n        businessHours={true}\n        events={events} // alternatively, use the `events` setting to fetch from a feed\n        eventContent={renderEventContent} // custom render function\n        eventClick={handleEventClick}\n        themeSystem=\"bootstrap\"\n        // eventsSet={(events: EventApi[]) => setCurrentEvents(events)} // called after events are initialized/added/changed/removed\n        /* you can update a remote database when these fire:\n            eventAdd={function(){}}\n            eventChange={function(){}}\n            eventRemove={function(){}}\n            */\n      />\n    </div>\n  );\n};\n\nexport default CalendarView;\n","import React from \"react\";\n\ninterface Props {\n  title: string;\n}\n\nconst Sidebar: React.FC<Props> = ({ title, children }) => {\n  return (\n    <section className=\"left-sidebar\">\n      <span className=\"p3\">{title}</span>\n      {children}\n    </section>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\n\ninterface Props {\n  fluid?: boolean;\n  rounded?: boolean;\n}\n\nconst Container: React.FC<Props> = ({ children, fluid, rounded }) => {\n  const width = fluid ? \"w-100\" : \"\";\n  const corner = rounded ? \"\" : \"\";\n  return (\n    <section className={`main-container ${width} ${corner}`}>\n      {children}\n    </section>\n  );\n};\n\nexport default Container;\n","import React from \"react\";\n\ninterface Props {\n  horizontal?: boolean;\n}\n\nconst Wrapper: React.FC<Props> = ({ children, horizontal }) => {\n  const direction = horizontal\n    ? \"flex-row justify-content-between\"\n    : \"flex-column\";\n\n  return <section className={`d-flex ${direction} w-75`}>{children}</section>;\n};\n\nexport default Wrapper;\n","import React, { useEffect } from \"react\";\nimport CalendarView from \"src/components/calendar/CalendarView\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { RootState } from \"src/redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport Sidebar from \"src/components/containers/Sidebar\";\nimport Container from \"src/components/containers/Container\";\nimport Wrapper from \"src/components/containers/Wrapper\";\nimport { getAllCallsInfo } from \"src/redux/selectors\";\n\nconst mapStateToProps = (state: RootState) => ({\n  visitations: getAllCallsInfo(state, state.visitations.scheduledVisitations),\n  hasLoadedScheduledVisitations:\n    state.visitations.hasLoadedScheduledVisitations,\n});\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nfunction mondayMorning(): Date {\n  const now = new Date();\n  const day = now.getDay();\n  now.setDate(now.getDate() - day + 1);\n  now.setHours(0, 0, 0, 0);\n  return now;\n}\n\nfunction fridayEvening(): Date {\n  const now = new Date();\n  const day = now.getDay();\n  now.setDate(now.getDate() - day + 5);\n  now.setHours(23, 59, 59, 0);\n  return now;\n}\n\nconst UnconnectedKioskCalendarContainer: React.FC<PropsFromRedux> = ({\n  visitations,\n  hasLoadedScheduledVisitations,\n}) => {\n  // useEffect(() => {\n  //   if (!hasLoadedScheduledVisitations)\n  //     getVisitations(mondayMorning(), fridayEvening());\n  // });\n\n  return (\n    <div className=\"d-flex flex-row\">\n      <Sidebar title=\"Video BaseVisitation Calendar\"></Sidebar>\n      <Wrapper>\n        <Container>\n          <CalendarView visitations={visitations} />\n        </Container>\n      </Wrapper>\n    </div>\n  );\n};\n\nexport default connector(UnconnectedKioskCalendarContainer);\n","import React from \"react\";\nimport { CardType, CardSize } from \"src/utils/constants\";\nimport { Image } from \"react-bootstrap\";\nimport { genImageUri, genFullName } from \"src/utils/utils\";\nimport { format } from \"date-fns\";\n\ninterface Props {\n  type: CardType;\n  entity: Contact | Inmate;\n  size: CardSize;\n}\n\nconst UserSnippetCard: React.FC<Props> = ({ type, entity, size }) => {\n  const nameFontSize = size === CardSize.Medium ? \"p4\" : \"p3\";\n  const detailFontSize = size === CardSize.Medium ? \"p5\" : \"p4\";\n\n  const genSnippet = (): JSX.Element => {\n    switch (type) {\n      case CardType.Contact:\n        return (\n          <div className=\"d-flex flex-column\">\n            <span className={`${nameFontSize} text-truncate`}>\n              {genFullName(entity)}\n            </span>\n            {/* <span className={`${detailFontSize}`}>\n              {(entity as Contact).relationship}\n            </span> */}\n            <span className={`${detailFontSize}`}>\n              {/* {(entity as Contact).} */}\n            </span>\n          </div>\n        );\n      case CardType.Inmate:\n        return (\n          <div className=\"d-flex flex-column\">\n            <span className={`${nameFontSize} text-truncate`}>\n              {genFullName(entity)}\n            </span>\n            <span className={`${detailFontSize}`}>\n              {(entity as Inmate).inmateNumber}\n            </span>\n            {/* <span className={`${detailFontSize}`}>\n              {(entity as Inmate).nodes[0].name}\n            </span> */}\n          </div>\n        );\n      default:\n        return <div></div>;\n    }\n  };\n\n  return (\n    <div className=\"d-flex flex-row px-4 pt-1 align-items-center\">\n      <Image\n        rounded\n        className={`${size}-image mr-3`}\n        src={genImageUri(entity)}\n        roundedCircle\n      />\n      {genSnippet()}\n    </div>\n  );\n};\n\nexport default UserSnippetCard;\n","import React, { ReactElement } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport UserSnippetCard from \"src/components/cards/UserSnippetCard\";\nimport { CardType, CardSize } from \"src/utils/constants\";\nimport { Table, Tag, Space, Layout } from \"antd\";\nconst { Column } = Table;\nconst { Content } = Layout;\n\ninterface Props {\n  inmate: Inmate;\n  contact: Contact;\n  accept: (e: React.MouseEvent<HTMLDivElement>) => void;\n  decline: (e: React.MouseEvent<HTMLDivElement>) => void;\n}\n\nexport default function ConnectionRequestCard({\n  inmate,\n  contact,\n  accept,\n  decline,\n}: Props): ReactElement {\n  return (\n    <div>\n      <div className=\"d-flex flex-row w-100 justify-content-evenly my-5\">\n        <UserSnippetCard\n          type={CardType.Inmate}\n          entity={inmate}\n          size={CardSize.Large}\n        />\n        <UserSnippetCard\n          type={CardType.Contact}\n          entity={contact}\n          size={CardSize.Large}\n        />\n      </div>\n      <div className=\"d-flex flex-row my-5\">\n        <Button size=\"lg\" onClick={accept}>\n          Approve\n        </Button>\n        <Button size=\"lg\" variant=\"light\" className=\"ml-3\" onClick={decline}>\n          Decline\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport animationData from \"src/assets/lotties/VideoCam.json\";\nimport LottieSpinner from \"src/assets/lotties/LottieSpinner.json\";\n\nimport Lottie from \"react-lottie\";\nimport { LoadingTypes } from \"src/utils/constants\";\nimport { Spinner } from \"react-bootstrap\";\n\ninterface WithLoadingProps {\n  loading: boolean;\n  loadingType?: LoadingTypes;\n}\n\nexport const WithLoading = <P extends object>(\n  Component: React.ComponentType<P>\n): React.FC<P & WithLoadingProps> => ({\n  loading,\n  loadingType,\n  ...props\n}: WithLoadingProps) => {\n  let defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n\n  const genFeedback = (): JSX.Element => {\n    if (!loadingType) return <Spinner animation=\"border\" />;\n    switch (loadingType) {\n      case LoadingTypes.AcceptConnection:\n        // defaultOptions.animationData = CaringFamily;\n        const option = { ...defaultOptions, animationData: LottieSpinner };\n\n        return (\n          <div>\n            <Lottie options={option} width={200} height={200} />\n            <span>Creating the connection...</span>\n            <span>Notifying both parties that the request was accepted</span>\n          </div>\n        );\n      case LoadingTypes.FetchRecording:\n        return (\n          <div>\n            <Lottie options={defaultOptions} height={400} width={400} />\n            <span>\n              We're processing your request...it might take a minute or two.\n            </span>\n          </div>\n        );\n      default:\n        return <Spinner animation=\"border\" />;\n    }\n  };\n  return loading ? (\n    <div className=\"d-flex flex-column align-item-center justify-content-center text-center\">\n      {genFeedback()}\n    </div>\n  ) : (\n    <Component {...(props as P)} />\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { connect, ConnectedProps, useSelector } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport { RootState } from \"src/redux\";\nimport Sidebar from \"src/components/containers/Sidebar\";\nimport Wrapper from \"src/components/containers/Wrapper\";\nimport {\n  acceptConnectionRequest,\n  declineConnectionRequest,\n  selectConnectionRequest,\n} from \"src/redux/modules/connection_requests\";\nimport SidebarCard from \"src/components/cards/SidebarCard\";\nimport { CardType, LoadingTypes, PADDING } from \"src/utils/constants\";\nimport ConnectionRequestCard from \"./ConnectionRequestCard\";\nimport { WithLoading } from \"src/components/hocs/WithLoadingProps\";\nimport Container from \"src/components/containers/Container\";\nimport { getConnectionRequests } from \"src/api/Connection\";\nimport { selectInmateById, getAllConnectionsInfo } from \"src/redux/selectors\";\nimport { Table, Tag, Space, Layout, Avatar, Button } from \"antd\";\nimport { format } from \"date-fns\";\nimport { genFullName } from \"src/utils/utils\";\n\nconst { Column } = Table;\nconst { Content } = Layout;\n\nconst mapStateToProps = (state: RootState) => ({\n  requests: getAllConnectionsInfo(state, state.requests.requests),\n  // selected: state.requests.selectedRequest,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      acceptConnectionRequest,\n      declineConnectionRequest,\n      selectConnectionRequest,\n    },\n    dispatch\n  );\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst ConnectionRequestWithLoading = WithLoading(ConnectionRequestCard);\n\nconst ConnectionRequestsContainer: React.FC<PropsFromRedux> = ({\n  requests,\n  // selected,\n  acceptConnectionRequest,\n  declineConnectionRequest,\n  selectConnectionRequest,\n}) => {\n  //TODO replace this with appropriate Redux Logic\n\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const handleAccept = (request: BaseConnection): void => {\n    acceptConnectionRequest(request);\n    setLoading(true);\n    setTimeout(function () {\n      setLoading(false);\n    }, 3000);\n  };\n\n  const handleDecline = (request: BaseConnection): void => {\n    declineConnectionRequest(request);\n  };\n\n  useEffect(() => {\n    //TODO, replace this with loading logic\n    getConnectionRequests();\n  }, []);\n\n  return (\n    <Content style={{ padding: PADDING }}>\n      <Table dataSource={requests}>\n        <Column\n          title=\"\"\n          dataIndex=\"inmate\"\n          key=\"inmateProfilePic\"\n          render={(inmate: Inmate) => (\n            <>\n              {\n                <Avatar\n                  src={inmate.profileImgPath}\n                  shape=\"circle\"\n                  size={{ xs: 24, sm: 32, md: 40, lg: 64, xl: 80, xxl: 100 }}\n                />\n              }\n            </>\n          )}\n        />\n        <Column\n          title=\"Inmate\"\n          dataIndex=\"inmate\"\n          key=\"inmateProfilePic\"\n          render={(inmate: Inmate) => (\n            <>\n              <Space direction=\"vertical\">\n                <span>{genFullName(inmate)}</span>\n                <span>{inmate.inmateNumber}</span>\n                {/* <span>{format(new Date(inmate.dob), \"DD/mm/yy\")}</span> */}\n                <span>{inmate.location}</span>\n              </Space>\n            </>\n          )}\n        />\n        <Column\n          title=\"\"\n          dataIndex=\"contact\"\n          key=\"contactProfilePic\"\n          render={(contact: Contact) => (\n            <>\n              <Avatar\n                src={contact.profileImgPath}\n                shape=\"circle\"\n                size={{ xs: 24, sm: 32, md: 40, lg: 64, xl: 80, xxl: 100 }}\n              />\n            </>\n          )}\n        />\n        <Column\n          title=\"Contact\"\n          dataIndex=\"contact\"\n          key=\"contactInfo\"\n          render={(contact: Contact) => (\n            <>\n              <Space direction=\"vertical\">\n                <span>{genFullName(contact)}</span>\n                <span>Visitor ID: {contact.id}</span>\n                <span>{contact.relationship}</span>\n              </Space>\n            </>\n          )}\n        />\n        <Column\n          title=\"\"\n          key=\"actions\"\n          render={(_text, request: Connection) => (\n            <Space>\n              <Button type=\"primary\" onClick={() => handleAccept(request)}>\n                Accept\n              </Button>\n              <Button danger onClick={() => handleDecline(request)}>\n                Reject\n              </Button>\n            </Space>\n          )}\n        />\n      </Table>\n      {/* <Wrapper>\n        {requests.map((request) => (\n          <ConnectionRequestWithLoading\n            accept={() => handleAccept(request)}\n            decline={() => handleDecline(request)}\n            contact={request.contact}\n            inmate={request.inmate}\n            loading={loading}\n            loadingType={LoadingTypes.AcceptConnection}\n          />\n        ))}\n      </Wrapper> */}\n    </Content>\n  );\n};\n\nexport default connector(ConnectionRequestsContainer);\n","import React, { ReactElement } from \"react\";\nimport { Video } from \"react-feather\";\nimport { format } from \"date-fns\";\nimport { calculateDurationMS } from \"src/utils/utils\";\n\ninterface Props {\n  kioskId: number;\n  endTime: number;\n  startTime: number;\n  currentTime: number;\n}\n\nexport default function VisitationCardHeader({\n  kioskId,\n  endTime,\n  startTime,\n  currentTime,\n}: Props): ReactElement {\n  return (\n    <div className=\"d-flex flex-row justify-content-between\">\n      <span className=\"p2 font-weight-bold\">Kiosk #{kioskId}</span>\n      <div className=\"d-flex flex-row\">\n        <div className=\"d-flex align-items-center\">\n          <Video className=\"black-500\" />\n          <span className=\"ml-1 black-500\">Video Call</span>\n        </div>\n        <div className=\"d-flex ml-3 align-items-center\">\n          <span className=\"circle red\" />\n          <span className=\"ml-1 black-500\">\n            {calculateDurationMS(new Date(currentTime), new Date(endTime))}\n          </span>\n        </div>\n        <div className=\"d-flex flex-row ml-3 align-items-center\">\n          <span className=\"black-500\">Start Time:</span>\n          <span className=\"ml-1 black-500\">\n            {format(new Date(startTime), \"h:mm\")}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport VideoChat from \"src/pages/LiveVisitation/VideoChat\";\nimport { genFullName } from \"src/utils/utils\";\nimport VisitationCardHeader from \"../headers/VisitationCardHeader\";\nimport { CardType } from \"src/utils/constants\";\nimport VideRecordingCard from \"./VideRecordingCard\";\nimport { Button } from \"react-bootstrap\";\n\ninterface Props {\n  visitation: LiveVisitation | RecordedVisitation;\n  type: CardType;\n  actionLabel: string;\n  handleClick: () => void; // TODO: enforce this\n  socket: SocketIOClient.Socket;\n}\n\nconst VisitationCard: React.FC<Props> = ({\n  visitation,\n  type,\n  actionLabel,\n  handleClick,\n  socket,\n}) => {\n  const {\n    id: callId,\n    startTime,\n    kiosk: { id: kioskId },\n    scheduledEndTime,\n    connection,\n  } = visitation;\n  const { inmate, contact } = connection;\n  const [now, setNow] = useState<Date>(new Date());\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setNow(new Date());\n    }, 1000);\n    return () => clearTimeout(timer);\n  });\n\n  const genMainComponent = (): JSX.Element => {\n    switch (type) {\n      // case CardType.LiveVisitation:\n      //   return <VideoChat callId={callId} socket={socket} />;\n      default:\n        return <div />;\n    }\n  };\n\n  return (\n    <div>\n      <VisitationCardHeader\n        startTime={startTime}\n        endTime={\n          type === CardType.LiveVisitation\n            ? scheduledEndTime\n            : (visitation as RecordedVisitation).endTime\n        }\n        kioskId={kioskId}\n        currentTime={\n          type === CardType.LiveVisitation\n            ? now.getTime()\n            : (visitation as RecordedVisitation).endTime\n        }\n      />\n      {genMainComponent()}\n      {/* <div className=\"d-flex flex-row justify-content-between w-100 mt-3\">\n        <div className=\"d-flex flex-row mt-3\">\n          <span className=\"p3\">{genFullName(inmate)}</span>\n          <span className=\"p3 black-400\">&nbsp;{actionLabel}&nbsp;</span>\n          <span className=\"p3\">{genFullName(contact)}</span>\n        </div>\n        {type === CardType.LiveVisitation && (\n          <Button variant=\"danger\" onClick={(e) => handleClick()}>\n            End Call\n          </Button>\n        )}\n      </div> */}\n    </div>\n  );\n};\n\nexport default VisitationCard;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { ReactElement, useState } from \"react\";\n// import { Dropdown, DropdownButton, Form, FormControl } from 'react-bootstrap'\nimport { Menu, Dropdown } from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\";\nimport { DatePicker, Space } from \"antd\";\n\nconst { RangePicker } = DatePicker;\n\ninterface Props {\n  setStartDate: (date: number) => void;\n  setEndDate: (date: number) => void;\n  setDuration: (maxDuration: number) => void;\n}\n\nexport default function CallFiltersHeader({\n  setDuration,\n  setStartDate,\n  setEndDate,\n}: Props): ReactElement {\n  const DURATION_FILTERS = [Infinity, 3, 5, 10, 15, 20];\n\n  const DurationFilters = (\n    <Menu>\n      {DURATION_FILTERS.map((duration) => (\n        <Menu.Item key={duration} onClick={() => setDuration(duration)}>\n          {\"<\"}\n          {duration}\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  return (\n    <Space align=\"center\">\n      <RangePicker\n        onChange={(date) => {\n          if (!date) return;\n          if (date[0]) setStartDate(date[0].unix() * 1000);\n          if (date[1]) setEndDate(date[1].unix() * 1000);\n        }}\n      />\n      <Dropdown overlay={DurationFilters} trigger={[\"click\"]}>\n        <a className=\"ant-dropdown-link\" onClick={(e) => e.preventDefault()}>\n          Call Duration <DownOutlined />\n        </a>\n      </Dropdown>\n    </Space>\n  );\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { RootState } from \"src/redux\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport { selectPastVisitation } from \"src/redux/modules/visitation\";\nimport { CardType, LoadingTypes, PADDING } from \"src/utils/constants\";\nimport { genFullName } from \"src/utils/utils\";\nimport VisitationCard from \"src/components/cards/VisitationCard\";\nimport { WithLoading } from \"src/components/hocs/WithLoadingProps\";\nimport { getAllCallsInfo, selectAllCalls } from \"src/redux/selectors\";\nimport { format, getDate, getTime } from \"date-fns\";\nimport { fetchCalls } from \"src/redux/modules/call\";\nimport CallFiltersHeader from \"./CallFilters\";\nimport _ from \"lodash\";\nimport { Table, Tag, Space, Layout, Button } from \"antd\";\nimport Search from \"antd/lib/input/Search\";\nimport { push } from \"connected-react-router\";\n\nconst { Column } = Table;\nconst { Content } = Layout;\n\nconst mapStateToProps = (state: RootState) => ({\n  logs: getAllCallsInfo(state, selectAllCalls(state)).filter(\n    (x) => x.startTime && x.endTime\n  ) as RecordedVisitation[],\n  selected: state.visitations.selectedPastVisitation,\n  history: state.router,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators({ fetchCalls, selectPastVisitation, push }, dispatch);\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst VisitationCardWithLoading = WithLoading(VisitationCard);\n\nconst LogsContainer: React.FC<PropsFromRedux> = ({\n  logs,\n  selected,\n  selectPastVisitation,\n  fetchCalls,\n  push,\n}) => {\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n  const [global, setGlobal] = useState<string>(\"\");\n  const [limit] = useState(100);\n  const [offset, setOffset] = useState(0);\n  const [startDate, setStartDate] = useState<number>();\n  const [endDate, setEndDate] = useState<number>();\n  const [maxDuration, setMaxDuration] = useState<number>();\n  const [loading, setLoading] = useState<boolean>(false);\n\n  // const debounceUpdate = useCallback(\n  //   _.debounce(() => setGlobal(searchQuery), 1000),\n  //   [searchQuery]\n  // );\n\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(e.target.value);\n    // debounceUpdate();\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    (async () =>\n      fetchCalls({\n        query: global,\n        startDate,\n        endDate,\n        minDuration: 0,\n        maxDuration,\n        limit,\n        offset,\n      }))();\n    setLoading(false);\n  }, [fetchCalls, limit, offset, startDate, endDate, maxDuration, global]);\n\n  return (\n    <Content style={{ padding: PADDING }}>\n      <Space direction=\"vertical\" style={{ width: \"100% \" }}>\n        <Search\n          placeholder=\"Search by Name, Inmate ID, Facility, Pod ID, ...\"\n          allowClear\n          value={searchQuery}\n          onChange={handleSearchChange}\n          onSearch={(value) => {\n            setGlobal(value);\n          }}\n        />\n        <CallFiltersHeader\n          setStartDate={setStartDate}\n          setEndDate={setEndDate}\n          setDuration={setMaxDuration}\n        />\n\n        <Table dataSource={logs} loading={loading}>\n          <Column\n            title=\"Date\"\n            dataIndex=\"startTime\"\n            key=\"date\"\n            render={(time) => (\n              <>\n                <span>{format(time, \"MM/dd/yy\")}</span>\n              </>\n            )}\n          />\n          <Column\n            title=\"Start Time\"\n            dataIndex=\"startTime\"\n            key=\"startTime\"\n            render={(time) => (\n              <>\n                <span>{format(time, \"HH:mm\")}</span>\n              </>\n            )}\n          />\n          <Column\n            title=\"End Time\"\n            dataIndex=\"endTime\"\n            key=\"endTime\"\n            render={(time) => (\n              <>\n                <span>{format(time, \"HH:mm\")}</span>\n              </>\n            )}\n          />\n          <Column\n            title=\"Inmate Name\"\n            dataIndex=\"connection\"\n            key=\"connection\"\n            render={(connection: Connection) => (\n              <>\n                <span>{genFullName(connection.inmate)}</span>\n              </>\n            )}\n          />\n          <Column\n            title=\"Inmate ID\"\n            dataIndex=\"connection\"\n            key=\"inmateId\"\n            render={(connection: Connection) => (\n              <>\n                <span>{connection.inmate.inmateNumber}</span>\n              </>\n            )}\n          />\n          <Column\n            title=\"Contact Name\"\n            dataIndex=\"connection\"\n            key=\"contactName\"\n            render={(connection: Connection) => (\n              <>\n                <span>{genFullName(connection.contact)}</span>\n              </>\n            )}\n          />\n          {/* Change this */}\n          <Column\n            title=\"Location\"\n            dataIndex=\"connection\"\n            key=\"location\"\n            render={(connection: Connection) => (\n              <>\n                <span>{connection.inmate.location}</span>\n              </>\n            )}\n          />\n\n          <Column\n            title=\"Recording\"\n            key=\"action\"\n            render={(_text, visitation: RecordedVisitation) => (\n              <Space size=\"middle\">\n                <Button onClick={() => push(`/call/${visitation.id}`)}>\n                  View\n                </Button>\n              </Space>\n            )}\n          />\n        </Table>\n      </Space>\n    </Content>\n  );\n};\n\nexport default connector(LogsContainer);\n","import React, { ReactElement } from \"react\";\nimport { Form, Input, Button, Select, Switch } from \"antd\";\nimport { UserOutlined, SendOutlined } from \"@ant-design/icons\";\nimport { STAFF_PERMISSION_OPTIONS } from \"src/utils/constants\";\n\nconst { Option } = Select;\n\nexport interface StaffFormFields {\n  email: string;\n  role: string;\n  permissions: Permission[];\n}\ninterface Props {\n  // onFinish: () => void;\n  data: StaffFormFields;\n  onChange: (data: StaffFormFields) => void;\n}\n\nexport default function CreateStaffForm({\n  data,\n  onChange,\n}: Props): ReactElement {\n  const [form] = Form.useForm();\n\n  return (\n    <Form form={form} name=\"control-hooks\">\n      <Form.Item\n        name=\"email\"\n        label=\"Email\"\n        rules={[{ type: \"email\", required: true }]}\n      >\n        <Input\n          placeholder=\"Email\"\n          prefix={<SendOutlined className=\"site-form-item-icon\" />}\n          value={data.email}\n          onChange={(event) => onChange({ ...data, email: event.target.value })}\n        />\n      </Form.Item>\n      <Form.Item name=\"gender\" label=\"Role\" rules={[{ required: true }]}>\n        <Select\n          placeholder=\"Select a role\"\n          value={data.role}\n          onChange={(value) => onChange({ ...data, role: value })}\n          allowClear\n        >\n          <Option value=\"operator\">Operator</Option>\n          <Option value=\"investigator\">Investigator</Option>\n          <Option value=\"warden\">Warden</Option>\n          <Option value=\"admin\">Admin</Option>\n        </Select>\n      </Form.Item>\n      <Form.Item>\n        {/* TODO create coomponent for the switches */}\n        {Object.keys(STAFF_PERMISSION_OPTIONS).map((key) => (\n          <div>\n            <span>{STAFF_PERMISSION_OPTIONS[key as Permission]}</span>\n            <Switch\n              defaultChecked={false}\n              checked={data.permissions.includes(key as Permission)}\n              onChange={(checked) => {\n                if (checked)\n                  onChange({\n                    ...data,\n                    permissions: [...data.permissions, key as Permission],\n                  });\n                else\n                  onChange({\n                    ...data,\n                    permissions: data.permissions.filter(\n                      (permission) => permission !== key\n                    ),\n                  });\n              }}\n            />\n          </div>\n        ))}\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { RootState } from \"src/redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport { loadStaff, updateStaff } from \"src/redux/modules/staff\";\nimport Wrapper from \"src/components/containers/Wrapper\";\nimport SidebarCard from \"src/components/cards/SidebarCard\";\nimport {\n  CardType,\n  PADDING,\n  STAFF_PERMISSION_OPTIONS,\n} from \"src/utils/constants\";\nimport Sidebar from \"src/components/containers/Sidebar\";\nimport Container from \"src/components/containers/Container\";\nimport UserDetailsCard from \"src/components/cards/UserDetailsCard\";\nimport { Table, Tag, Space, Layout, Avatar, Divider } from \"antd\";\nimport { selectAllStaff } from \"src/redux/selectors\";\nimport { Image } from \"antd\";\nimport { Modal, Button } from \"antd\";\nimport { Switch } from \"antd\";\nimport { SwitchChangeEventHandler } from \"antd/lib/switch\";\nimport { cloneObject, genFullName, mapPermissionMap } from \"src/utils/utils\";\nimport CreateStaffForm, { StaffFormFields } from \"./CreateStaffForm\";\n\nconst { Column } = Table;\nconst { Content } = Layout;\n\nconst mapStateToProps = (state: RootState) => ({\n  staff: selectAllStaff(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators({ loadStaff, updateStaff }, dispatch);\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst StaffContainer: React.FC<PropsFromRedux> = ({\n  staff,\n  updateStaff,\n  loadStaff,\n}) => {\n  const [modalType, setModalType] = useState<\"create\" | \"edit\" | null>(null);\n  const [selected, setSelected] = useState<Staff>();\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [formData, setFormData] = useState<StaffFormFields>({\n    email: \"\",\n    role: \"\",\n    permissions: [],\n  });\n  const [selectedPermissions, setSelectedPermissions] = useState<\n    Record<Permission, boolean>\n  >({\n    allowRead: false,\n    allowCalltimes: false,\n    allowApproval: false,\n    allowRestructure: false,\n    allowMonitor: false,\n  });\n\n  // create d\n  const showModal = (record: Staff) => {\n    setSelected(record);\n  };\n\n  const handleOk = () => {\n    setConfirmLoading(true);\n    switch (modalType) {\n      case \"edit\":\n        if (selected)\n          updateStaff({\n            userId: selected.id,\n            permissions: Object.keys(selectedPermissions).filter(\n              (key) => selectedPermissions[key as Permission]\n            ) as Permission[],\n          });\n        break;\n      case \"create\":\n        // do somethin\n        break;\n    }\n\n    setConfirmLoading(false);\n  };\n\n  useEffect(() => {\n    loadStaff();\n  }, [loadStaff]);\n\n  useEffect(() => {\n    if (selected)\n      setSelectedPermissions(mapPermissionMap(selected.permissions));\n  }, [selected]);\n\n  return (\n    <Content style={{ padding: PADDING }}>\n      {/* <Space align=\"end\" direction=\"vertical\" style={{ flex: 1 }}> */}\n      <Button type=\"primary\" onClick={() => setModalType(\"create\")}>\n        Add\n      </Button>\n      <Divider />\n\n      <Table dataSource={staff}>\n        <Column\n          title=\"\"\n          dataIndex=\"profileImgPath\"\n          key=\"profileImgPath\"\n          render={(img) => (\n            <>\n              <Avatar src={img} size=\"large\" />\n            </>\n          )}\n        />\n        <Column title=\"First Name\" dataIndex=\"firstName\" key=\"firstName\" />\n        <Column title=\"Last Name\" dataIndex=\"lastName\" key=\"lastName\" />\n        <Column\n          title=\"Role\"\n          dataIndex=\"role\"\n          key=\"role\"\n          render={(role) => (\n            <>\n              <Tag color=\"blue\" key={role}>\n                {role || \"Operator\"}\n              </Tag>\n            </>\n          )}\n        />\n        <Column\n          title=\"\"\n          key=\"edit\"\n          render={(_text, record: Staff) => (\n            <Button\n              onClick={() => {\n                setSelected(record);\n                setModalType(\"edit\");\n              }}\n            >\n              Edit\n            </Button>\n          )}\n        />\n      </Table>\n      {/* </Space> */}\n      <Modal\n        title=\"Add Staff\"\n        visible={modalType === \"create\"}\n        onOk={handleOk}\n        confirmLoading={confirmLoading}\n        onCancel={() => setModalType(null)}\n      >\n        <CreateStaffForm data={formData} onChange={setFormData} />\n      </Modal>\n      <Modal\n        title=\"Edit Staff\"\n        visible={modalType === \"edit\"}\n        onOk={handleOk}\n        confirmLoading={confirmLoading}\n        onCancel={() => setModalType(null)}\n      >\n        {selected && (\n          <Space direction=\"vertical\" size=\"small\" style={{width: '100%'}}>\n            <span>Name: {genFullName(selected)}</span>\n            <span>Role: {selected.role}</span>\n            <span>Email: {selected.email}</span>\n            <Divider  />\n            {Object.keys(STAFF_PERMISSION_OPTIONS).map((key) => (\n              <Space>\n                <span>{STAFF_PERMISSION_OPTIONS[key as Permission]}</span>\n                <Switch\n                  defaultChecked={selected.permissions.includes(\n                    key as Permission\n                  )}\n                  checked={selectedPermissions[key as Permission]}\n                  onChange={(checked) => {\n                    const update = cloneObject(selectedPermissions) as Record<\n                      Permission,\n                      boolean\n                    >;\n                    update[key as Permission] = checked;\n                    setSelectedPermissions(update);\n                  }}\n                />\n              </Space>\n            ))}\n          </Space>\n        )}\n      </Modal>\n    </Content>\n  );\n};\n\nexport default connector(StaffContainer);\n","import React from \"react\";\nimport { genImageUri, genFullName } from \"src/utils/utils\";\nimport { Image } from \"react-bootstrap\";\nimport \"./ConnectionCard.css\";\n\ninterface Props {\n  inmate: Inmate;\n  contact: Contact;\n  kioskId?: number;\n  fontColor?: string;\n  actionLabel: string;\n  border?: boolean;\n}\n\nconst ConnectionCard: React.FC<Props> = ({\n  inmate,\n  contact,\n  kioskId,\n  fontColor,\n  actionLabel,\n  border,\n}) => {\n  const color = fontColor ? fontColor : \"black-500\";\n  const decoration = border\n    ? \"border p-2 rounded mr-3 mt-3 connection-card-standalone\"\n    : \"\";\n  return (\n    <div className={`d-flex flex-row ${decoration}`}>\n      <div className=\"d-flex flex-column align-items-center\">\n        {kioskId && <span className=\"font-weight-bold\">Kiosk {kioskId}</span>}\n        <div className=\"facepile-container\">\n          <Image\n            className=\"small-image facepile-image p4\"\n            src={genImageUri(inmate)}\n            roundedCircle\n          />\n          <Image\n            className=\"small-image facepile-image p4\"\n            src={genImageUri(contact)}\n            roundedCircle\n          />\n        </div>\n      </div>\n      <div className=\"ml-4 d-flex flex-column\">\n        <span className={`${color}`}>{genFullName(inmate)}</span>\n        <div className=\"d-flex flex-row justify-content-between\">\n          <span className=\"p6 text-truncate\">\n            {actionLabel}{\" \"}\n            <span className={` p6 ${color}`}>{genFullName(contact)}</span>\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConnectionCard;\n","import React, { ReactElement } from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport { genFullName } from \"src/utils/utils\";\nimport { CardType } from \"src/utils/constants\";\n\ninterface Props {\n  type: CardType;\n  user: Staff | Inmate | Contact;\n  fontColor: string;\n}\n\nexport default function UserCard({\n  user,\n  fontColor,\n  type,\n}: Props): ReactElement {\n  console.log(user);\n  const genDetails = (): JSX.Element => {\n    switch (type) {\n      case CardType.Inmate:\n        const inmate = user as Inmate;\n        return <span className=\"p6 \">{inmate.inmateNumber}</span>;\n      case CardType.Contact:\n        const contact = user as Contact;\n        return <span className=\"p6 \">{contact.relationship}</span>;\n      default:\n        return <div></div>;\n    }\n  };\n  return (\n    <div className=\"d-flex flex-row\">\n      <Image src={user.profileImgPath} roundedCircle className=\"small-image\" />\n      <div className=\"d-flex flex-column ml-3\">\n        <span className={fontColor}>{genFullName(user)}</span>\n        {genDetails()}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { CardType } from \"src/utils/constants\";\nimport ConnectionCard from \"./ConnectionCard\";\nimport UserCard from \"./UserCard\";\n\ninterface Props {\n  type: CardType;\n  entity: LiveVisitation | BaseConnection | Staff | Inmate;\n  handleClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  isActive: boolean;\n}\n\nconst SidebarCard: React.FC<Props> = ({\n  type,\n  entity,\n  handleClick,\n  isActive,\n}) => {\n  const activeBorder = isActive ? \"left-sidebar-card-active\" : \"\";\n  const fontColor = isActive ? \"primary\" : \"black-500\";\n\n  const genCard = (): JSX.Element => {\n    switch (type) {\n      case CardType.LiveVisitation:\n        const { connection, id } = entity as LiveVisitation;\n        return (\n          <ConnectionCard\n            inmate={connection.inmate}\n            contact={connection.contact}\n            kioskId={id}\n            fontColor={fontColor}\n            actionLabel=\"Calling\"\n          />\n        );\n      case CardType.ConnectionRequest:\n        const connectionRequest = entity as Connection;\n        return (\n          <ConnectionCard\n            inmate={connectionRequest.inmate}\n            contact={connectionRequest.contact}\n            fontColor={fontColor}\n            actionLabel=\"Requests\"\n          />\n        );\n      case CardType.PastVisitation:\n        const record = entity as RecordedVisitation;\n        return (\n          <ConnectionCard\n            inmate={record.connection.inmate}\n            contact={record.connection.contact}\n            fontColor={fontColor}\n            actionLabel=\"Called\"\n          />\n        );\n      case CardType.Staff:\n        const member = entity as Staff;\n        return (\n          <UserCard user={member} fontColor={fontColor} type={CardType.Staff} />\n        );\n      case CardType.Inmate:\n        const inmate = entity as Inmate;\n        return (\n          <UserCard\n            user={inmate}\n            fontColor={fontColor}\n            type={CardType.Inmate}\n          />\n        );\n\n      default:\n        return <div></div>;\n    }\n  };\n  return (\n    <div\n      className={`pr-3 py-4 left-sidebar-card border-bottom ${activeBorder}`}\n      onClick={handleClick}\n    >\n      {genCard()}\n    </div>\n  );\n};\n\nexport default SidebarCard;\n","import React, { useEffect, useState } from \"react\";\nimport { connect, ConnectedProps, useSelector } from \"react-redux\";\nimport { RootState } from \"src/redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\n// import {  selectInmate } from \"src/redux/modules/inmate\";\nimport UserDetailsCard from \"src/components/cards/UserDetailsCard\";\nimport { CardType } from \"src/utils/constants\";\nimport Container from \"src/components/containers/Container\";\nimport Wrapper from \"src/components/containers/Wrapper\";\nimport Sidebar from \"src/components/containers/Sidebar\";\nimport SidebarCard from \"src/components/cards/SidebarCard\";\nimport UserCard from \"src/components/cards/UserCard\";\nimport ConnectionCard from \"src/components/cards/ConnectionCard\";\nimport { selectAllInmates } from \"src/redux/selectors\";\n\n// const mapStateToProps = (state: RootState) => ({\n//   inmates: state.inmates.inmates,\n//   selected: state.inmates.selectedInmate,\n//   selectedConnections: state.connections.connections.filter(\n//     (connection) => connection.inmateId === state.inmates.selectedInmate?.id\n//   ),\n// });\n\n// const mapDispatchToProps = (dispatch: Dispatch) =>\n//   bindActionCreators({ selectInmate }, dispatch);\n\n// const connector = connect(mapStateToProps, mapDispatchToProps);\n// type PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst InmateContainer: React.FC = (\n  {\n    // selectInmate,\n    // inmates,\n    // selected,\n    // selectedConnections,\n  }\n) => {\n  // const [recordedVisitations, setRecordedVisitations] = useState<\n  //   RecordedVisitation[]\n  // >([]);\n\n  const inmates = useSelector(selectAllInmates);\n  /*\n  useEffect(() => {\n    //TODO must change this with loading logic\n    if (!inmates.length) loadConnections();\n    if (!inmates.length) loadInmates();\n    const result = selectedConnections\n      .map((connection) => connection.recordedVisitations)\n      .reduce((accumulator, value) => accumulator.concat(value), []);\n    setRecordedVisitations(result);\n  }, [inmates, selectedConnections, loadConnections, loadInmates]);\n  */\n\n  return (\n    <div className=\"d-flex flex-row\">\n      <Sidebar title=\"Members\">\n        {inmates.map((inmate) => (\n          <SidebarCard\n            key={inmate.id}\n            type={CardType.Inmate}\n            entity={inmate}\n            isActive={false}\n            handleClick={(e) => console.log(\"clicked\")}\n            // isActive={inmate.id === selected?.id}\n            // handleClick={(e) => selectInmate(inmate)}\n          />\n        ))}\n      </Sidebar>\n      {/* {true && (\n        <Wrapper horizontal>\n          <Container fluid>\n            <div className=\"d-flex flex-column\">\n              <span className=\"font-weight-bold p3\">Activity</span>\n              <span className=\"black-400\">Past Calls</span>\n            </div>\n            <div className=\"d-flex flex-row flex-wrap mw-75 w-75\">\n              {recordedVisitations.map((visitation) => (\n                <ConnectionCard\n                  kioskId={visitation.kiosk.id}\n                  key={visitation.id}\n                  inmate={visitation.connection.inmate}\n                  contact={visitation.connection.contact}\n                  actionLabel=\"Called\"\n                  border\n                />\n              ))}\n            </div>\n          </Container>\n          <Container>\n            <div className=\"d-flex flex-column\">\n              <UserDetailsCard type={CardType.Inmate} user={selected} />\n              <UserDetailsCard type={CardType.Inmate} user={inmates[0]} />\n\n              <span className=\"black-500 mt-3\">\n                Connections ({connections.length})\n              </span>\n              {connections.map((connection) => (\n                <div\n                  key={connection.id}\n                  className=\"d-flex flex-column border-bottom py-3\"\n                >\n                  <UserCard\n                    user={connection.contact}\n                    fontColor=\"black-500\"\n                    type={CardType.Contact}\n                  />\n                  TODO add the connection background here\n                </div>\n              ))}\n            </div>\n          </Container>\n        </Wrapper>\n      )} */}\n    </div>\n  );\n};\n\nexport default InmateContainer;\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst COLOR = \"rgba(0, 137, 255, 1)\";\nconst BG = \"rgba(0, 137, 255, 0.4)\";\nconst DARKER_COLOR = \"rgba(2, 117, 216, 1)\";\n\ninterface Props {}\n\nconst LineChart: React.FC<Props> = () => {\n  const data = {\n    labels: [\"July 6\", \"July 13\", \"July 20\", \"July 27\", \"Aug 3\", \"Aug 10\"],\n    datasets: [\n      {\n        label: \"# of Visitations\",\n        lineTension: 0.1,\n        backgroundColor: BG,\n        borderColor: COLOR,\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: COLOR,\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 5,\n        pointHoverRadius: 8,\n        pointHoverBackgroundColor: COLOR,\n        pointHoverBorderColor: DARKER_COLOR,\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: [34, 59, 44, 72, 80, 90, 40],\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <span className=\"p3 font-weight-bold\">Visitations</span>\n      <Line data={data} />\n    </div>\n  );\n};\n\nexport default LineChart;\n","import React, { ReactElement } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nexport default function BarChart(): ReactElement {\n  const data = {\n    labels: [\"Extremely Poor\", \"Poor\", \"Okay\", \"Good\", \"Really Good\"],\n    datasets: [\n      {\n        data: [10, 30, 50, 100, 200],\n        backgroundColor: [\n          \"#eef6ff\",\n          \"#9ac1ec\",\n          \"#70a9e9\",\n          \"#0275D8\",\n          \"#004886\",\n        ],\n        hoverBackgroundColor: [\n          \"#eef6ff\",\n          \"#9ac1ec\",\n          \"#70a9e9\",\n          \"#0275D8\",\n          \"#004886\",\n        ],\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <span className=\"p3 font-weight-bold\">User Ratings Breakdown</span>\n      <Doughnut data={data} />\n    </div>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport MetricCard from \"src/components/cards/MetricCard\";\nimport Container from \"src/components/containers/Container\";\nimport LineChart from \"src/components/charts/LineChart\";\nimport BarChart from \"src/components/charts/BarChart\";\nimport { Statistic, Row, Col, Layout } from \"antd\";\nimport {\n  StarOutlined,\n  VideoCameraOutlined,\n  GlobalOutlined,\n} from \"@ant-design/icons\";\nimport { WRAPPER_STYLE } from \"src/utils/constants\";\nimport { PDFDownloadLink, Document, Page } from \"@react-pdf/renderer\";\n\nconst { Content } = Layout;\nconst MyDoc = () => (\n  <Document>\n    <Page>// My document data</Page>\n  </Document>\n);\n\nexport default function Dashboard(): ReactElement {\n  return (\n    <Content style={WRAPPER_STYLE}>\n      {/* <div>\n        <Row gutter={8}>\n          <Col span={8} className=\"bg-white\" style={WRAPPER_STYLE}>\n            <Statistic title=\"Average Rating\" value={1128} prefix={<StarOutlined />} suffix={5.0} />\n          </Col>\n          <Col span={8} className=\"bg-white\" style={WRAPPER_STYLE}>\n            <Statistic title=\"Live Video Calls\" value={32} prefix={<VideoCameraOutlined />} />\n          </Col>\n          <Col span={8} className=\"bg-white\" style={WRAPPER_STYLE}>\n            <Statistic title=\"Video Usage\" value={48} suffix=\"%\" prefix={<GlobalOutlined />}/>\n          </Col>\n        </Row>   \n      </div>     */}\n      {/* <PDFDownloadLink document={<MyDoc />} fileName=\"somename.pdf\">\n      {({ blob, url, loading, error }) => (loading ? 'Loading document...' : 'Download now!')}\n    </PDFDownloadLink> */}\n      <div className=\"d-flex flex-row\">\n        <Container rounded fluid>\n          <LineChart />\n        </Container>\n\n        <Container rounded fluid>\n          <BarChart />\n        </Container>\n      </div>\n    </Content>\n  );\n}\n","import { addMilliseconds, getDay, getHours, getMinutes } from \"date-fns\";\nimport { CallBlock, Weekday, WeeklySchedule } from \"src/typings/Call\";\nimport { NodeCallSlot } from \"src/typings/Node\";\nimport { WeekdayMap, WEEKDAYS, DEFAULT_DURATION_MS } from \"./constants\";\nimport _ from \"lodash\";\n\nconst callSlotToDateString = (time: NodeCallSlot): string => {\n  const date = new Date();\n  date.setHours(time.start.hour);\n  date.setMinutes(time.start.minute);\n  return date.toString();\n};\n\nconst calcEndCallSlot = (time: NodeCallSlot): string => {\n  const date = new Date();\n  // TODO fix this\n  const offset = date.getDay() - time.start.day;\n  //     date.setDate(date.getDate() + offset);\n  //   date.setDate(time.start.day);\n  date.setHours(time.start.hour);\n  date.setMinutes(time.start.minute);\n  // const hi = addMilliseconds(date, duration);\n  return addMilliseconds(date, time.duration).toString();\n};\n\nexport const mapCallSlotsToTimeBlock = (\n  callTimes: NodeCallSlot[]\n): WeeklySchedule => {\n  console.log(\"calltimes\");\n  console.log(callTimes);\n  const groups = _.groupBy(callTimes, (time) => time.start.day);\n\n  console.log(groups);\n  const sorted: [WeekdayMap, NodeCallSlot[]][] = WEEKDAYS.map(\n    (weekday: WeekdayMap) => {\n      if (!(weekday in groups)) {\n        return [weekday, []];\n      }\n      return [\n        weekday,\n        groups[weekday].sort((ct1, ct2) => {\n          if (ct1.start.hour > ct2.start.hour) return 1;\n          if (ct1.start.hour < ct2.start.hour) return -1;\n\n          if (ct1.start.minute > ct2.start.minute) return 1;\n          if (ct1.start.minute < ct2.start.minute) return -1;\n          return 1;\n        }),\n      ];\n    }\n  );\n  console.log(\"sorted:\");\n  console.log(sorted);\n  let idx = 0;\n\n  const ranges: {\n    [key: number]: CallBlock[];\n  }[] = sorted.map(([weekday, times]) => {\n    // console.log(weekday);\n    // console.log(times);\n    if (!times.length) {\n      return { [weekday]: [] };\n    }\n    const timeRanges: CallBlock[] = [];\n    let curr: NodeCallSlot = times[0];\n    let first: NodeCallSlot = times[0];\n\n    // create intervals\n    for (const time of times.slice(1, times.length)) {\n      // if same time, just keep moving through the list e.g 11.00 --> 11.30\n      if (curr.start.hour === time.start.hour) curr = time;\n      else if (\n        time.start.hour === curr.start.hour + 1 &&\n        time.start.minute === 0\n      )\n        // e.g 11.30 --> 12.00\n        curr = time;\n      else {\n        // new time range\n        // TODO account for potential timezone differences?\n        timeRanges.push({\n          duration: DEFAULT_DURATION_MS,\n          start: callSlotToDateString(first),\n          end: calcEndCallSlot(curr),\n          idx,\n          day: first.start.day,\n        });\n        // reset\n        first = time;\n        curr = time;\n        idx += 1;\n      }\n    }\n    // create last range\n    timeRanges.push({\n      duration: DEFAULT_DURATION_MS,\n      start: callSlotToDateString(first),\n      end: calcEndCallSlot(curr),\n      idx,\n      day: first.start.day,\n    });\n\n    return { [weekday]: timeRanges };\n  });\n  console.log(\"output\");\n  console.log(ranges);\n  return Object.assign({}, ...ranges);\n};\n\nexport const mapCallBlockToCallSlots = (\n  ranges: WeeklySchedule\n): NodeCallSlot[] => {\n  const rangeList = WEEKDAYS.map((weekday) => ranges[weekday] || []).reduce(\n    (prev, curr) => prev.concat(curr),\n    []\n  );\n\n  console.log(rangeList);\n  const res = rangeList\n    .map((range) => {\n      let iterator = new Date(range.start);\n      const endTime = new Date(range.end);\n\n      if (iterator > endTime) throw new Error(\"Invalid time range\");\n\n      const callTimes: NodeCallSlot[] = [];\n\n      while (iterator < endTime) {\n        callTimes.push({\n          start: {\n            hour: getHours(iterator),\n            minute: getMinutes(iterator),\n            day: range.day,\n          },\n          duration: range.duration,\n        });\n        iterator = addMilliseconds(iterator, range.duration);\n        console.log(iterator);\n      }\n\n      return callTimes;\n    })\n    .reduce((prev, curr) => prev.concat(curr), []);\n  return res;\n};\n\nexport const dayOfWeekAsString = (dayIndex: WeekdayMap): string => {\n  return (\n    [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ][dayIndex] || \"\"\n  );\n};\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport { RootState } from \"src/redux\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { TimePicker, Layout, Row, Col, Space, Button, Divider, Typography } from \"antd\";\nimport { Header } from \"antd/lib/layout/layout\";\nimport { NodeCallSlot } from \"src/typings/Node\";\nimport {\n  PADDING,\n  WRAPPER_STYLE,\n  WeekdayMap,\n  WEEKDAYS,\n  DEFAULT_DURATION_MS,\n} from \"src/utils/constants\";\nimport moment from \"moment\";\nimport { CallBlock, WeeklySchedule } from \"src/typings/Call\";\nimport { Tabs } from \"antd\";\nimport {\n  dayOfWeekAsString,\n  mapCallSlotsToTimeBlock,\n  mapCallBlockToCallSlots,\n} from \"src/utils/Call\";\nimport { cloneObject } from \"src/utils/utils\";\nimport { updateCallTimes } from \"src/redux/modules/facility\";\nimport { format } from \"date-fns\";\n\nconst { TabPane } = Tabs;\nconst { RangePicker } = TimePicker;\nconst { Content } = Layout;\n\nconst mapStateToProps = (state: RootState) => ({\n  facility: state.facilities.selected,\n});\nconst mapDispatchToProps = { updateCallTimes };\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype Tab = \"setting\" | \"facility\";\n\nfunction SettingsContainer({\n  facility,\n  updateCallTimes,\n}: PropsFromRedux): ReactElement {\n  const [ranges, setRanges] = useState<WeeklySchedule>();\n  const [activeTab, setActiveTab] = useState<Tab>(\"setting\");\n  const [callSlots, setCallSlots] = useState<NodeCallSlot[]>([]);\n\n  useEffect(() => {\n    if (facility) {\n      setCallSlots(facility.callTimes);\n      setRanges(mapCallSlotsToTimeBlock(facility.callTimes));\n    }\n  }, [facility]);\n\n  if (!facility || !ranges) return <div />;\n\n  const dateFormat = \"HH:mm\";\n\n  const tabCallback = (key: string) => {\n    setActiveTab(key as Tab);\n  };\n\n  const onChange = (start: Date, end: Date, day: WeekdayMap, idx: number) => {\n    const r = cloneObject(ranges) as WeeklySchedule;\n    // update call block\n    r[day][idx] = {\n      start: start.toString(),\n      end: end.toString(),\n      duration: DEFAULT_DURATION_MS,\n      idx,\n      day,\n    };\n    const h = mapCallBlockToCallSlots(r);\n    setCallSlots(mapCallBlockToCallSlots(r));\n    setRanges(r);\n  };\n\n  const handleSubmission = (e: React.MouseEvent) => {\n    updateCallTimes({ callSlots, zone: \"America_LosAngeles\" });\n  };\n  const renderItem = (day: WeekdayMap, ranges: CallBlock[]) => {\n    return (\n      <Row style={{ width: '100%', margin: 16}}>\n        <Col flex={1} span={12} >\n          <Typography.Text>{dayOfWeekAsString(day)}</Typography.Text>\n        </Col>\n        {/* <Col> */}\n        <Col flex={1} span={12}>\n        <Space direction=\"vertical\">\n          {ranges.length > 0 ? (\n            ranges.map((time) => (\n              <RangePicker\n                minuteStep={30}\n                use12Hours={true}\n                defaultValue={[\n                  moment(format(new Date(time.start), dateFormat), dateFormat),\n                  moment(format(new Date(time.end), dateFormat), dateFormat),\n                ]}\n                onChange={(values) => {\n                  if (!values || !values[0] || !values[1]) return;\n                  // TODO with date range picker, convert to right day\n                  onChange(\n                    values[0].toDate(),\n                    values[1].toDate(),\n                    day,\n                    time.idx\n                  );\n                }}\n                format={dateFormat}\n              />\n            ))\n          ) : (\n            <RangePicker\n              format={dateFormat}\n              minuteStep={30}\n              use12Hours={true}\n              onChange={(values) => {\n                if (!values || !values[0] || !values[1]) return;\n                onChange(values[0].toDate(), values[1].toDate(), day, 0);\n              }}\n            />\n          )}\n        </Space>\n        </Col>\n        {/* </Col> */}\n      </Row>\n    );\n  };\n\n  return (\n    <Content style={WRAPPER_STYLE}>\n      <Tabs defaultActiveKey={activeTab} onChange={tabCallback}>\n        <TabPane tab=\"General Settings\" key=\"setting\"></TabPane>\n        {/* <TabPane tab=\"Facility Settings\" key=\"facility\"></TabPane>\n        <TabPane tab=\"Call Hours\" key=\"facility\"></TabPane> */}\n      </Tabs>\n      <Content className=\"main-content-container\">\n        <Space direction=\"vertical\">\n          {WEEKDAYS.map((weekday) => renderItem(weekday, ranges[weekday]))}\n          <Button type=\"primary\" block onClick={handleSubmission}>\n            Save Changes\n          </Button>\n        </Space>\n      </Content>\n    </Content>\n  );\n}\n\nexport default connector(SettingsContainer);\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport { RootState } from \"src/redux\";\nimport { connect, ConnectedProps, useSelector } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { fetchCalls, fetchRecording } from \"src/redux/modules/call\";\nimport {\n  getCallInfo,\n  getVisitationEntities,\n  selectCallById,\n} from \"src/redux/selectors\";\nimport {\n  Breadcrumb,\n  Button,\n  Descriptions,\n  Layout,\n  PageHeader,\n  Row,\n  Space,\n} from \"antd\";\nimport ReactPlayer from \"react-player\";\nimport PageLoader from \"src/components/loaders/PageLoader\";\nimport { WRAPPER_STYLE } from \"src/utils/constants\";\nimport { format } from \"date-fns\";\nimport { genFullName } from \"src/utils/utils\";\nimport IconLink from \"src/components/icons/IconLink\";\nimport {\n  DownloadOutlined,\n  InfoCircleOutlined,\n  InfoOutlined,\n} from \"@ant-design/icons\";\n\nconst { Content } = Layout;\n\nconst mapStateToProps = (\n  state: RootState,\n  ownProps: RouteComponentProps<TParams>\n) => ({\n  call: getCallInfo(\n    state,\n    parseInt(ownProps.match.params.id)\n  ) as RecordedVisitation,\n});\n\nconst mapDispatchToProps = { fetchRecording };\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype TParams = { id: string };\n\nfunction RecordingBase({\n  call,\n  match,\n  fetchRecording,\n}: PropsFromRedux & RouteComponentProps<TParams>): ReactElement {\n  const [callId] = useState(match.params.id);\n\n  const facility = useSelector(\n    (state: RootState) => state.facilities.selected?.name\n  );\n\n  useEffect(() => {\n    if (call && call?.videoReady && !call.recordingUrl) {\n      fetchRecording(parseInt(callId));\n    }\n  }, [callId, call, fetchRecording]);\n\n  const routes = [\n    {\n      path: \"logs\",\n      breadcrumbName: \"Logs\",\n    },\n    {\n      path: \"call\",\n      breadcrumbName: `Call #${callId}`,\n    },\n  ];\n\n  if (!call) return <div />;\n\n  return (\n    <Content style={WRAPPER_STYLE}>\n      {/* TODO add more Breadcrumb items once we fetch all nodes for a facility */}\n      <Space direction=\"vertical\" align=\"center\" size=\"large\">\n        <PageHeader\n          ghost={false}\n          onBack={() => window.history.back()}\n          title={`Call #${callId}`}\n          subTitle={facility}\n          breadcrumb={{ routes }}\n          extra={[\n            <Button\n              key=\"download\"\n              download\n              target={\"_blank\"}\n              icon={<DownloadOutlined />}\n              href={\n                call.recordingUrl ||\n                \"https://test-videos.co.uk/vids/bigbuckbunny/mp4/h264/360/Big_Buck_Bunny_360_10s_1MB.mp4\"\n              }\n            >\n              Download\n            </Button>,\n            <Button\n              key=\"info\"\n              onClick={() => console.log(\"add connection page\")}\n              icon={<InfoCircleOutlined />}\n            >\n              Connection\n            </Button>,\n          ]}\n        >\n          <Descriptions size=\"small\" column={3}>\n            <Descriptions.Item label=\"Incarcerated Person\">\n              {genFullName(call.connection.inmate)}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Inmate ID\">\n              {call.connection.inmate.id}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Visitor\">\n              {genFullName(call.connection.contact)}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Relationship\">\n              {call.connection.relationship}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Date\">\n              {format(call.startTime, \"HH:mm\")}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Start Time\">\n              {format(call.startTime, \"HH:mm\")}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"End Time\">\n              {format(call.endTime, \"HH:mm\")}\n            </Descriptions.Item>\n            {/* TODO add kiosk name once we incoporate the nodes endpoint */}\n            <Descriptions.Item label=\"Location\">\n              Under the stairs\n            </Descriptions.Item>\n          </Descriptions>\n        </PageHeader>\n        <ReactPlayer\n          autoplay={true}\n          muted={true}\n          controls={true}\n          url={\n            call.recordingUrl ||\n            \"https://test-videos.co.uk/vids/bigbuckbunny/mp4/h264/360/Big_Buck_Bunny_360_10s_1MB.mp4\"\n          }\n        />\n      </Space>\n    </Content>\n  );\n}\n\nexport default connector(RecordingBase);\n","import LiveVisitationsPage from \"src/pages/LiveVisitation\";\nimport CalendarPage from \"src/pages/Calendar\";\nimport RequestsPage from \"src/pages/ConnectionRequests\";\nimport LogsPage from \"src/pages/PastVisitations\";\nimport StaffPage from \"src/pages/Staff\";\nimport InmatesPage from \"src/pages/Inmate\";\nimport DashboardPage from \"src/pages/Dashboard\";\nimport SettingsPage from \"src//pages/Settings\";\nimport RecordingPage from \"src/pages/Recording\";\nimport { CallAlert, GridOption } from \"src/typings/Call\";\nimport { Route } from \"src/typings/Common\";\n\nexport enum CardType {\n  LiveVisitation = \"live\",\n  Contact = \"contact\",\n  ConnectionRequest = \"request\",\n  ApprovedConnectioo = \"connection\",\n  Inmate = \"inmate\",\n  Staff = \"staff\",\n  PastVisitation = \"record\",\n}\n\nexport enum CardSize {\n  Small = \"small\",\n  Medium = \"medium\",\n  Large = \"large\",\n}\n\nexport enum LoadingTypes {\n  AcceptConnection = \"accept\",\n  FetchRecording = \"video\",\n}\n\nexport const UNAUTHENTICATED_USER_ID = -999;\n\nexport const TOKEN_KEY = \"apiToken\";\nexport const REMEMBER_TOKEN_KEY = \"rememberToken\";\n\nexport const STAFF_PERMISSION_OPTIONS: Record<Permission, string> = {\n  allowRead: \"Can view\",\n  allowCalltimes: \"Manage calltimes\",\n  allowApproval: \"Approve connections\",\n  allowRestructure: \"Reorganize facility\",\n  allowMonitor: \"Monitor live calls\",\n};\n\nexport enum WeekdayMap {\n  Sunday = 0,\n  Monday = 1,\n  Tuesday = 2,\n  Wednesday = 3,\n  Thursday = 4,\n  Friday = 5,\n  Saturday = 6,\n}\n\nexport const PADDING = 24;\nexport const WRAPPER_STYLE = { padding: PADDING, paddingTop: 0 };\n\nexport const ROUTES: Route[] = [\n  { path: \"/calendar\", component: CalendarPage, label: \"Page\" },\n  { path: \"/requests\", component: RequestsPage, label: \"Connection Requests\" },\n  { path: \"/logs\", component: LogsPage, label: \"Search for Visits\" },\n  { path: \"/staff\", component: StaffPage, label: \"Staff\" },\n  { path: \"/members\", component: InmatesPage, label: \"Inmates\" },\n  { path: \"/visitations\", component: LiveVisitationsPage, label: \"Live Calls\" },\n  { path: \"/settings\", component: SettingsPage, label: \"Settings\" },\n  { path: \"/call/:id\", component: RecordingPage, label: \"\" },\n  { path: \"/\", component: DashboardPage, label: \"Dashboard\" },\n];\n\nexport const WEEKDAYS = [\n  WeekdayMap.Sunday,\n  WeekdayMap.Monday,\n  WeekdayMap.Tuesday,\n  WeekdayMap.Wednesday,\n  WeekdayMap.Thursday,\n  WeekdayMap.Friday,\n  WeekdayMap.Saturday,\n];\n\n// 30 min\nexport const DEFAULT_DURATION_MS = 1800000;\n\nexport const SIDEBAR_WIDTH = 216;\n\nexport const GRID_TO_SPAN_WIDTH: { [key in GridOption]: number } = {\n  1: 24,\n  2: 12,\n  4: 12,\n  6: 8,\n  8: 6,\n};\n\nexport const GRID_TO_VH_HEIGHT: { [key in GridOption]: number } = {\n  1: 80,\n  2: 80,\n  4: 40,\n  6: 40,\n  8: 40,\n};\n\nexport const CALL_ALERTS: CallAlert[] = [\n  {\n    id: 1,\n    title: \"Appropriate clothing\",\n    body:\n      \"Outer garments worn on the bottom half of the body must be no shorter than the knee while standing.\",\n  },\n  {\n    id: 2,\n    title: \"Clothing exposure\",\n    body:\n      \"Outer garments worn on the bottom half of the body must be no shorter than the knee while standing.\",\n  },\n  {\n    id: 3,\n    title: \"Appropriate undergarments\",\n    body:\n      \"Outer garments worn on the bottom half of the body must be no shorter than the knee while standing.\",\n  },\n  {\n    id: 4,\n    title: \"No sheer clothing\",\n    body:\n      \"Outer garments worn on the bottom half of the body must be no shorter than the knee while standing.\",\n  },\n  {\n    id: 5,\n    title: \"Clothing no shorter than knee\",\n    body:\n      \"Outer garments worn on the bottom half of the body must be no shorter than the knee while standing.\",\n  },\n  {\n    id: 6,\n    title: \"Leggings no shorter than knee\",\n    body:\n      \"Outer garments worn on the bottom half of the body must be no shorter than the knee while standing.\",\n  },\n];\n","import { UNAUTHENTICATED_USER_ID } from \"src/utils/constants\";\n\n// Constants & Shapes\nconst SET_SESSION = \"user/SET_SESSION\";\nconst LOGOUT = \"user/LOGOUT\";\n\ninterface SetSessionAction {\n  type: typeof SET_SESSION;\n  payload: SessionState;\n}\ninterface LogoutAction {\n  type: typeof LOGOUT;\n}\n\ntype UserActionTypes = LogoutAction | SetSessionAction;\n\nexport const logout = (): UserActionTypes => {\n  return {\n    type: LOGOUT,\n  };\n};\n\nexport const setSession = (userState: SessionState): UserActionTypes => {\n  return {\n    type: SET_SESSION,\n    payload: userState,\n  };\n};\n\n// Reducer\nconst initialState: SessionState = {\n  authInfo: { apiToken: \"\", rememberToken: \"\" },\n  user: {\n    id: UNAUTHENTICATED_USER_ID,\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n  },\n  isLoggedIn: false,\n};\n\nexport function sessionReducer(\n  state = initialState,\n  action: UserActionTypes\n): SessionState {\n  switch (action.type) {\n    case SET_SESSION:\n      return action.payload;\n    case LOGOUT:\n      //   sessionStorage.clear();\n      return {\n        ...state,\n        authInfo: { apiToken: \"\", rememberToken: \"\" },\n        user: {\n          id: UNAUTHENTICATED_USER_ID,\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n        },\n        isLoggedIn: false,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { visitationsReducer } from \"./modules/visitation\";\nimport { connectionsReducer } from \"./modules/connection_requests\";\nimport { staffSlice } from \"./modules/staff\";\nimport { inmatesSlice } from \"./modules/inmate\";\nimport { sessionReducer } from \"./modules/user\";\nimport { connectionsSlice } from \"./modules/connections\";\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport thunk from \"redux-thunk\";\nimport { contactsSlice } from \"./modules/contact\";\nimport { callsSlice } from \"./modules/call\";\nimport { facilitiesSlice } from \"./modules/facility\";\nimport { connectRouter, routerMiddleware } from \"connected-react-router\";\nimport { createBrowserHistory, History } from \"history\";\nimport { socketsSlice } from \"./modules/socket\";\n\nexport const history = createBrowserHistory();\n\nexport const createRootReducer = (history: History) =>\n  combineReducers({\n    visitations: visitationsReducer,\n    requests: connectionsReducer,\n    staff: staffSlice.reducer,\n    session: sessionReducer,\n    inmates: inmatesSlice.reducer,\n    contacts: contactsSlice.reducer,\n    connections: connectionsSlice.reducer,\n    calls: callsSlice.reducer,\n    facilities: facilitiesSlice.reducer,\n    router: connectRouter(history),\n    sockets: socketsSlice.reducer,\n  });\n\nexport const rootReducer = createRootReducer(history);\n\nexport const Store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(routerMiddleware(history)),\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface SocketState {\n  socket?: SocketIOClient.Socket;\n}\n\nconst initialState: SocketState = {};\n\nexport const socketsSlice = createSlice({\n  name: \"socket\",\n  initialState: initialState,\n  reducers: {\n    setSocket: (state, action: PayloadAction<SocketIOClient.Socket>) => ({\n      ...state,\n      socket: action.payload,\n    }),\n  },\n});\n\nexport const socketsActions = socketsSlice.actions;\n","import { API_URL, fetchAuthenticated, fetchTimeout } from \"./Common\";\nimport url from \"url\";\nimport { setSession } from \"src/redux/modules/user\";\nimport { Store } from \"src/redux\";\nimport { REMEMBER_TOKEN_KEY, TOKEN_KEY } from \"src/utils/constants\";\nimport { fetchFacilities } from \"src/redux/modules/facility\";\n\ninterface RawUser {\n  id: number;\n  email: string;\n  first_name: string;\n  last_name: string;\n  addr_line_1: string;\n  addr_line_2: string;\n  city: string;\n  state: string;\n  postal: string;\n  credit: number;\n  coins: number;\n  profile_img_path: string;\n  phone: string;\n  referer: string;\n  country: string;\n  created_at: string;\n  referral_link: string;\n}\n\nfunction cleanUser(user: RawUser): User {\n  return {\n    id: user.id,\n    firstName: user.first_name,\n    lastName: user.last_name,\n    email: user.email,\n    profileImgPath: user.profile_img_path,\n  };\n}\n\nasync function initializeSession(body: any) {\n  console.log(\"initiaalizing session\");\n  const user = cleanUser(body.data as RawUser);\n  const { token: apiToken, remember: rememberToken } = body.data;\n  console.log(\"setting session\");\n  Store.dispatch(\n    setSession({\n      user,\n      authInfo: { rememberToken, apiToken },\n      isLoggedIn: true,\n    })\n  );\n\n  Store.dispatch(fetchFacilities);\n  // TO\n  localStorage.setItem(TOKEN_KEY, apiToken);\n  localStorage.setItem(REMEMBER_TOKEN_KEY, rememberToken);\n  // loadData();\n}\n\nexport async function loginWithToken(): Promise<void> {\n  try {\n    const rememberToken = await localStorage.getItem(REMEMBER_TOKEN_KEY);\n    if (!rememberToken) {\n      throw Error(\"Cannot load token\");\n    }\n    const response = await fetchTimeout(\n      url.resolve(API_URL, \"auth/login/remember\"),\n      {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          remember: rememberToken,\n        }),\n      }\n    );\n    const body = await response.json();\n    if (body.status !== 200) throw body;\n    await initializeSession(body);\n  } catch (err) {\n    throw Error(err);\n  }\n}\n\nexport async function loginWithCredentials(cred: UserLoginInfo): Promise<void> {\n  const response = await fetchTimeout(url.resolve(API_URL, \"auth/login\"), {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      email: cred.email,\n      password: cred.password,\n    }),\n  });\n  const body = await response.json();\n  if (body.status !== 200) throw body;\n  console.log(body);\n  // const user = cleanUser(body.data as RawUser);\n  // const { token: apiToken, remember: rememberToken } = body.data;\n  // Store.dispatch(\n  //   setSession({\n  //     user,\n  //     authInfo: { rememberToken, apiToken },\n  //     isLoggedIn: true,\n  //   })\n  // );\n  // // TO\n  // localStorage.setItem(TOKEN_KEY, apiToken);\n  // localStorage.setItem(REMEMBER_TOKEN_KEY, rememberToken);\n  await initializeSession(body);\n}\n","import React, { useState, ReactElement } from \"react\";\nimport { RootState } from \"src/redux\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { Input, Layout, Button, Form, Checkbox } from \"antd\";\n\n// import { ReactComponent as Operator } from \"src/assets/avatars/bald.svg\";\n// import { ReactComponent as Supervisor } from \"src/assets/avatars/woman.svg\";\n// import { ReactComponent as Admin } from \"src/assets/avatars/professor.svg\";\n// import { ReactComponent as Investigator } from \"src/assets/avatars/investigator.svg\";\n// import { OPERATOR, SUPERVISOR, ADMIN, INVESTIGATOR } from \"src/data/sample\";\n\nimport \"./index.css\";\nimport { Redirect } from \"react-router\";\nimport { loginWithCredentials } from \"src/api/User\";\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\n\nconst { Content } = Layout;\n\nconst mapStateToProps = (state: RootState) => ({\n  session: state.session,\n});\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nfunction LoginContainer({ session }: PropsFromRedux): ReactElement {\n  const [error, setError] = useState(\"\");\n\n  if (session.isLoggedIn) return <Redirect to=\"/\" />;\n\n  const onFinish = async (values: any) => {\n    try {\n      await loginWithCredentials({\n        email: values.email,\n        password: values.password,\n        remember: values.remember,\n      });\n    } catch (err) {\n      setError(\"Invalid email or password\");\n    }\n  };\n\n  const onFinishFailed = (_errorInfo: any) => {\n    setError(\"Invalid email or password\");\n  };\n\n  return (\n    <Content>\n      <div className=\"login-form-container\">\n        <Form\n          name=\"basic\"\n          initialValues={{ remember: true }}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          className=\"login-form\"\n        >\n          <Form.Item\n            name=\"email\"\n            rules={[{ required: true, message: \"Email is required.\" }]}\n          >\n            <Input\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Email\"\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"password\"\n            rules={[{ required: true, message: \"Password is required.\" }]}\n          >\n            <Input.Password\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Password\"\n            />\n          </Form.Item>\n\n          <Form.Item name=\"remember\" valuePropName=\"checked\">\n            <Checkbox>Remember me</Checkbox>\n          </Form.Item>\n\n          <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" size=\"large\" block>\n              Log In\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </Content>\n  );\n}\n\nexport default connector(LoginContainer);\n","import * as React from \"react\";\nimport { Redirect, Route, RouteProps } from \"react-router\";\n\nexport interface ProtectedRouteProps extends RouteProps {\n  isAuthenticated: boolean;\n  authenticationPath: string;\n}\n\nexport const ProtectedRoute: React.FC<ProtectedRouteProps> = (props) => {\n  let redirectPath = \"\";\n  if (!props.isAuthenticated) {\n    redirectPath = props.authenticationPath;\n  }\n\n  if (redirectPath) {\n    const renderComponent = () => <Redirect to={{ pathname: redirectPath }} />;\n    return <Route {...props} component={renderComponent} render={undefined} />;\n  } else {\n    return <Route {...props} />;\n  }\n};\n\nexport default ProtectedRoute;\n","import React, { ReactElement, useState } from \"react\";\nimport {\n  Layout,\n  Menu as AntdMenu,\n  Row,\n  Col,\n  Select,\n  Avatar,\n  Space,\n  Dropdown,\n} from \"antd\";\nimport {\n  DesktopOutlined,\n  PieChartOutlined,\n  FileOutlined,\n  TeamOutlined,\n  UserOutlined,\n  SettingOutlined,\n  UserAddOutlined,\n  DownOutlined,\n} from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { RootState } from \"src/redux\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { logout } from \"src/redux/modules/user\";\nimport { Facility, SelectedFacility } from \"src/typings/Node\";\nimport \"./Menu.css\";\nimport { genFullName, getInitials, generateBgColor } from \"src/utils/utils\";\nimport { SIDEBAR_WIDTH } from \"src/utils/constants\";\n\nconst { Option } = Select;\n\nconst { Sider } = Layout;\nconst { SubMenu } = AntdMenu;\n\ninterface Props {\n  session: SessionState;\n  selected: SelectedFacility;\n  facilities: Facility[];\n  logout: () => void;\n  select: (facility: Facility) => void;\n}\n\nconst FacilityAvatar = ({ facility }: { facility: Facility }): JSX.Element => (\n  <Avatar\n    size=\"large\"\n    shape=\"square\"\n    style={{ backgroundColor: generateBgColor(facility.name) }}\n  >\n    {getInitials(facility.name)}\n  </Avatar>\n);\n\nexport default function Menu({\n  session,\n  selected,\n  facilities,\n  select,\n  logout,\n}: Props): ReactElement {\n  const [collapsed, setCollapsed] = useState<boolean>(false);\n  const history = useHistory();\n  if (!session.isLoggedIn) return <div />;\n\n  const headerMenu = (\n    <AntdMenu>\n      <SubMenu key=\"sub2\" title=\"Switch Organization\">\n        {facilities.map((facility) => (\n          <AntdMenu.Item onClick={() => select(facility)}>\n            <Space>\n              <FacilityAvatar facility={facility} />\n              <span>{facility.name}</span>\n            </Space>\n          </AntdMenu.Item>\n        ))}\n      </SubMenu>\n      <AntdMenu.Item>\n        <span onClick={() => logout()}>Log out</span>\n      </AntdMenu.Item>\n    </AntdMenu>\n  );\n\n  return (\n    <Sider\n      collapsible\n      collapsed={collapsed}\n      onCollapse={(collapsed) => setCollapsed(collapsed)}\n      width={SIDEBAR_WIDTH}\n    >\n      <Dropdown overlay={headerMenu}>\n        <Space align=\"center\" className=\"menu-header\">\n          <FacilityAvatar facility={selected} />\n          {!collapsed && (\n            <Space direction=\"vertical\" size={0}>\n              <Space align=\"center\">\n                <span className=\"menu-header-facility\">{selected.name}</span>\n                <DownOutlined style={{ color: \"white\" }} />\n              </Space>\n              <span className=\"menu-header-name\">\n                {genFullName(session.user)}\n              </span>\n            </Space>\n          )}\n        </Space>\n      </Dropdown>\n\n      {/* </div> */}\n      <AntdMenu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\">\n        <AntdMenu.Item\n          key=\"dash\"\n          icon={<PieChartOutlined />}\n          onClick={() => history.push(\"/\")}\n        >\n          Dashboard\n        </AntdMenu.Item>\n        <AntdMenu.Item\n          key=\"live\"\n          icon={<DesktopOutlined />}\n          onClick={() => history.push(\"/visitations\")}\n        >\n          Live Video Calls\n        </AntdMenu.Item>\n        <AntdMenu.Item\n          key=\"requests\"\n          icon={<UserAddOutlined />}\n          onClick={() => history.push(\"/requests\")}\n        >\n          Approval Requests\n        </AntdMenu.Item>\n        <AntdMenu.Item\n          key=\"search\"\n          icon={<UserAddOutlined />}\n          onClick={() => history.push(\"/logs\")}\n        >\n          Search for Visits\n        </AntdMenu.Item>\n        <AntdMenu.Item\n          key=\"staff\"\n          icon={<TeamOutlined />}\n          onClick={() => history.push(\"/staff\")}\n        >\n          Staff\n        </AntdMenu.Item>\n        {/* <AntdMenu.Item\n          key=\"members\"\n          icon={<TeamOutlined />}\n          onClick={() => history.push(\"/members\")}\n        >\n          Members\n        </AntdMenu.Item> */}\n\n        <AntdMenu.Item\n          key=\"settings\"\n          icon={<SettingOutlined />}\n          onClick={() => history.push(\"/settings\")}\n        >\n          Settings\n        </AntdMenu.Item>\n      </AntdMenu>\n    </Sider>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.scss\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport LiveVisitation from \"./pages/LiveVisitation\";\nimport CalendarView from \"./pages/Calendar\";\nimport ConnectionRequests from \"./pages/ConnectionRequests\";\nimport Logs from \"./pages/PastVisitations\";\nimport Staff from \"./pages/Staff\";\nimport Inmate from \"./pages/Inmate\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Settings from \"./pages/Settings\";\nimport Login from \"./pages/Login\";\nimport { RootState } from \"src/redux\";\nimport { connect, ConnectedProps, useSelector } from \"react-redux\";\nimport ProtectedRoute, {\n  ProtectedRouteProps,\n} from \"./components/hocs/ProtectedRoute\";\nimport { loginWithToken } from \"./api/User\";\nimport Menu from \"./components/headers/Menu\";\nimport { Avatar, Layout, PageHeader, Menu as AntdMenu } from \"antd\";\nimport { logout } from \"src/redux/modules/user\";\nimport { Footer } from \"antd/lib/layout/layout\";\nimport { fetchFacilities } from \"./redux/modules/facility\";\nimport { selectAllFacilities } from \"./redux/selectors\";\nimport { selectActiveFacility } from \"src/redux/modules/facility\";\nimport { initializeAppData } from \"./api/Common\";\n// import { useHistory } from \"react-router-dom\";\nimport { ROUTES } from \"./utils/constants\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { History } from \"history\";\n\nconst mapStateToProps = (state: RootState) => ({\n  session: state.session,\n  selected: state.facilities.selected,\n  pathname: state.router.location,\n});\nconst mapDispatchToProps = { logout, fetchFacilities, selectActiveFacility };\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst { Header } = Layout;\n\nfunction App({\n  session,\n  selected,\n  pathname,\n  selectActiveFacility,\n  logout,\n  fetchFacilities,\n  history,\n}: PropsFromRedux & { history: History }) {\n  const defaultProtectedRouteProps: ProtectedRouteProps = {\n    isAuthenticated: session.authInfo.apiToken !== \"\", // TODO: improve this later\n    authenticationPath: \"/login\",\n  };\n\n  const facilities = useSelector(selectAllFacilities);\n  // const history = useHistory();\n  const [header, setHeader] = useState(\"\");\n\n  useEffect(() => {\n    // localStorage.setItem(\"debug\", \"*\");\n    localStorage.removeItem(\"debug\");\n    (async () => {\n      try {\n        await loginWithToken();\n        await fetchFacilities();\n      } catch (err) {}\n    })();\n  }, [fetchFacilities]);\n\n  useEffect(() => {\n    if (selected) {\n      (async () => await initializeAppData())();\n    }\n  }, [selected]);\n\n  useEffect(() => {\n    const route = ROUTES.find((route) => route.path === pathname.pathname);\n    if (route) setHeader(route.label);\n  }, [pathname]);\n\n  return (\n    <ConnectedRouter history={history}>\n      <Layout style={{ minHeight: \"100vh\" }}>\n        {selected && (\n          <Menu\n            session={session}\n            logout={logout}\n            selected={selected}\n            facilities={facilities}\n            select={(facility) => selectActiveFacility(facility)}\n          />\n        )}\n        <Layout>\n          <PageHeader\n            title={header}\n            // extra={[\n            //   <BellFilled key=\"bell\" />,\n            //   <BulbFilled key=\"bulb\" />,\n            //   <InitialsAvatar\n            //     name={genFullName(session.user)}\n            //     size=\"default\"\n            //     shape=\"circle\"\n            //     key=\"avatar\"\n            //   />,\n            // ]}\n          />\n          <Switch>\n            <Route exact path=\"/login\" component={Login}></Route>\n            {ROUTES.map((route) => (\n              <ProtectedRoute\n                exact\n                {...defaultProtectedRouteProps}\n                path={route.path}\n                component={route.component}\n                key={route.label}\n              ></ProtectedRoute>\n            ))}\n          </Switch>\n          <Footer style={{ textAlign: \"center\" }}>\n            Connect ©2021 Created by Ameelio Inc.\n          </Footer>\n        </Layout>\n      </Layout>\n    </ConnectedRouter>\n  );\n}\n\nexport default connector(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { history, Store } from \"./redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <App history={history} />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}