{"version":3,"sources":["components/containers/Container.tsx","redux/modules/visitation.ts","redux/modules/connections.ts","api/Connection.ts","utils/utils.ts","api/Common.ts","redux/modules/connection_requests.ts","redux/modules/inmate.ts","redux/modules/contact.ts","api/Persona.ts","redux/modules/staff.ts","redux/helpers.ts","redux/modules/call.ts","redux/modules/facility.ts","redux/selectors.ts","pages/LiveVisitation/RoomClient.js","pages/LiveVisitation/VideoOverlay.tsx","pages/LiveVisitation/VideoChat.tsx","pages/LiveVisitation/VideoSkeleton.tsx","pages/LiveVisitation/index.tsx","components/calendar/CalendarView.tsx","components/containers/Sidebar.tsx","components/containers/Wrapper.tsx","pages/Calendar/index.tsx","components/cards/UserSnippetCard.tsx","pages/ConnectionRequests/ConnectionRequestCard.tsx","components/hocs/WithLoadingProps.tsx","pages/ConnectionRequests/index.tsx","components/headers/VisitationCardHeader.tsx","components/cards/VisitationCard.tsx","pages/PastVisitations/CallFilters.tsx","pages/PastVisitations/index.tsx","pages/Staff/CreateStaffForm.tsx","pages/Staff/index.tsx","components/cards/ConnectionCard.tsx","components/cards/UserCard.tsx","components/cards/SidebarCard.tsx","pages/Inmate/index.tsx","components/cards/MetricCard.tsx","components/charts/LineChart.tsx","components/charts/BarChart.tsx","utils/Call.ts","pages/Settings/index.tsx","pages/Recording/index.tsx","utils/constants.ts","pages/Dashboard/index.tsx","redux/modules/user.ts","redux/index.ts","redux/modules/socket.ts","api/User.ts","pages/Login/index.tsx","components/hocs/ProtectedRoute.tsx","components/headers/Menu.tsx","components/avatar/InitialsAvatar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Container","children","fluid","width","rounded","className","selectPastVisitation","visitation","type","payload","initialVisitationState","liveVisitations","selectedVisitation","scheduledVisitations","hasLoaded","hasLoadedScheduledVisitations","pastVisitations","selectedPastVisitation","visitationsReducer","state","action","length","liveVisitationsPostDeletion","filter","id","findIndex","connectionsAdapter","createEntityAdapter","connectionsSlice","createSlice","name","initialState","getInitialState","reducers","connectionsAddOne","addOne","connectionsAddMany","addMany","connectionsUpdate","updateOne","connectionsRemove","removeOne","connectionsActions","actions","getApprovedConnections","a","fetchAuthenticated","body","status","data","connections","map","connection","camelcaseKeys","console","log","Store","dispatch","setConnectionRequests","updateConnection","connectionId","method","JSON","stringify","connection_id","genFullName","entity","firstName","lastName","genImageUri","user","profileImgPath","calculateDurationMS","start","end","secs","format","addSeconds","Date","formatSecondsToMS","differenceInSeconds","cloneObject","obj","parse","createCallOptionsParam","filters","options","approved","toString","limit","offset","firstLive","push","startDate","endDate","minDuration","maxDuration","query","x","encodeURIComponent","join","toQueryString","getInitials","str","split","n","generateBgColor","label","BACKGROUND_COLORS","Math","abs","hash","i","charCodeAt","hashCode","openNotificationWithIcon","message","description","notification","ADD_CONNECTION","selectConnectionRequest","requests","selectedRequest","connectionsReducer","requestsPostApproval","requestsPostDeletion","acceptConnectionRequest","request","declineConnectionRequest","inmatesAdapter","inmatesSlice","inmatesAddMany","inmatesUpdate","inmatesActions","contactsAdapter","contactsSlice","contactsAddMany","contactsActions","getInmates","inmates","inmate","getStaff","staff","admins","admin","getContacts","contacts","users","contact","staffAdapter","updateStaff","createAsyncThunk","args","url","resolve","API_URL","user_id","userId","permissions","changes","createStaff","email","role","loading","staffSlice","staffSetAll","setAll","staffUpdateOne","extraReducers","builder","addCase","fulfilled","rejected","error","staffActions","loadStaff","cleanVisitation","scheduledStartTime","scheduledEndTime","startTime","first_live","endTime","last_live","kiosk","kiosk_id","videoReady","video_ready","callsAdapter","fetchCalls","visitations","calls","fetchRecording","callId","recordingUrl","callsSlice","callsAddMany","callsSetAll","facilitiesAdapter","selectActiveFacility","facility","nodeId","Error","callTimes","call_times","fetchFacilities","getState","session","fBody","facilities","updateCallTimes","callSlots","zone","facilitiesSlice","setSelected","selected","pending","getSelectors","selectConnectionById","selectById","selectAll","selectInmateById","selectAllInmates","selectContactById","selectCallById","selectAllCalls","selectAllStaff","selectAllFacilities","getConnectionEntities","inmateId","getAllConnectionsInfo","getAllVisitationsInfo","detailedConnection","getVisitationEntities","MEDIA_TYPE","config","video","min","ideal","height","encodings","rid","maxBitrate","scalabilityMode","codecOptions","videoGoogleStartBitrate","RoomClient","mediasoupClient","socket","window","rc","this","consumerTransport","device","consumers","handlers","consume","Promise","reject","emit","response","transport","on","callback","errback","dtlsParameters","transportId","consumerTransportInfo","routerRtpCapabilities","loadDevice","createRecvTransport","handleTransportConnect","rtpCapabilities","info","consumer","stream","consumerId","forEach","f","kind","deviceId","audio","mediaConstraints","getMediaConstraints","navigator","mediaDevices","getUserMedia","track","getAudioTracks","getVideoTracks","params","Device","load","MediaStream","addTrack","event","fn","SubMenu","Menu","VideoOverlay","alerts","terminateCall","lockCall","muteCall","unmuteCall","isAudioOn","emitAlert","useState","selectedAlert","setSelectedAlert","menu","key","icon","MessageFilled","title","alert","Item","onClick","LockFilled","SettingFilled","AudioMutedOutlined","AudioOutlined","overlay","MoreOutlined","visible","onOk","onCancel","Loader","direction","VideoChat","React","memo","ref","createRef","token","useSelector","authInfo","apiToken","setLoading","setVideo","participants","contents","recipients","useEffect","current","connected","Debug","init","setTimeout","newVideo","document","createElement","srcObject","style","autoplay","appendChild","newAudio","VideoSkeleton","Ribbon","text","Content","Layout","connector","connect","bindActionCreators","setSocket","visibleCalls","setVisibleCalls","grid","setGrid","frameVhHeight","setFrameVhHeight","consumeAudioRecord","setConsumeAudioRecord","now","getTime","io","transports","slice","handleVideoTermination","GridMenu","option","GRID_TO_VH_HEIGHT","handleGridChange","WRAPPER_STYLE","placement","Array","from","keys","idx","span","GRID_TO_SPAN_WIDTH","CALL_ALERTS","_","omit","CalendarView","events","setEvents","VisitationToEventInput","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","headerToolbar","left","center","right","initialView","editable","selectable","selectMirror","dayMaxEvents","weekends","businessHours","eventContent","timeText","eventClick","clickInfo","confirm","remove","themeSystem","Sidebar","Wrapper","horizontal","UserSnippetCard","size","nameFontSize","CardSize","Medium","detailFontSize","Image","src","roundedCircle","CardType","Contact","Inmate","inmateNumber","genSnippet","Table","Column","WithLoading","Component","loadingType","props","defaultOptions","loop","animationData","rendererSettings","preserveAspectRatio","Spinner","animation","LoadingTypes","AcceptConnection","LottieSpinner","FetchRecording","genFeedback","accept","decline","Large","Button","variant","getConnectionRequests","padding","PADDING","dataSource","dataIndex","render","shape","xs","sm","md","lg","xl","xxl","location","relationship","_text","handleAccept","danger","handleDecline","VisitationCardHeader","kioskId","currentTime","VisitationCard","actionLabel","handleClick","setNow","timer","clearTimeout","LiveVisitation","RangePicker","DatePicker","CallFiltersHeader","setDuration","setStartDate","setEndDate","DURATION_FILTERS","Infinity","DurationFilters","duration","align","onChange","date","unix","trigger","e","preventDefault","DownOutlined","logs","history","router","searchQuery","setSearchQuery","global","setGlobal","setMaxDuration","debounceUpdate","useCallback","debounce","placeholder","allowClear","value","target","onSearch","time","Option","Select","CreateStaffForm","Form","useForm","form","rules","required","prefix","SendOutlined","Object","STAFF_PERMISSION_OPTIONS","defaultChecked","checked","includes","permission","htmlType","modalType","setModalType","confirmLoading","setConfirmLoading","formData","setFormData","allowRead","allowCalltimes","allowApproval","allowRestructure","allowMonitor","selectedPermissions","setSelectedPermissions","handleOk","img","color","record","update","ConnectionCard","fontColor","decoration","border","UserCard","genDetails","SidebarCard","isActive","activeBorder","ConnectionRequest","connectionRequest","PastVisitation","Staff","member","genCard","InmateContainer","MetricCard","metric","growthRate","growthColor","bgColor","growthIcon","toFixed","COLOR","LineChart","labels","datasets","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","BarChart","hoverBackgroundColor","callSlotToDateString","setHours","hour","setMinutes","minute","calcEndCallSlot","getDay","day","addMilliseconds","mapCallBlockToCallSlots","ranges","rangeList","WEEKDAYS","weekday","reduce","prev","curr","concat","range","iterator","getHours","getMinutes","TabPane","Tabs","TimePicker","mapDispatchToProps","setRanges","activeTab","setActiveTab","setCallSlots","groups","groupBy","sorted","sort","ct1","ct2","times","timeRanges","first","DEFAULT_DURATION_MS","assign","mapCallSlotsToTimeBlock","r","defaultActiveKey","tab","orientation","minuteStep","use12Hours","defaultValue","moment","values","toDate","renderItem","match","call","parseInt","muted","controls","WeekdayMap","paddingTop","ROUTES","path","component","CalendarPage","RequestsPage","LogsPage","StaffPage","InmatesPage","LiveVisitationsPage","SettingsPage","RecordingPage","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","1","2","4","6","8","setSession","userState","rememberToken","isLoggedIn","sessionReducer","socketsSlice","createBrowserHistory","rootReducer","combineReducers","reducer","connectRouter","sockets","configureStore","middleware","getDefaultMiddleware","routerMiddleware","process","fetchTimeout","fetchUrl","timeout","race","fetch","nodeResource","requestOptions","headers","Accept","Authorization","json","initializeAppData","allSettled","cleanUser","first_name","last_name","profile_img_path","initializeSession","remember","localStorage","setItem","loginWithToken","getItem","loginWithCredentials","cred","password","setEmail","setPassword","setError","tryLogin","to","Group","controlId","Control","isInvalid","Feedback","block","ProtectedRoute","redirectPath","isAuthenticated","authenticationPath","pathname","undefined","Sider","AntdMenu","FacilityAvatar","select","logout","collapsed","setCollapsed","useHistory","headerMenu","collapsible","onCollapse","theme","defaultSelectedKeys","mode","PieChartOutlined","DesktopOutlined","UserAddOutlined","TeamOutlined","SettingOutlined","InitialsAvatar","defaultProtectedRouteProps","header","setHeader","removeItem","route","find","minHeight","extra","BellFilled","BulbFilled","exact","Login","textAlign","Boolean","hostname","ReactDOM","StrictMode","store","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.fd8c5c10.chunk.js","sourcesContent":["import React from \"react\";\n\ninterface Props {\n  fluid?: boolean;\n  rounded?: boolean;\n}\n\nconst Container: React.FC<Props> = ({ children, fluid, rounded }) => {\n  const width = fluid ? \"w-100\" : \"\";\n  const corner = rounded ? \"\" : \"\";\n  return (\n    <section className={`main-container ${width} ${corner}`}>\n      {children}\n    </section>\n  );\n};\n\nexport default Container;\n","import { AppThunk } from \"src/redux/helpers\";\n\nconst SET_LIVE_VISITATIONS = \"visitation/SET_LIVE_VISITATIONS\";\nconst SELECT_LIVE_VISITATION = \"visitation/SELECT_LIVE_VISITATION\";\nconst DELETE_LIVE_VISITATION = \"visitation/DELETE_LIVE_VISITATION\";\nconst SET_SCHEDULED_VISITATIONS = \"visitation/SET_SCHEDULED_VISITATIONS\";\nconst SET_PAST_VISITATIONS = \"visitation/SET_PASET_PAST_VISITATIONS\";\nconst SELECT_PAST_VISITATION = \"visitation/SELECT_PAST_VISITATION\";\nconst ADD_VIDEO_RECORDING = \"visitation/ADD_VIDEO_RECORDING\";\n// Action Constants & Shapes\ninterface SetLiveVisitationAction {\n  type: typeof SET_LIVE_VISITATIONS;\n  payload: LiveVisitation[];\n}\n\ninterface SelectLivitationAction {\n  type: typeof SELECT_LIVE_VISITATION;\n  payload: LiveVisitation;\n}\n\ninterface DeleteLiveVisitationAction {\n  type: typeof DELETE_LIVE_VISITATION;\n  payload: LiveVisitation;\n}\n\ninterface SetScheduledVisitationsAction {\n  type: typeof SET_SCHEDULED_VISITATIONS;\n  payload: BaseVisitation[];\n}\n\ninterface SetPastVisitationsAction {\n  type: typeof SET_PAST_VISITATIONS;\n  payload: RecordedVisitation[];\n}\n\ninterface SelectVisitationsAction {\n  type: typeof SELECT_PAST_VISITATION;\n  payload: RecordedVisitation;\n}\n\ninterface RecordingKeyValue {\n  id: number;\n  value: string;\n}\ninterface AddRecordingAction {\n  type: typeof ADD_VIDEO_RECORDING;\n  payload: RecordingKeyValue;\n}\n\ntype LiveVisitationActionTypes =\n  | SetLiveVisitationAction\n  | SelectLivitationAction\n  | DeleteLiveVisitationAction\n  | SetScheduledVisitationsAction\n  | SetPastVisitationsAction\n  | SelectVisitationsAction\n  | AddRecordingAction;\n\n// Action Creators\nexport const setLiveVisitations = (\n  visitations: LiveVisitation[]\n): LiveVisitationActionTypes => {\n  return {\n    type: SET_LIVE_VISITATIONS,\n    payload: visitations,\n  };\n};\n\nexport const selectLiveVisitation = (\n  visitation: LiveVisitation\n): LiveVisitationActionTypes => {\n  return {\n    type: SELECT_LIVE_VISITATION,\n    payload: visitation,\n  };\n};\n\nconst deleteLiveVisitation = (\n  visitation: LiveVisitation\n): LiveVisitationActionTypes => {\n  return {\n    type: DELETE_LIVE_VISITATION,\n    payload: visitation,\n  };\n};\n\nexport const setScheduledVisitations = (\n  visitations: BaseVisitation[]\n): LiveVisitationActionTypes => {\n  return {\n    type: SET_SCHEDULED_VISITATIONS,\n    payload: visitations,\n  };\n};\n\nexport const setPastVisitations = (\n  visitations: RecordedVisitation[]\n): LiveVisitationActionTypes => {\n  return {\n    type: SET_PAST_VISITATIONS,\n    payload: visitations,\n  };\n};\n\nexport const selectPastVisitation = (\n  visitation: RecordedVisitation\n): LiveVisitationActionTypes => {\n  return {\n    type: SELECT_PAST_VISITATION,\n    payload: visitation,\n  };\n};\n\nconst addRecording = (id: number, value: string) => {\n  return {\n    type: ADD_VIDEO_RECORDING,\n    payload: { id: id, value: value },\n  };\n};\n\n// Reducer\nconst initialVisitationState: VisitationState = {\n  liveVisitations: [],\n  selectedVisitation: null,\n  scheduledVisitations: [],\n  hasLoaded: false,\n  hasLoadedScheduledVisitations: false,\n  pastVisitations: [],\n  selectedPastVisitation: null,\n};\n\nexport function visitationsReducer(\n  state = initialVisitationState,\n  action: LiveVisitationActionTypes\n): VisitationState {\n  switch (action.type) {\n    case SET_LIVE_VISITATIONS:\n      const selectedVisitation = action.payload.length\n        ? action.payload[0]\n        : null;\n      return {\n        ...state,\n        liveVisitations: action.payload,\n        selectedVisitation: selectedVisitation, //TODO this assumes that there is at least one live visitation. This will break for zero state\n        hasLoaded: true,\n      };\n    case SELECT_LIVE_VISITATION:\n      return { ...state, selectedVisitation: action.payload };\n    case DELETE_LIVE_VISITATION:\n      const liveVisitationsPostDeletion = state.liveVisitations.filter(\n        (visitation) => visitation.id !== action.payload.id\n      );\n\n      return {\n        ...state,\n        liveVisitations: liveVisitationsPostDeletion,\n        selectedVisitation: liveVisitationsPostDeletion.length\n          ? liveVisitationsPostDeletion[0]\n          : null,\n      };\n    case SET_SCHEDULED_VISITATIONS:\n      return {\n        ...state,\n        scheduledVisitations: action.payload,\n        hasLoadedScheduledVisitations: true,\n      };\n    case SET_PAST_VISITATIONS:\n      const selectedPastVisitation = action.payload.length\n        ? action.payload[0]\n        : null;\n      return {\n        ...state,\n        pastVisitations: action.payload,\n        selectedPastVisitation: selectedPastVisitation,\n      };\n    case SELECT_PAST_VISITATION:\n      return {\n        ...state,\n        selectedPastVisitation: action.payload,\n      };\n    case ADD_VIDEO_RECORDING:\n      const foundIndex = state.pastVisitations.findIndex(\n        (visitation) => visitation.id === action.payload.id\n      );\n      // state.pastVisitations[foundIndex].recordingUrl = action.payload.value;\n\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n}\n\n//TODO replace these with real API calls\nexport const terminateLiveVisitation = (\n  visitation: LiveVisitation\n): AppThunk => async (dispatch) => {\n  dispatch(deleteLiveVisitation(visitation));\n};\n\nexport const fetchVideoRecording = (\n  visitation: RecordedVisitation\n): AppThunk => async (dispatch) => {\n  const { id } = visitation;\n  dispatch(addRecording(id, process.env.PUBLIC_URL + \"/recording_demo.mp4\"));\n};\n","import { createSlice, createEntityAdapter } from \"@reduxjs/toolkit\";\n\n// The magic line\n\nexport const connectionsAdapter = createEntityAdapter<BaseConnection>();\n\nexport const connectionsSlice = createSlice({\n  name: \"connections\",\n  initialState: connectionsAdapter.getInitialState(),\n  reducers: {\n    connectionsAddOne: connectionsAdapter.addOne,\n    connectionsAddMany: connectionsAdapter.addMany,\n    connectionsUpdate: connectionsAdapter.updateOne,\n    connectionsRemove: connectionsAdapter.removeOne,\n  },\n});\n\nexport const connectionsActions = connectionsSlice.actions;\n","import { API_URL, fetchAuthenticated } from \"./Common\";\nimport url from \"url\";\nimport { Store } from \"src/redux\";\nimport {\n  setConnectionRequests,\n  setConnections,\n} from \"src/redux/modules/connection_requests\";\nimport { connectionsActions } from \"src/redux/modules/connections\";\nimport camelcaseKeys from \"camelcase-keys\";\n\nexport async function getApprovedConnections(): Promise<BaseConnection[]> {\n  const body = await fetchAuthenticated(`/connections?status=approved`);\n\n  if (body.status !== 200 || !body.data) {\n    throw body;\n  }\n\n  const connections = ((body.data as Record<string, unknown>)\n    .connections as Object[]).map((connection) =>\n    camelcaseKeys(connection)\n  ) as BaseConnection[];\n  console.log(connections);\n  Store.dispatch(connectionsActions.connectionsAddMany(connections));\n  return connections;\n}\n\nexport async function getConnectionRequests(): Promise<BaseConnection[]> {\n  const body = await fetchAuthenticated(`/connections?status=pending`);\n  if (body.status !== 200 || !body.data) {\n    throw body;\n  }\n\n  const connections = ((body.data as Record<string, unknown>)\n    .connections as Object[]).map((connection) =>\n    camelcaseKeys(connection)\n  ) as BaseConnection[];\n  console.log(connections);\n\n  Store.dispatch(setConnectionRequests(connections));\n  return connections;\n}\n\nexport async function updateConnection(\n  connectionId: number,\n  status: \"approved\" | \"pending\" | \"denied\"\n): Promise<void> {\n  const body = await fetchAuthenticated(\"/connection\", {\n    method: \"PUT\",\n    body: JSON.stringify({ connection_id: connectionId, status }),\n  });\n\n  if (body.status !== 200 || !body.data) {\n    throw body;\n  }\n}\n","import { EventInput } from \"@fullcalendar/react\";\nimport { addSeconds, format, differenceInSeconds } from \"date-fns\";\nimport { toQueryString } from \"src/api/Common\";\nimport { NodeCallSlot } from \"src/typings/Node\";\nimport { STAFF_PERMISSION_OPTIONS, WeekdayMap } from \"./constants\";\nimport { CallBlock, Weekday } from \"src/typings/Call\";\nimport _ from \"lodash\";\nimport { notification } from \"antd\";\n\nexport const genFullName = (entity?: BasePersona): string =>\n  entity ? `${entity.firstName} ${entity.lastName}` : \"\";\n\nexport const genImageUri = (user?: BasePersona): string => {\n  return user?.profileImgPath || \"default.jpg\";\n};\n\nexport const VisitationToEventInput = (visitation: Visitation): EventInput => {\n  return {\n    title: `${genFullName(visitation.connection.inmate)} <> ${genFullName(\n      visitation.connection.contact\n    )}`,\n    start: visitation.scheduledStartTime,\n    end: visitation.scheduledEndTime,\n  };\n};\n\nconst formatSecondsToMS = (secs: number): string => {\n  return format(addSeconds(new Date(0), secs), \"mm:ss\");\n};\nexport const calculateDurationMS = (start: Date, end: Date): string => {\n  const secs = differenceInSeconds(end, start);\n  return formatSecondsToMS(secs);\n};\n\nexport const mapPermissionMap = (\n  permissions: Permission[]\n): Record<Permission, boolean> => {\n  return {\n    allowRead: permissions.includes(\"allowRead\"),\n    allowApproval: permissions.includes(\"allowApproval\"),\n    allowMonitor: permissions.includes(\"allowMonitor\"),\n    allowCalltimes: permissions.includes(\"allowCalltimes\"),\n    allowRestructure: permissions.includes(\"allowRestructure\"),\n  };\n};\n\nexport const cloneObject = (obj: Object): Object =>\n  JSON.parse(JSON.stringify(obj));\n\nexport const createCallOptionsParam = (filters: CallFilters): string => {\n  const options = [\n    [\"approved\", filters.approved?.toString() || \"true\"],\n    [\"limit\", filters.limit?.toString() || \"100\"],\n    [\"offset\", filters.offset?.toString() || \"0\"],\n  ];\n  if (filters.firstLive) options.push([\"first_live\", filters.firstLive]);\n  if (filters.end) options.push([\"end\", filters.end]);\n  if (filters.startDate && filters.endDate)\n    options.push([\"start\", `${filters.startDate},${filters.endDate}`]);\n  if (filters.minDuration && filters.maxDuration)\n    options.push([\n      \"duration\",\n      `${filters.minDuration}, ${filters.maxDuration}`,\n    ]);\n  if (filters.query?.length) options.push([\"global\", filters.query]);\n  console.log(options);\n  return toQueryString(options);\n};\nexport const getInitials = (str: string) => {\n  return str\n    .split(\" \")\n    .map((n) => n[0])\n    .join(\"\");\n};\n\nfunction hashCode(str: string): number {\n  var hash = 0;\n  for (var i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 6) - hash);\n  }\n  return hash;\n}\n\nexport function generateBgColor(label: string): string {\n  const BACKGROUND_COLORS = [\n    \"#093145\",\n    \"#3C6478\",\n    \"#107896\",\n    \"#43ABC9\",\n    \"#C2571A\",\n    \"#9A2617\",\n  ];\n  return BACKGROUND_COLORS[\n    Math.abs(hashCode(label) % BACKGROUND_COLORS.length)\n  ];\n}\n\nexport const openNotificationWithIcon = (\n  message: string,\n  description: string,\n  type: \"success\" | \"info\" | \"error\" | \"warning\"\n) => {\n  notification[type]({\n    message,\n    description,\n  });\n};\n","import { Store } from \"src/redux\";\nimport url from \"url\";\nimport { getApprovedConnections } from \"./Connection\";\nimport { getContacts, getInmates, getStaff } from \"./Persona\";\n\nexport const API_URL = process.env.REACT_APP_BASE_URL + \"api/\";\n\nconsole.log(API_URL);\n\nexport interface ApiResponse {\n  date: number;\n  good: boolean;\n  status?: \"OK\" | \"ERROR\" | \"succeeded\" | 200;\n  message?: string;\n  data: Record<string, unknown> | Record<string, unknown>[] | unknown;\n}\n\nexport function fetchTimeout(\n  fetchUrl: string,\n  options: Record<string, unknown>,\n  timeout = 15000\n): Promise<Response> {\n  // if (fetchUrl === 'api/node/2/call/1') {\n  //   console.log(fetchUrl);\n  // }\n\n  console.log(fetchUrl);\n  return Promise.race([\n    fetch(fetchUrl, options),\n    new Promise<Response>((_, reject) =>\n      setTimeout(() => reject(new Error(\"timeout\")), timeout)\n    ),\n  ]);\n}\n\nexport function toQueryString(options: string[][]) {\n  return options.map((x) => x[0] + \"=\" + encodeURIComponent(x[1])).join(\"&\");\n}\n\nexport async function fetchAuthenticated(\n  fetchUrl: string,\n  options: Record<string, unknown> = {},\n  nodeResource = true,\n  timeout = 15000\n): Promise<ApiResponse> {\n  const state = Store.getState();\n\n  const requestOptions = {\n    ...options,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${state.session.authInfo.apiToken}`,\n    },\n  };\n\n  const response = await fetchTimeout(\n    `${API_URL}${\n      nodeResource ? `node/${state.facilities.selected?.nodeId}` : \"\"\n    }${fetchUrl}`,\n    requestOptions,\n    timeout\n  );\n  console.log(response);\n  const body = await response.json();\n  return body;\n}\n\nexport async function initializeAppData() {\n  await Promise.allSettled([\n    getInmates(),\n    getApprovedConnections(),\n    getStaff(),\n    getContacts(),\n  ]);\n}\n","import { updateConnection } from \"src/api/Connection\";\nimport { AppThunk } from \"src/redux/helpers\";\nimport { openNotificationWithIcon } from \"src/utils/utils\";\n\nconst SET_CONNECTION_REQUESTS = \"connection/SET_CONNECTION_REQUESTS\";\nconst DELETE_CONNECTION_REQUEST = \"connection/DECLINE_CONNECTION_REQUEST\";\nconst SELECT_CONNECTION_REQUEST = \"connection/SELECT_CONNECTION_REQUEST\";\nconst SET_CONNECTIONS = \"connection/SET_CONNECTIONS\";\nconst ADD_CONNECTION = \"connection/ACCEPT_CONNECTION_REQUEST\";\n\n// Action Constants & Shapes\ninterface SetConnectionRequestsAction {\n  type: typeof SET_CONNECTION_REQUESTS;\n  payload: BaseConnection[];\n}\n\ninterface AddConnectionAction {\n  type: typeof ADD_CONNECTION;\n  payload: BaseConnection;\n}\n\ninterface DeleteConnectionRequestAction {\n  type: typeof DELETE_CONNECTION_REQUEST;\n  payload: BaseConnection;\n}\n\ninterface SetConnectionsAction {\n  type: typeof SET_CONNECTIONS;\n  payload: BaseConnection[];\n}\n\ninterface SelectConnectionRequestAction {\n  type: typeof SELECT_CONNECTION_REQUEST;\n  payload: BaseConnection;\n}\n\ntype ConnectionActionTypes =\n  | SetConnectionRequestsAction\n  | AddConnectionAction\n  | DeleteConnectionRequestAction\n  | SetConnectionsAction\n  | SelectConnectionRequestAction;\n\n// Action Creators\nexport const setConnectionRequests = (\n  connections: BaseConnection[]\n): ConnectionActionTypes => {\n  return {\n    type: SET_CONNECTION_REQUESTS,\n    payload: connections,\n  };\n};\n\nconst addConnection = (connection: BaseConnection): ConnectionActionTypes => {\n  return {\n    type: ADD_CONNECTION,\n    payload: connection,\n  };\n};\n\nconst deleteConnectionRequeest = (\n  connection: BaseConnection\n): ConnectionActionTypes => {\n  return {\n    type: DELETE_CONNECTION_REQUEST,\n    payload: connection,\n  };\n};\n\nexport const selectConnectionRequest = (\n  connection: BaseConnection\n): ConnectionActionTypes => {\n  return {\n    type: SELECT_CONNECTION_REQUEST,\n    payload: connection,\n  };\n};\n\nexport const setConnections = (\n  connections: BaseConnection[]\n): ConnectionActionTypes => {\n  return {\n    type: SET_CONNECTIONS,\n    payload: connections,\n  };\n};\n\n// Reducer\nconst initialState: ConnectionState = {\n  requests: [],\n  connections: [],\n  selectedRequest: null,\n};\n\nexport function connectionsReducer(\n  state = initialState,\n  action: ConnectionActionTypes\n): ConnectionState {\n  switch (action.type) {\n    case SET_CONNECTIONS:\n      return {\n        ...state,\n        connections: action.payload,\n      };\n    case SET_CONNECTION_REQUESTS:\n      const selectedRequest = action.payload.length ? action.payload[0] : null;\n      return {\n        ...state,\n        requests: action.payload,\n        selectedRequest: selectedRequest,\n      };\n    case ADD_CONNECTION:\n      const requestsPostApproval = state.requests.filter(\n        (connection) => connection.id !== action.payload.id\n      );\n      return {\n        ...state,\n        connections: [...state.connections, action.payload],\n        requests: requestsPostApproval,\n        selectedRequest: requestsPostApproval.length\n          ? requestsPostApproval[0]\n          : null,\n      };\n    case DELETE_CONNECTION_REQUEST:\n      const requestsPostDeletion = state.requests.filter(\n        (connection) => connection.id !== action.payload.id\n      );\n      return {\n        ...state,\n        requests: requestsPostDeletion,\n        selectedRequest: requestsPostDeletion.length\n          ? requestsPostDeletion[0]\n          : null,\n      };\n\n    case SELECT_CONNECTION_REQUEST:\n      return { ...state, selectedRequest: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport const acceptConnectionRequest = (\n  request: BaseConnection\n): AppThunk => async (dispatch) => {\n  //TODO replace this with the API call\n  await updateConnection(request.id, \"approved\");\n  // const connection: BaseConnection = {\n  //   ...request,\n  //   approvedAt: new Date(),\n  // };\n  dispatch(addConnection(request));\n  openNotificationWithIcon(\"Connection created!\", \"Hooray!\", \"success\");\n};\n\nexport const declineConnectionRequest = (\n  request: BaseConnection\n): AppThunk => async (dispatch) => {\n  await updateConnection(request.id, \"denied\");\n  //TODO replace this with actual API call\n  dispatch(deleteConnectionRequeest(request));\n  openNotificationWithIcon(\"Connection rejected\", \"Very sad\", \"info\");\n};\n","import { createSlice, createEntityAdapter } from \"@reduxjs/toolkit\";\n\nexport const inmatesAdapter = createEntityAdapter<Inmate>();\n\nexport const inmatesSlice = createSlice({\n  name: \"inmates\",\n  initialState: inmatesAdapter.getInitialState(),\n  reducers: {\n    inmatesAddMany: inmatesAdapter.addMany,\n    inmatesUpdate: inmatesAdapter.updateOne,\n    // selectInmate: (state, action: PayloadAction<Inmate>) => action.payload,\n  },\n});\n\nexport const inmatesActions = inmatesSlice.actions;\n","import { createSlice, createEntityAdapter } from \"@reduxjs/toolkit\";\n\nexport const contactsAdapter = createEntityAdapter<Contact>();\n\nexport const contactsSlice = createSlice({\n  name: \"inmates\",\n  initialState: contactsAdapter.getInitialState(),\n  reducers: {\n    contactsAddMany: contactsAdapter.addMany,\n  },\n});\n\nexport const contactsActions = contactsSlice.actions;\n","import { API_URL, fetchAuthenticated } from \"./Common\";\nimport url from \"url\";\nimport { Store } from \"src/redux\";\nimport { inmatesActions } from \"src/redux/modules/inmate\";\nimport camelcaseKeys from \"camelcase-keys\";\nimport { contactsActions } from \"src/redux/modules/contact\";\n\nexport async function getInmates(): Promise<Inmate[]> {\n  const body = await fetchAuthenticated(`/inmates`, {}, false);\n\n  if (body.status !== 200 || !body.data) {\n    throw body;\n  }\n\n  const inmates = ((body.data as Record<string, unknown>)\n    .inmates as Object[]).map((inmate) => camelcaseKeys(inmate)) as Inmate[];\n\n  Store.dispatch(inmatesActions.inmatesAddMany(inmates));\n  return inmates;\n}\n\nexport async function getStaff(): Promise<Staff[]> {\n  const body = await fetchAuthenticated(`/admins`);\n\n  if (body.status !== 200 || !body.data) {\n    throw body;\n  }\n\n  const staff = ((body.data as Record<string, unknown>)\n    .admins as Object[]).map((admin) => camelcaseKeys(admin)) as Staff[];\n\n  return staff;\n}\n\nexport async function getContacts(): Promise<Contact[]> {\n  const body = await fetchAuthenticated(`/users`);\n\n  if (body.status !== 200 || !body.data) {\n    throw body;\n  }\n\n  const contacts = ((body.data as Record<string, unknown>)\n    .users as Object[]).map((contact) => camelcaseKeys(contact)) as Contact[];\n\n  console.log(contacts);\n  Store.dispatch(contactsActions.contactsAddMany(contacts));\n  return contacts;\n}\n","import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n  EntityState,\n} from \"@reduxjs/toolkit\";\nimport { API_URL, fetchAuthenticated } from \"src/api/Common\";\nimport { getStaff } from \"src/api/Persona\";\nimport { AppThunk } from \"../helpers\";\nimport url from \"url\";\nimport camelcaseKeys from \"camelcase-keys\";\n\nexport const staffAdapter = createEntityAdapter<Staff>();\n\nexport const updateStaff = createAsyncThunk(\n  \"staff/updateStaff\",\n  async (args: { userId: number; permissions: Permission[] }) => {\n    const body = await fetchAuthenticated(\n      url.resolve(API_URL, `node/1/admin`),\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          user_id: args.userId,\n          permissions: args.permissions,\n        }),\n      }\n    );\n\n    //TODO update this with API return when it's actually supported\n    // const staff = camelcaseKeys((body.data as Record<string, unknown>)\n    // .admin as Object) as Staff;;\n\n    return { userId: args.userId, changes: { permissions: args.permissions } };\n  }\n);\n\nexport const createStaff = createAsyncThunk(\n  \"staff/createStaff\",\n  async (args: { email: string; role: string; permissions: Permission[] }) => {\n    const body = await fetchAuthenticated(\n      url.resolve(API_URL, `node/1/admin`),\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: args.email,\n          role: args.role,\n          permissions: args.permissions,\n        }),\n      }\n    );\n\n    //TODO update this with API return when it's actually supported\n    const staff = camelcaseKeys(\n      (body.data as Record<string, unknown>).staff as Object\n    ) as Staff;\n\n    return staff;\n  }\n);\ninterface StaffState extends EntityState<Staff> {\n  error?: string;\n}\n\nconst initialState: StaffState = staffAdapter.getInitialState({\n  loading: false,\n});\n\nexport const staffSlice = createSlice({\n  name: \"staff\",\n  initialState: initialState,\n  reducers: {\n    staffSetAll: staffAdapter.setAll,\n    staffUpdateOne: staffAdapter.updateOne,\n  },\n  extraReducers: (builder) => {\n    builder.addCase(updateStaff.fulfilled, (state, action) => {\n      staffAdapter.updateOne(state, {\n        id: action.payload.userId,\n        changes: action.payload.changes,\n      });\n    });\n    builder.addCase(updateStaff.rejected, (state, action) => ({\n      ...state,\n      error: action.error.message,\n    }));\n    builder.addCase(createStaff.fulfilled, (state, action) => {\n      staffAdapter.addOne(state, action.payload);\n    });\n    builder.addCase(createStaff.rejected, (state, action) => ({\n      ...state,\n      error: action.error.message,\n    }));\n  },\n});\n\nexport const staffActions = staffSlice.actions;\n\nexport const loadStaff = (): AppThunk => async (dispatch) => {\n  // TODO move this to async thunk\n  const staff = await getStaff();\n  dispatch(staffActions.staffSetAll(staff));\n};\n","import { ThunkAction } from \"redux-thunk\";\nimport { RootState } from \"./index\";\nimport { Action } from \"redux\";\n\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n\n// Visitation helpers\nexport interface RawVisitation {\n  id: number;\n  connection: BaseConnection;\n  connection_id: number;\n  users: number[];\n  start: number;\n  end: number;\n  first_live?: number;\n  last_live?: number;\n  last_status: string;\n  room_id: number;\n  kiosk_id: number;\n  approved: boolean;\n  video_ready: boolean;\n}\n\nexport function cleanVisitation(visitation: RawVisitation): BaseVisitation {\n  return {\n    id: visitation.id,\n    connectionId: visitation.connection_id,\n    scheduledStartTime: visitation.start,\n    scheduledEndTime: visitation.end,\n    startTime: visitation.first_live,\n    endTime: visitation.last_live,\n    end: visitation.end,\n    approved: visitation.approved,\n    kiosk: { id: visitation.kiosk_id } as Kiosk,\n    videoReady: visitation.video_ready,\n  } as BaseVisitation;\n}\n","import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n  EntityState,\n} from \"@reduxjs/toolkit\";\nimport { API_URL, fetchAuthenticated, toQueryString } from \"src/api/Common\";\nimport { AppThunk, cleanVisitation, RawVisitation } from \"../helpers\";\nimport url from \"url\";\nimport { createCallOptionsParam } from \"src/utils/utils\";\n\nexport const callsAdapter = createEntityAdapter<BaseVisitation>();\n\nexport const fetchCalls = createAsyncThunk(\n  \"calls/fetchAll\",\n  async (filters: CallFilters) => {\n    const body = await fetchAuthenticated(\n      `/calls?${createCallOptionsParam(filters)}`\n    );\n    if (body.status !== 200) {\n      throw body;\n    }\n\n    const visitations = ((body.data as Record<string, unknown>)\n      .calls as RawVisitation[]).map(cleanVisitation) as RecordedVisitation[];\n\n    return visitations;\n  }\n);\n\nexport const fetchRecording = createAsyncThunk(\n  \"bloo/fetchRecording\",\n  async (callId: number) => {\n    const body = await fetchAuthenticated(`/call/${callId}`);\n    if (body.status !== 200) {\n      throw body;\n    }\n    const recordingUrl = (body.data as Record<string, unknown>).url as string;\n\n    return { callId, recordingUrl };\n  }\n);\n\ninterface VisitationState extends EntityState<BaseVisitation> {\n  error?: string;\n}\n\nconst initialState: VisitationState = callsAdapter.getInitialState({});\n\nexport const callsSlice = createSlice({\n  name: \"calls\",\n  initialState,\n  reducers: {\n    callsAddMany: callsAdapter.addMany,\n    callsSetAll: callsAdapter.setAll,\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCalls.fulfilled, (state, action) => {\n      // TODO make this a set all and filter\n      callsAdapter.setAll(state, action.payload);\n    });\n    builder.addCase(fetchCalls.rejected, (state, action) => ({\n      ...state,\n      error: action.error.message,\n    }));\n    builder.addCase(fetchRecording.fulfilled, (state, action) =>\n      callsAdapter.updateOne(state, {\n        id: action.payload.callId,\n        changes: { recordingUrl: action.payload.recordingUrl },\n      })\n    );\n    builder.addCase(fetchRecording.rejected, (state, action) => ({\n      ...state,\n      error: action.error.message,\n    }));\n  },\n});\n\nexport const callsActions = callsSlice.actions;\n","import {\n  createAsyncThunk,\n  createEntityAdapter,\n  createSlice,\n  EntityState,\n  PayloadAction,\n} from \"@reduxjs/toolkit\";\nimport camelcaseKeys from \"camelcase-keys\";\nimport { API_URL, fetchAuthenticated } from \"src/api/Common\";\nimport { SelectedFacility, Facility, NodeCallSlot } from \"src/typings/Node\";\nimport { mapCallBlockToCallSlots } from \"src/utils/Call\";\nimport url from \"url\";\nimport { Store } from \"..\";\n\nexport const facilitiesAdapter = createEntityAdapter<Facility>();\n\nexport const selectActiveFacility = createAsyncThunk(\n  \"facility/selectActiveFacility\",\n  async (facility: Facility) => {\n    const body = await fetchAuthenticated(\n      `node/${facility.nodeId}/times`,\n      {},\n      false\n    );\n\n    console.log(body);\n    if (!body.data) {\n      throw new Error(\"Could not load facility data\");\n    }\n\n    const callTimes = camelcaseKeys(\n      (body.data as Record<string, unknown>).call_times as Object\n    ) as NodeCallSlot[];\n\n    return { ...facility, callTimes };\n  }\n);\n\nexport const fetchFacilities = createAsyncThunk(\n  \"facility/fetchFacilities\",\n  async () => {\n    // TODO refactor this to use some APIServiceManager\n    const fBody = await fetchAuthenticated(\n      `user/${Store.getState().session.user.id}/facilities`,\n      {},\n      false\n    );\n\n    if (!fBody.data) {\n      throw new Error(\"Could not load list of facilities\");\n    }\n\n    const facilities = camelcaseKeys(\n      (fBody.data as Record<string, unknown>) as Object\n    ) as Facility[];\n\n    if (!facilities.length) {\n      throw new Error(\"Must have access to at least one facility\");\n    }\n\n    // fetch information for first facility\n    Store.dispatch(selectActiveFacility(facilities[0]));\n\n    return { facilities };\n  }\n);\n\nexport const updateCallTimes = createAsyncThunk(\n  \"facility/updateCallTimes\",\n  async (args: { callSlots: NodeCallSlot[]; zone: string }) => {\n    const body = await fetchAuthenticated(`/times`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        call_times: args.callSlots,\n        zone: \"America_LosAngeles\",\n      }),\n    });\n\n    // update\n    if (!body.data) {\n      throw new Error(\"Could not update call time\");\n    }\n\n    // update stsore\n    return args.callSlots;\n  }\n);\n\ninterface FacilitiesState extends EntityState<Facility> {\n  error?: string;\n  selected?: SelectedFacility;\n  loading: boolean;\n}\n\nconst initialState: FacilitiesState = facilitiesAdapter.getInitialState({\n  loading: false,\n});\n\nexport const facilitiesSlice = createSlice({\n  name: \"facilities\",\n  initialState,\n  reducers: {\n    setSelected: (state, action: PayloadAction<SelectedFacility>) => ({\n      ...state,\n      selected: action.payload,\n    }),\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchFacilities.fulfilled, (state, action) => {\n      const newState = facilitiesAdapter.setAll(\n        state,\n        action.payload.facilities\n      );\n      // console.log( action.payload.selected);\n      // newState.selected = action.payload.selected;\n      return newState;\n    });\n    builder.addCase(fetchFacilities.rejected, (state, action) => ({\n      ...state,\n      error: action.error.message,\n    }));\n    builder.addCase(selectActiveFacility.fulfilled, (state, action) => ({\n      ...state,\n      selected: action.payload,\n      loading: false,\n    }));\n    builder.addCase(selectActiveFacility.rejected, (state, action) => ({\n      ...state,\n      error: action.error.message,\n      loading: false,\n    }));\n    builder.addCase(selectActiveFacility.pending, (state) => ({\n      ...state,\n      loading: true,\n    }));\n    builder.addCase(updateCallTimes.fulfilled, (state, action) => ({\n      ...state,\n      // TODO update store with new call times\n      // selected:  {...state.selected},\n      // selected: { ...state.selected, callTimes: action.payload },\n    }));\n  },\n});\n\nexport const facilitiesActions = facilitiesSlice.actions;\n","import { RootState } from \".\";\nimport { connectionsAdapter } from \"./modules/connections\";\nimport { contactsAdapter } from \"./modules/contact\";\nimport { inmatesActions, inmatesAdapter } from \"./modules/inmate\";\nimport { createSelector } from \"reselect\";\nimport { callsAdapter } from \"./modules/call\";\nimport { staffAdapter } from \"./modules/staff\";\nimport { facilitiesAdapter } from \"./modules/facility\";\n\n// get selectors from entity adapter\nexport const {\n  selectById: selectConnectionById,\n  selectAll: selectAllConnections,\n} = connectionsAdapter.getSelectors<RootState>((state) => state.connections);\n\nexport const {\n  selectById: selectInmateById,\n  selectAll: selectAllInmates,\n} = inmatesAdapter.getSelectors<RootState>((state) => state.inmates);\n\nexport const {\n  selectById: selectContactById,\n  selectAll: selectAllContacts,\n} = contactsAdapter.getSelectors<RootState>((state) => state.contacts);\n\nexport const {\n  selectById: selectCallById,\n  selectAll: selectAllCalls,\n} = callsAdapter.getSelectors<RootState>((state) => state.calls);\n\nexport const {\n  selectById: selectStaffByIdd,\n  selectAll: selectAllStaff,\n} = staffAdapter.getSelectors<RootState>((state) => state.staff);\n\nexport const {\n  selectById: selectFacilityById,\n  selectAll: selectAllFacilities,\n} = facilitiesAdapter.getSelectors<RootState>((state) => state.facilities);\n\n// helper selectors\nconst getConnectionEntities = (\n  state: RootState,\n  connection: BaseConnection\n): Connection => {\n  const inmate = selectInmateById(state, connection.inmateId);\n  const contact = selectContactById(state, connection.userId);\n  // TODO improve this\n  if (!inmate)\n    throw new Error(\n      `Failed to locate information for inmate ${connection.inmateId}`\n    );\n  if (!contact)\n    throw new Error(\n      `Failed to locate information for contact ${connection.userId}`\n    );\n  return { inmate, contact, ...connection };\n};\n\nexport const getAllConnectionsInfo = (\n  state: RootState,\n  requests: BaseConnection[]\n): Connection[] => {\n  return requests.map((request) => getConnectionEntities(state, request));\n};\n\nexport const getVisitationEntities = (\n  state: RootState,\n  visitation: BaseVisitation\n): Visitation => {\n  const connection = selectConnectionById(state, visitation.connectionId);\n  if (!connection) throw new Error(\"Failed to locate connection information\");\n\n  // TODO add error handling\n  const detailedConnection = getConnectionEntities(state, connection);\n  return { ...visitation, connection: detailedConnection };\n};\n\nexport const getAllVisitationsInfo = (\n  state: RootState,\n  visitations: BaseVisitation[]\n): Visitation[] => {\n  return visitations.map((visitation) =>\n    getVisitationEntities(state, visitation)\n  );\n};\n","const MEDIA_TYPE = {\n  audio: \"audioType\",\n  video: \"videoType\",\n  screen: \"screenType\",\n};\n\n/*\nDEBUGGING\n\nwindow.rc = null;\nwindow.consumers = [];\nwindow.producers = [];\n*/\n\nconst config = {\n  video: {\n    width: { min: 640, ideal: 1920 },\n    height: { min: 400, ideal: 1080 },\n    encodings: [\n      {\n        rid: \"r0\",\n        maxBitrate: 100000,\n        scalabilityMode: \"S1T3\",\n      },\n      {\n        rid: \"r1\",\n        maxBitrate: 300000,\n        scalabilityMode: \"S1T3\",\n      },\n      {\n        rid: \"r2\",\n        maxBitrate: 900000,\n        scalabilityMode: \"S1T3\",\n      },\n    ],\n    codecOptions: {\n      videoGoogleStartBitrate: 1000,\n    },\n  },\n};\n\nclass RoomClient {\n  constructor(mediasoupClient, socket, callId) {\n    window.rc = this;\n    this.mediasoupClient = mediasoupClient;\n    this.socket = socket;\n    this.callId = callId;\n\n    // We will eventually have...\n    // Two transports\n    // this.producerTransport = null;\n    this.consumerTransport = null;\n\n    // A device\n    this.device = null;\n\n    // Consumers and producers\n    this.consumers = {};\n    // this.producers = {};\n\n    // Event handlers\n    this.handlers = { consume: [] };\n  }\n\n  async request(name, data) {\n    return new Promise((resolve, reject) => {\n      this.socket.emit(name, data, (response) => {\n        if (response.error) reject(response.error);\n        else resolve(response);\n      });\n    });\n  }\n\n  async handleTransportConnect(transport) {\n    return new Promise((resolve, reject) => {\n      // Wait for the producer transport to connect...\n      transport.on(\"connect\", async ({ dtlsParameters }, callback, errback) => {\n        console.log(\"got connect!\");\n        await this.request(\"establishDtls\", {\n          dtlsParameters,\n          callId: this.callId,\n          transportId: transport.id,\n        });\n\n        callback();\n        resolve();\n      });\n    });\n  }\n\n  async init() {\n    // Request to join the room.\n    // We will recieve two transports and\n    // and rtpCapabilities object, if we are allowed in.\n    const {\n      // producerTransportInfo,\n      consumerTransportInfo,\n      routerRtpCapabilities,\n    } = await this.request(\"join\", { callId: this.callId });\n\n    // console.log(producerTransportInfo);\n    console.log(consumerTransportInfo);\n    console.log(routerRtpCapabilities);\n\n    // Load up a local media device consistent\n    // with the server's RTP capabilities.\n    this.device = await this.loadDevice(routerRtpCapabilities);\n\n    // Set up both transports and promise to send\n    // dtls info when they connect (this won't occur until\n    // someone actually produces).\n    // this.producerTransport = this.device.createSendTransport(\n    //   producerTransportInfo\n    // );\n    // this.handleTransportConnect(this.producerTransport);\n\n    this.consumerTransport = this.device.createRecvTransport(\n      consumerTransportInfo\n    );\n    this.handleTransportConnect(this.consumerTransport);\n\n    // Declare what our device is capable of.\n    await this.request(\"declareRtpCapabilities\", {\n      rtpCapabilities: this.device.rtpCapabilities,\n    });\n\n    // We don't actually need to wait for this request to come back.\n    this.request(\"finishConnecting\", { callId: this.callId });\n\n    // When our producer transport is producing a new stream,\n    // inform the server.\n    // this.producerTransport.on(\n    //   \"produce\",\n    //   async ({ kind, rtpParameters }, callback, errback) => {\n    //     console.log(\"Sending produce request\");\n\n    //     const { producerId } = await this.request(\"produce\", {\n    //       callId: this.callId,\n    //       kind,\n    //       rtpParameters,\n    //     });\n\n    //     callback({ id: producerId });\n    //   }\n    // );\n\n    // When we get a consumer, fire an event.\n    this.socket.on(\"consume\", async (info) => {\n      const { consumer, stream } = await this.consume(info);\n\n      this.socket.emit(\"resumeConsumer\", {\n        callId: this.callId,\n        consumerId: consumer.id,\n      });\n\n      this.handlers.consume.forEach((f) => f(info.kind, stream));\n    });\n  }\n\n  getMediaConstraints(type, deviceId) {\n    if (type === MEDIA_TYPE.audio) {\n      return { audio: { deviceId } };\n    } else if (type === MEDIA_TYPE.video) {\n      return {\n        video: {\n          width: config.video.width,\n          height: config.video.height,\n          deviceId,\n        },\n      };\n    }\n  }\n\n  async produce(type, deviceId = null) {\n    const mediaConstraints = this.getMediaConstraints(type, deviceId);\n    console.log(\"Media constraints are\", mediaConstraints);\n    const stream = await navigator.mediaDevices.getUserMedia(mediaConstraints);\n\n    console.log(\"Got stream\");\n\n    const track = (type === MEDIA_TYPE.audio\n      ? stream.getAudioTracks()\n      : stream.getVideoTracks())[0];\n\n    const params = { track };\n\n    console.log(\"got track\");\n\n    if (type === MEDIA_TYPE.video) {\n      params.encodings = config.video.encodings;\n      params.codecOptions = config.video.codecOptions;\n    }\n\n    console.log(\"producing with params\", params);\n\n    // const producer = await this.producerTransport.produce(params);\n    // console.log(\"produced with id\", producer.id);\n    // window.producers.push(producer);\n    // this.producers[producer.id] = producer;\n  }\n\n  async loadDevice(routerRtpCapabilities) {\n    const device = new this.mediasoupClient.Device();\n\n    await device.load({ routerRtpCapabilities });\n\n    return device;\n  }\n\n  async consume(info) {\n    const consumer = await this.consumerTransport.consume(info);\n    const stream = new MediaStream();\n\n    this.consumers[consumer.id] = consumer;\n\n    stream.addTrack(consumer.track);\n\n    console.log(\"Successfully created stream.\");\n    return { consumer, stream };\n  }\n\n  async on(event, fn) {\n    if (!(event in this.handlers)) {\n      this.handlers[event] = [];\n    }\n    this.handlers[event].push(fn);\n  }\n\n  async terminate() {\n    console.log(\"sending request to terminate\");\n    await this.request(\"terminate\", { callId: this.callId });\n  }\n}\n\nexport default RoomClient;\n","import React, { ReactElement, useState } from \"react\";\nimport \"./Video.css\";\nimport { Menu, Spin, Dropdown, Button, Modal } from \"antd\";\nimport {\n  AudioMutedOutlined,\n  AudioOutlined,\n  LockFilled,\n  MessageFilled,\n  MoreOutlined,\n  SettingFilled,\n} from \"@ant-design/icons\";\nimport { CallAlert } from \"src/typings/Call\";\n\nconst { SubMenu } = Menu;\n\ninterface Props {\n  alerts: CallAlert[];\n  terminateCall: () => void;\n  lockCall: () => void;\n  muteCall: () => void;\n  unmuteCall: () => void;\n  emitAlert: (alert: CallAlert) => void;\n  isAudioOn: boolean;\n}\n\nexport default function VideoOverlay({\n  alerts,\n  terminateCall,\n  lockCall,\n  muteCall,\n  unmuteCall,\n  isAudioOn,\n  emitAlert,\n}: Props): ReactElement {\n  const [selectedAlert, setSelectedAlert] = useState<CallAlert | null>(null);\n\n  const handleConfirmation = () => {\n    if (selectedAlert) emitAlert(selectedAlert);\n    setSelectedAlert(null);\n  };\n\n  const menu = (\n    <Menu>\n      <SubMenu key=\"alert\" icon={<MessageFilled />} title=\"Send Alert\">\n        {alerts.map((alert) => (\n          <Menu.Item key={alert.id} onClick={() => setSelectedAlert(alert)}>\n            {alert.title}\n          </Menu.Item>\n        ))}\n      </SubMenu>\n      <Menu.Item key=\"lock\" icon={<LockFilled />} onClick={() => lockCall()}>\n        Lock\n      </Menu.Item>\n      <Menu.Item\n        key=\"terminate\"\n        icon={<SettingFilled />}\n        onClick={() => terminateCall()}\n      >\n        Terminate Call\n      </Menu.Item>\n      <Menu.Item\n        key=\"mute\"\n        icon={isAudioOn ? <AudioMutedOutlined /> : <AudioOutlined />}\n        onClick={() => (isAudioOn ? muteCall() : unmuteCall())}\n      >\n        {isAudioOn ? \"Mute\" : \"Unmute\"}\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <div className=\"video-commands-overlay\">\n      <Dropdown overlay={menu}>\n        <Button>\n          <MoreOutlined />\n        </Button>\n      </Dropdown>\n      <Modal\n        title=\"Are you sure you want to send this alert?\"\n        visible={!!selectedAlert}\n        onOk={handleConfirmation}\n        onCancel={() => setSelectedAlert(null)}\n      >\n        <p>Send the following alert to the participants:</p>\n        <p>{selectedAlert?.body}</p>\n      </Modal>\n    </div>\n  );\n}\n","import React, { ReactElement, useEffect, useRef, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"src/redux\";\nimport RoomClient from \"src/pages/LiveVisitation/RoomClient\";\nimport * as mediasoupClient from \"mediasoup-client\";\nimport io from \"socket.io-client\";\nimport { Menu, Spin, Dropdown, Button, Space } from \"antd\";\nimport {\n  LockFilled,\n  MessageFilled,\n  MoreOutlined,\n  SettingFilled,\n} from \"@ant-design/icons\";\nimport \"./Video.css\";\nimport VideoOverlay from \"./VideoOverlay\";\nimport { CallAlert } from \"src/typings/Call\";\nimport { cloneObject } from \"src/utils/utils\";\n\ninterface Props {\n  width: number | string;\n  height: number | string;\n  callId: number;\n  socket: SocketIOClient.Socket;\n  alerts: CallAlert[];\n  terminateCall: (callId: number) => void;\n  muteCall: (callId: number) => void;\n  unmuteCall: (callId: number) => void;\n  isAudioOn: boolean;\n  lockCall: (callId: number) => void;\n}\n\ndeclare global {\n  interface Window {\n    Debug: any;\n  }\n}\n\nfunction Loader(): ReactElement {\n  return (\n    <Space direction=\"vertical\" className=\"video-loading-spinner\">\n      <Spin />\n      <span className=\"video-loading-spinner-span \">Loading video call...</span>\n    </Space>\n  );\n}\nconst VideoChat: React.FC<Props> = React.memo(\n  ({\n    width,\n    height,\n    callId,\n    socket,\n    alerts,\n    terminateCall,\n    lockCall,\n    muteCall,\n    unmuteCall,\n    isAudioOn,\n  }) => {\n    const ref = React.createRef<HTMLDivElement>();\n\n    const token = useSelector(\n      (state: RootState) => state.session.authInfo.apiToken\n    );\n    const id = useSelector((state: RootState) => state.session.user.id);\n\n    const [loading, setLoading] = useState(false);\n    const [video, setVideo] = useState<HTMLVideoElement>();\n    const [audio, setAudio] = useState();\n\n    console.log(isAudioOn);\n    const emitAlert = async (alert: CallAlert) => {\n      const { participants } = await new Promise((resolve, reject) => {\n        socket.emit(\"info\", { callId }, resolve);\n      });\n      console.log(participants);\n      socket.emit(\"textMessage\", {\n        callId,\n        contents: alert.body,\n        recipients: participants,\n      });\n    };\n\n    // Asynchronously load the room\n    useEffect(() => {\n      setLoading(true);\n      if (ref.current) {\n        console.log(\"Reinitializing videochat.\" + callId);\n        (async () => {\n          console.log(\"Connection state\", socket.connected);\n\n          if (!socket.connected) {\n            console.log(\"Not connected, so waiting until connected.\");\n            window.Debug = socket;\n            await new Promise((resolve) => socket.on(\"connect\", resolve));\n            console.log(\"OK\");\n          }\n\n          await new Promise((resolve) => {\n            // TODO fetch actual credentials from redux\n            socket.emit(\n              \"authenticate\",\n              {\n                type: \"monitor\",\n                id,\n                token,\n              },\n              resolve\n            );\n          });\n\n          const rc = new RoomClient(mediasoupClient, socket, callId);\n          await rc.init();\n\n          console.log(rc);\n\n          // This will occur whenever we have JUST joined, or whenever\n          // a NEW participant arrives.\n          rc.on(\"consume\", async (kind: string, stream: MediaStream) => {\n            // console.log(\"GOT CONSUME\");\n            // console.log(stream);\n            while (!ref.current) {\n              await new Promise((resolve) => setTimeout(resolve, 100));\n            }\n\n            // if (ref.current) {\n            switch (kind) {\n              case \"video\":\n                if (video) break;\n                const newVideo = document.createElement(\"video\");\n                newVideo.srcObject = stream;\n                newVideo.style.width = `100%`;\n                newVideo.style.height = `100%`;\n                newVideo.autoplay = true;\n                ref.current.appendChild(newVideo);\n                setVideo(newVideo);\n\n                break;\n              case \"audio\":\n                if (!isAudioOn) break;\n                if (audio) break;\n                const newAudio = document.createElement(\"audio\");\n                newAudio.srcObject = stream;\n                newAudio.autoplay = true;\n                document.body.appendChild(newAudio);\n                break;\n            }\n            setLoading(false);\n          });\n        })();\n      }\n    }, [\n      callId,\n      id,\n      ref,\n      token,\n      socket,\n      width,\n      height,\n      isAudioOn,\n      audio,\n      video,\n    ]);\n\n    return (\n      <div\n        className=\"video-wrapper\"\n        style={{\n          width,\n          height,\n        }}\n        ref={ref}\n      >\n        <VideoOverlay\n          alerts={alerts}\n          terminateCall={() => terminateCall(callId)}\n          lockCall={() => lockCall(callId)}\n          muteCall={() => muteCall(callId)}\n          unmuteCall={() => unmuteCall(callId)}\n          isAudioOn={isAudioOn}\n          emitAlert={emitAlert}\n        />\n        {loading && <Loader />}\n      </div>\n    );\n  }\n);\n\nexport default VideoChat;\n","import React, { ReactElement } from \"react\";\nimport { Badge, Card } from \"antd\";\nimport \"./Video.css\";\n\ninterface Props {\n  width: number | string;\n  height: number | string;\n}\n\nexport default function VideoSkeleton({ width, height }: Props): ReactElement {\n  return (\n    <Badge.Ribbon text=\"Offline\">\n      <Card style={{ width, height }} className=\"video-wrapper\"></Card>\n    </Badge.Ribbon>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { connect, ConnectedProps, useSelector } from \"react-redux\";\nimport { RootState } from \"src/redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Form from \"react-bootstrap/Form\";\nimport SidebarCard from \"src/components/cards/SidebarCard\";\nimport VisitationCard from \"src/components/cards/VisitationCard\";\n\nimport {\n  CALL_ALERTS,\n  GRID_TO_SPAN_WIDTH,\n  GRID_TO_VH_HEIGHT,\n  WRAPPER_STYLE,\n} from \"src/utils/constants\";\nimport ConnectionDetailsCard from \"src/components/cards/ConnectionDetailsCard\";\nimport Sidebar from \"src/components/containers/Sidebar\";\nimport { genFullName } from \"src/utils/utils\";\nimport Container from \"src/components/containers/Container\";\nimport Wrapper from \"src/components/containers/Wrapper\";\nimport io from \"socket.io-client\";\nimport { getAllVisitationsInfo, selectAllCalls } from \"src/redux/selectors\";\nimport {\n  Menu,\n  Button,\n  Dropdown,\n  Layout,\n  Row,\n  Col,\n  Space,\n  Carousel,\n} from \"antd\";\nimport { fetchCalls } from \"src/redux/modules/call\";\nimport VideoChat from \"src/pages/LiveVisitation/VideoChat\";\nimport VideoSkeleton from \"./VideoSkeleton\";\nimport { chownSync } from \"fs\";\nimport { GridOption } from \"src/typings/Call\";\nimport { socketsActions } from \"src/redux/modules/socket\";\nimport _ from \"lodash\";\n\nconst { Content } = Layout;\n// const { setSocket } = socketsActions;\n\nconst mapStateToProps = (state: RootState) => ({\n  // TODO update this once we have status selecotr\n  visitations: getAllVisitationsInfo(\n    state,\n    selectAllCalls(state)\n  ) as LiveVisitation[],\n  // socket: state.sockets.socket,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      fetchCalls,\n      // setSocket\n    },\n    dispatch\n  );\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst MAX_VH_HEIGHT_FRAMES = 80;\n\nconst LiveVisitationContainer: React.FC<PropsFromRedux> = ({\n  visitations,\n  fetchCalls,\n  // socket,\n  // setSocket,\n}) => {\n  const [socket, setSocket] = useState<SocketIOClient.Socket>();\n  const [visibleCalls, setVisibleCalls] = useState<LiveVisitation[]>([]);\n  const [grid, setGrid] = useState<GridOption>(1);\n  const [frameVhHeight, setFrameVhHeight] = useState(MAX_VH_HEIGHT_FRAMES);\n\n  const [consumeAudioRecord, setConsumeAudioRecord] = useState<\n    Record<number, boolean>\n  >({});\n\n  useEffect(() => {\n    const now = new Date().getTime();\n    fetchCalls({\n      approved: true,\n      firstLive: [0, now].join(\",\"),\n      end: [now, now + 1e8].join(\",\"),\n    });\n  }, [fetchCalls]);\n\n  useEffect(() => {\n    if (!socket)\n      setSocket(\n        io.connect(\"ws://localhost:8000\", { transports: [\"websocket\"] })\n      );\n  }, [setSocket, socket]);\n\n  useEffect(() => {\n    setVisibleCalls(visitations.slice(0, grid));\n  }, [grid, visitations]);\n\n  const handleVideoTermination = () => {\n    // TODO add redux store request\n  };\n\n  // Grid options\n  const handleGridChange = (grid: GridOption) => {\n    setGrid(grid);\n    setFrameVhHeight(GRID_TO_VH_HEIGHT[grid]);\n  };\n\n  const OPTIONS: GridOption[] = [1, 2, 4, 6, 8];\n  const GridMenu = (\n    <Menu>\n      {OPTIONS.map((option) => (\n        <Menu.Item>\n          <span onClick={() => handleGridChange(option)}>View by {option}</span>\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  console.log(consumeAudioRecord);\n  return (\n    <Content style={WRAPPER_STYLE}>\n      <Space direction=\"vertical\" style={{ width: \"100% \" }}>\n        <Dropdown overlay={GridMenu} placement=\"bottomLeft\">\n          <Button>View by {grid}</Button>\n        </Dropdown>\n        {/* <Carousel style={{ width: \"100% \" }}> */}\n        <Row>\n          {Array.from(Array(grid).keys()).map((idx) => (\n            <Col span={GRID_TO_SPAN_WIDTH[grid]}>\n              {visibleCalls.length - 1 >= idx && socket ? (\n                <VideoChat\n                  height={`${frameVhHeight}vh`}\n                  socket={socket}\n                  callId={visibleCalls[idx].id}\n                  width=\"100%\"\n                  alerts={CALL_ALERTS}\n                  terminateCall={handleVideoTermination}\n                  muteCall={(callId: number) => {\n                    console.log(callId);\n                    console.log({ ...consumeAudioRecord, [callId]: true });\n                    setConsumeAudioRecord({\n                      ...consumeAudioRecord,\n                      [callId]: true,\n                    });\n                  }}\n                  unmuteCall={(callId: number) =>\n                    setConsumeAudioRecord(_.omit(consumeAudioRecord, callId))\n                  }\n                  isAudioOn={visibleCalls[idx].id in consumeAudioRecord}\n                  lockCall={(callId: number) => {\n                    console.log(callId);\n                  }}\n                />\n              ) : (\n                <VideoSkeleton width=\"100%\" height={`${frameVhHeight}vh`} />\n              )}\n            </Col>\n          ))}\n        </Row>\n        {/* </Carousel> */}\n      </Space>\n    </Content>\n  );\n};\n\nexport default connector(LiveVisitationContainer);\n","import React, { useState, useEffect } from \"react\";\nimport FullCalendar, {\n  EventClickArg,\n  EventContentArg,\n  EventInput,\n} from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport \"./CalendarView.css\";\nimport { VisitationToEventInput } from \"src/utils/utils\";\n\ninterface Props {\n  visitations: Visitation[];\n}\n\nconst CalendarView: React.FC<Props> = ({ visitations }) => {\n  const [events, setEvents] = useState<EventInput[]>([]);\n\n  const handleEventClick = (clickInfo: EventClickArg) => {\n    if (\n      window.confirm(\n        `Are you sure you want to delete the event '${clickInfo.event.title}'`\n      )\n    ) {\n      clickInfo.event.remove();\n    }\n  };\n\n  useEffect(() => {\n    setEvents(\n      visitations.map((visitation) => VisitationToEventInput(visitation))\n    );\n  }, [visitations]);\n\n  const renderEventContent = (\n    eventContent: EventContentArg\n  ): React.ReactFragment => {\n    return (\n      <>\n        <b>{eventContent.timeText}</b>\n        <i>{eventContent.event.title}</i>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"demo-app-main\">\n      <FullCalendar\n        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n        headerToolbar={{\n          left: \"prev,next today\",\n          center: \"title\",\n          right: \"dayGridMonth,timeGridWeek,timeGridDay\",\n        }}\n        initialView=\"timeGridWeek\"\n        editable={true}\n        selectable={true}\n        selectMirror={true}\n        dayMaxEvents={true}\n        weekends={false}\n        businessHours={true}\n        events={events} // alternatively, use the `events` setting to fetch from a feed\n        eventContent={renderEventContent} // custom render function\n        eventClick={handleEventClick}\n        themeSystem=\"bootstrap\"\n        // eventsSet={(events: EventApi[]) => setCurrentEvents(events)} // called after events are initialized/added/changed/removed\n        /* you can update a remote database when these fire:\n            eventAdd={function(){}}\n            eventChange={function(){}}\n            eventRemove={function(){}}\n            */\n      />\n    </div>\n  );\n};\n\nexport default CalendarView;\n","import React from \"react\";\n\ninterface Props {\n  title: string;\n}\n\nconst Sidebar: React.FC<Props> = ({ title, children }) => {\n  return (\n    <section className=\"left-sidebar\">\n      <span className=\"p3\">{title}</span>\n      {children}\n    </section>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\n\ninterface Props {\n  horizontal?: boolean;\n}\n\nconst Wrapper: React.FC<Props> = ({ children, horizontal }) => {\n  const direction = horizontal\n    ? \"flex-row justify-content-between\"\n    : \"flex-column\";\n\n  return <section className={`d-flex ${direction} w-75`}>{children}</section>;\n};\n\nexport default Wrapper;\n","import React, { useEffect } from \"react\";\nimport CalendarView from \"src/components/calendar/CalendarView\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { RootState } from \"src/redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport Sidebar from \"src/components/containers/Sidebar\";\nimport Container from \"src/components/containers/Container\";\nimport Wrapper from \"src/components/containers/Wrapper\";\nimport { getAllVisitationsInfo } from \"src/redux/selectors\";\n\nconst mapStateToProps = (state: RootState) => ({\n  visitations: getAllVisitationsInfo(\n    state,\n    state.visitations.scheduledVisitations\n  ),\n  hasLoadedScheduledVisitations:\n    state.visitations.hasLoadedScheduledVisitations,\n});\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nfunction mondayMorning(): Date {\n  const now = new Date();\n  const day = now.getDay();\n  now.setDate(now.getDate() - day + 1);\n  now.setHours(0, 0, 0, 0);\n  return now;\n}\n\nfunction fridayEvening(): Date {\n  const now = new Date();\n  const day = now.getDay();\n  now.setDate(now.getDate() - day + 5);\n  now.setHours(23, 59, 59, 0);\n  return now;\n}\n\nconst UnconnectedKioskCalendarContainer: React.FC<PropsFromRedux> = ({\n  visitations,\n  hasLoadedScheduledVisitations,\n}) => {\n  // useEffect(() => {\n  //   if (!hasLoadedScheduledVisitations)\n  //     getVisitations(mondayMorning(), fridayEvening());\n  // });\n\n  return (\n    <div className=\"d-flex flex-row\">\n      <Sidebar title=\"Video BaseVisitation Calendar\"></Sidebar>\n      <Wrapper>\n        <Container>\n          <CalendarView visitations={visitations} />\n        </Container>\n      </Wrapper>\n    </div>\n  );\n};\n\nexport default connector(UnconnectedKioskCalendarContainer);\n","import React from \"react\";\nimport { CardType, CardSize } from \"src/utils/constants\";\nimport { Image } from \"react-bootstrap\";\nimport { genImageUri, genFullName } from \"src/utils/utils\";\nimport { format } from \"date-fns\";\n\ninterface Props {\n  type: CardType;\n  entity: Contact | Inmate;\n  size: CardSize;\n}\n\nconst UserSnippetCard: React.FC<Props> = ({ type, entity, size }) => {\n  const nameFontSize = size === CardSize.Medium ? \"p4\" : \"p3\";\n  const detailFontSize = size === CardSize.Medium ? \"p5\" : \"p4\";\n\n  const genSnippet = (): JSX.Element => {\n    switch (type) {\n      case CardType.Contact:\n        return (\n          <div className=\"d-flex flex-column\">\n            <span className={`${nameFontSize} text-truncate`}>\n              {genFullName(entity)}\n            </span>\n            {/* <span className={`${detailFontSize}`}>\n              {(entity as Contact).relationship}\n            </span> */}\n            <span className={`${detailFontSize}`}>\n              {/* {(entity as Contact).} */}\n            </span>\n          </div>\n        );\n      case CardType.Inmate:\n        return (\n          <div className=\"d-flex flex-column\">\n            <span className={`${nameFontSize} text-truncate`}>\n              {genFullName(entity)}\n            </span>\n            <span className={`${detailFontSize}`}>\n              {(entity as Inmate).inmateNumber}\n            </span>\n            {/* <span className={`${detailFontSize}`}>\n              {(entity as Inmate).nodes[0].name}\n            </span> */}\n          </div>\n        );\n      default:\n        return <div></div>;\n    }\n  };\n\n  return (\n    <div className=\"d-flex flex-row px-4 pt-1 align-items-center\">\n      <Image\n        rounded\n        className={`${size}-image mr-3`}\n        src={genImageUri(entity)}\n        roundedCircle\n      />\n      {genSnippet()}\n    </div>\n  );\n};\n\nexport default UserSnippetCard;\n","import React, { ReactElement } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport UserSnippetCard from \"src/components/cards/UserSnippetCard\";\nimport { CardType, CardSize } from \"src/utils/constants\";\nimport { Table, Tag, Space, Layout } from \"antd\";\nconst { Column } = Table;\nconst { Content } = Layout;\n\ninterface Props {\n  inmate: Inmate;\n  contact: Contact;\n  accept: (e: React.MouseEvent<HTMLDivElement>) => void;\n  decline: (e: React.MouseEvent<HTMLDivElement>) => void;\n}\n\nexport default function ConnectionRequestCard({\n  inmate,\n  contact,\n  accept,\n  decline,\n}: Props): ReactElement {\n  return (\n    <div>\n      <div className=\"d-flex flex-row w-100 justify-content-evenly my-5\">\n        <UserSnippetCard\n          type={CardType.Inmate}\n          entity={inmate}\n          size={CardSize.Large}\n        />\n        <UserSnippetCard\n          type={CardType.Contact}\n          entity={contact}\n          size={CardSize.Large}\n        />\n      </div>\n      <div className=\"d-flex flex-row my-5\">\n        <Button size=\"lg\" onClick={accept}>\n          Approve\n        </Button>\n        <Button size=\"lg\" variant=\"light\" className=\"ml-3\" onClick={decline}>\n          Decline\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport animationData from \"src/assets/lotties/VideoCam.json\";\nimport LottieSpinner from \"src/assets/lotties/LottieSpinner.json\";\n\nimport Lottie from \"react-lottie\";\nimport { LoadingTypes } from \"src/utils/constants\";\nimport { Spinner } from \"react-bootstrap\";\n\ninterface WithLoadingProps {\n  loading: boolean;\n  loadingType?: LoadingTypes;\n}\n\nexport const WithLoading = <P extends object>(\n  Component: React.ComponentType<P>\n): React.FC<P & WithLoadingProps> => ({\n  loading,\n  loadingType,\n  ...props\n}: WithLoadingProps) => {\n  let defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n\n  const genFeedback = (): JSX.Element => {\n    if (!loadingType) return <Spinner animation=\"border\" />;\n    switch (loadingType) {\n      case LoadingTypes.AcceptConnection:\n        // defaultOptions.animationData = CaringFamily;\n        const option = { ...defaultOptions, animationData: LottieSpinner };\n\n        return (\n          <div>\n            <Lottie options={option} width={200} height={200} />\n            <span>Creating the connection...</span>\n            <span>Notifying both parties that the request was accepted</span>\n          </div>\n        );\n      case LoadingTypes.FetchRecording:\n        return (\n          <div>\n            <Lottie options={defaultOptions} height={400} width={400} />\n            <span>\n              We're processing your request...it might take a minute or two.\n            </span>\n          </div>\n        );\n      default:\n        return <Spinner animation=\"border\" />;\n    }\n  };\n  return loading ? (\n    <div className=\"d-flex flex-column align-item-center justify-content-center text-center\">\n      {genFeedback()}\n    </div>\n  ) : (\n    <Component {...(props as P)} />\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { connect, ConnectedProps, useSelector } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport { RootState } from \"src/redux\";\nimport Sidebar from \"src/components/containers/Sidebar\";\nimport Wrapper from \"src/components/containers/Wrapper\";\nimport {\n  acceptConnectionRequest,\n  declineConnectionRequest,\n  selectConnectionRequest,\n} from \"src/redux/modules/connection_requests\";\nimport SidebarCard from \"src/components/cards/SidebarCard\";\nimport { CardType, LoadingTypes, PADDING } from \"src/utils/constants\";\nimport ConnectionRequestCard from \"./ConnectionRequestCard\";\nimport { WithLoading } from \"src/components/hocs/WithLoadingProps\";\nimport Container from \"src/components/containers/Container\";\nimport { getConnectionRequests } from \"src/api/Connection\";\nimport { selectInmateById, getAllConnectionsInfo } from \"src/redux/selectors\";\nimport { Table, Tag, Space, Layout, Avatar, Button } from \"antd\";\nimport { format } from \"date-fns\";\nimport { genFullName } from \"src/utils/utils\";\n\nconst { Column } = Table;\nconst { Content } = Layout;\n\nconst mapStateToProps = (state: RootState) => ({\n  requests: getAllConnectionsInfo(state, state.requests.requests),\n  // selected: state.requests.selectedRequest,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      acceptConnectionRequest,\n      declineConnectionRequest,\n      selectConnectionRequest,\n    },\n    dispatch\n  );\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst ConnectionRequestWithLoading = WithLoading(ConnectionRequestCard);\n\nconst ConnectionRequestsContainer: React.FC<PropsFromRedux> = ({\n  requests,\n  // selected,\n  acceptConnectionRequest,\n  declineConnectionRequest,\n  selectConnectionRequest,\n}) => {\n  //TODO replace this with appropriate Redux Logic\n\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const handleAccept = (request: BaseConnection): void => {\n    acceptConnectionRequest(request);\n    setLoading(true);\n    setTimeout(function () {\n      setLoading(false);\n    }, 3000);\n  };\n\n  const handleDecline = (request: BaseConnection): void => {\n    declineConnectionRequest(request);\n  };\n\n  useEffect(() => {\n    //TODO, replace this with loading logic\n    getConnectionRequests();\n  }, []);\n\n  return (\n    <Content style={{ padding: PADDING }}>\n      <Table dataSource={requests}>\n        <Column\n          title=\"\"\n          dataIndex=\"inmate\"\n          key=\"inmateProfilePic\"\n          render={(inmate: Inmate) => (\n            <>\n              {\n                <Avatar\n                  src={inmate.profileImgPath}\n                  shape=\"circle\"\n                  size={{ xs: 24, sm: 32, md: 40, lg: 64, xl: 80, xxl: 100 }}\n                />\n              }\n            </>\n          )}\n        />\n        <Column\n          title=\"Inmate\"\n          dataIndex=\"inmate\"\n          key=\"inmateProfilePic\"\n          render={(inmate: Inmate) => (\n            <>\n              <Space direction=\"vertical\">\n                <span>{genFullName(inmate)}</span>\n                <span>{inmate.inmateNumber}</span>\n                {/* <span>{format(new Date(inmate.dob), \"DD/mm/yy\")}</span> */}\n                <span>{inmate.location}</span>\n              </Space>\n            </>\n          )}\n        />\n        <Column\n          title=\"\"\n          dataIndex=\"contact\"\n          key=\"contactProfilePic\"\n          render={(contact: Contact) => (\n            <>\n              <Avatar\n                src={contact.profileImgPath}\n                shape=\"circle\"\n                size={{ xs: 24, sm: 32, md: 40, lg: 64, xl: 80, xxl: 100 }}\n              />\n            </>\n          )}\n        />\n        <Column\n          title=\"Contact\"\n          dataIndex=\"contact\"\n          key=\"contactInfo\"\n          render={(contact: Contact) => (\n            <>\n              <Space direction=\"vertical\">\n                <span>{genFullName(contact)}</span>\n                <span>Visitor ID: {contact.id}</span>\n                <span>{contact.relationship}</span>\n              </Space>\n            </>\n          )}\n        />\n        <Column\n          title=\"\"\n          key=\"actions\"\n          render={(_text, request: Connection) => (\n            <Space>\n              <Button type=\"primary\" onClick={() => handleAccept(request)}>\n                Accept\n              </Button>\n              <Button danger onClick={() => handleDecline(request)}>\n                Reject\n              </Button>\n            </Space>\n          )}\n        />\n      </Table>\n      {/* <Wrapper>\n        {requests.map((request) => (\n          <ConnectionRequestWithLoading\n            accept={() => handleAccept(request)}\n            decline={() => handleDecline(request)}\n            contact={request.contact}\n            inmate={request.inmate}\n            loading={loading}\n            loadingType={LoadingTypes.AcceptConnection}\n          />\n        ))}\n      </Wrapper> */}\n    </Content>\n  );\n};\n\nexport default connector(ConnectionRequestsContainer);\n","import React, { ReactElement } from \"react\";\nimport { Video } from \"react-feather\";\nimport { format } from \"date-fns\";\nimport { calculateDurationMS } from \"src/utils/utils\";\n\ninterface Props {\n  kioskId: number;\n  endTime: number;\n  startTime: number;\n  currentTime: number;\n}\n\nexport default function VisitationCardHeader({\n  kioskId,\n  endTime,\n  startTime,\n  currentTime,\n}: Props): ReactElement {\n  return (\n    <div className=\"d-flex flex-row justify-content-between\">\n      <span className=\"p2 font-weight-bold\">Kiosk #{kioskId}</span>\n      <div className=\"d-flex flex-row\">\n        <div className=\"d-flex align-items-center\">\n          <Video className=\"black-500\" />\n          <span className=\"ml-1 black-500\">Video Call</span>\n        </div>\n        <div className=\"d-flex ml-3 align-items-center\">\n          <span className=\"circle red\" />\n          <span className=\"ml-1 black-500\">\n            {calculateDurationMS(new Date(currentTime), new Date(endTime))}\n          </span>\n        </div>\n        <div className=\"d-flex flex-row ml-3 align-items-center\">\n          <span className=\"black-500\">Start Time:</span>\n          <span className=\"ml-1 black-500\">\n            {format(new Date(startTime), \"h:mm\")}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport VideoChat from \"src/pages/LiveVisitation/VideoChat\";\nimport { genFullName } from \"src/utils/utils\";\nimport VisitationCardHeader from \"../headers/VisitationCardHeader\";\nimport { CardType } from \"src/utils/constants\";\nimport VideRecordingCard from \"./VideRecordingCard\";\nimport { Button } from \"react-bootstrap\";\n\ninterface Props {\n  visitation: LiveVisitation | RecordedVisitation;\n  type: CardType;\n  actionLabel: string;\n  handleClick: () => void; // TODO: enforce this\n  socket: SocketIOClient.Socket;\n}\n\nconst VisitationCard: React.FC<Props> = ({\n  visitation,\n  type,\n  actionLabel,\n  handleClick,\n  socket,\n}) => {\n  const {\n    id: callId,\n    startTime,\n    kiosk: { id: kioskId },\n    scheduledEndTime,\n    connection,\n  } = visitation;\n  const { inmate, contact } = connection;\n  const [now, setNow] = useState<Date>(new Date());\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setNow(new Date());\n    }, 1000);\n    return () => clearTimeout(timer);\n  });\n\n  const genMainComponent = (): JSX.Element => {\n    switch (type) {\n      // case CardType.LiveVisitation:\n      //   return <VideoChat callId={callId} socket={socket} />;\n      default:\n        return <div />;\n    }\n  };\n\n  return (\n    <div>\n      <VisitationCardHeader\n        startTime={startTime}\n        endTime={\n          type === CardType.LiveVisitation\n            ? scheduledEndTime\n            : (visitation as RecordedVisitation).endTime\n        }\n        kioskId={kioskId}\n        currentTime={\n          type === CardType.LiveVisitation\n            ? now.getTime()\n            : (visitation as RecordedVisitation).endTime\n        }\n      />\n      {genMainComponent()}\n      {/* <div className=\"d-flex flex-row justify-content-between w-100 mt-3\">\n        <div className=\"d-flex flex-row mt-3\">\n          <span className=\"p3\">{genFullName(inmate)}</span>\n          <span className=\"p3 black-400\">&nbsp;{actionLabel}&nbsp;</span>\n          <span className=\"p3\">{genFullName(contact)}</span>\n        </div>\n        {type === CardType.LiveVisitation && (\n          <Button variant=\"danger\" onClick={(e) => handleClick()}>\n            End Call\n          </Button>\n        )}\n      </div> */}\n    </div>\n  );\n};\n\nexport default VisitationCard;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { ReactElement, useState } from \"react\";\n// import { Dropdown, DropdownButton, Form, FormControl } from 'react-bootstrap'\nimport { Menu, Dropdown } from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\";\nimport { DatePicker, Space } from \"antd\";\n\nconst { RangePicker } = DatePicker;\n\ninterface Props {\n  setStartDate: (date: number) => void;\n  setEndDate: (date: number) => void;\n  setDuration: (maxDuration: number) => void;\n}\n\nexport default function CallFiltersHeader({\n  setDuration,\n  setStartDate,\n  setEndDate,\n}: Props): ReactElement {\n  const DURATION_FILTERS = [Infinity, 3, 5, 10, 15, 20];\n\n  const DurationFilters = (\n    <Menu>\n      {DURATION_FILTERS.map((duration) => (\n        <Menu.Item key={duration} onClick={() => setDuration(duration)}>\n          {\"<\"}\n          {duration}\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  return (\n    <Space align=\"center\">\n      <RangePicker\n        onChange={(date) => {\n          if (!date) return;\n          if (date[0]) setStartDate(date[0].unix() * 1000);\n          if (date[1]) setEndDate(date[1].unix() * 1000);\n        }}\n      />\n      <Dropdown overlay={DurationFilters} trigger={[\"click\"]}>\n        <a className=\"ant-dropdown-link\" onClick={(e) => e.preventDefault()}>\n          Call Duration <DownOutlined />\n        </a>\n      </Dropdown>\n    </Space>\n  );\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { RootState } from \"src/redux\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport Sidebar from \"src/components/containers/Sidebar\";\nimport Wrapper from \"src/components/containers/Wrapper\";\nimport Container from \"src/components/containers/Container\";\nimport {\n  selectPastVisitation,\n  fetchVideoRecording,\n} from \"src/redux/modules/visitation\";\nimport SidebarCard from \"src/components/cards/SidebarCard\";\nimport { CardType, LoadingTypes, PADDING } from \"src/utils/constants\";\nimport { genFullName } from \"src/utils/utils\";\nimport VisitationCard from \"src/components/cards/VisitationCard\";\nimport { WithLoading } from \"src/components/hocs/WithLoadingProps\";\nimport { getAllVisitationsInfo, selectAllCalls } from \"src/redux/selectors\";\nimport { isCatchClause } from \"typescript\";\nimport { format, getDate, getTime } from \"date-fns\";\nimport { fetchCalls } from \"src/redux/modules/call\";\nimport CallFiltersHeader from \"./CallFilters\";\nimport _ from \"lodash\";\nimport { Table, Tag, Space, Layout, Button } from \"antd\";\nimport { DownloadOutlined, TeamOutlined } from \"@ant-design/icons\";\nimport Search from \"antd/lib/input/Search\";\nimport { push } from \"connected-react-router\";\n\nconst { Column } = Table;\nconst { Content } = Layout;\n\nconst mapStateToProps = (state: RootState) => ({\n  logs: getAllVisitationsInfo(state, selectAllCalls(state)).filter(\n    (x) => x.startTime && x.endTime\n  ) as RecordedVisitation[],\n  selected: state.visitations.selectedPastVisitation,\n  history: state.router,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators({ fetchCalls, selectPastVisitation, push }, dispatch);\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst VisitationCardWithLoading = WithLoading(VisitationCard);\n\nconst LogsContainer: React.FC<PropsFromRedux> = ({\n  logs,\n  selected,\n  selectPastVisitation,\n  fetchCalls,\n  push,\n}) => {\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n  const [global, setGlobal] = useState<string>(\"\");\n  const [limit] = useState(100);\n  const [offset, setOffset] = useState(0);\n  const [startDate, setStartDate] = useState<number>();\n  const [endDate, setEndDate] = useState<number>();\n  const [maxDuration, setMaxDuration] = useState<number>();\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const debounceUpdate = useCallback(\n    _.debounce(() => setGlobal(searchQuery), 1000),\n    [searchQuery]\n  );\n\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(e.target.value);\n    debounceUpdate();\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    (async () =>\n      fetchCalls({\n        query: global,\n        startDate,\n        endDate,\n        minDuration: 0,\n        maxDuration,\n        limit,\n        offset,\n      }))();\n    setLoading(false);\n  }, [fetchCalls, limit, offset, startDate, endDate, maxDuration, global]);\n\n  return (\n    <Content style={{ padding: PADDING }}>\n      <Space direction=\"vertical\" style={{ width: \"100% \" }}>\n        <Search\n          placeholder=\"Search by Name, Inmate ID, Facility, Pod ID, ...\"\n          allowClear\n          value={searchQuery}\n          onChange={handleSearchChange}\n          onSearch={(value) => {\n            setSearchQuery(value);\n          }}\n        />\n        <CallFiltersHeader\n          setStartDate={setStartDate}\n          setEndDate={setEndDate}\n          setDuration={setMaxDuration}\n        />\n\n        <Table dataSource={logs} loading={loading}>\n          <Column\n            title=\"Date\"\n            dataIndex=\"startTime\"\n            key=\"date\"\n            render={(time) => (\n              <>\n                <span>{format(time, \"MM/dd/yy\")}</span>\n              </>\n            )}\n          />\n          <Column\n            title=\"Start Time\"\n            dataIndex=\"startTime\"\n            key=\"startTime\"\n            render={(time) => (\n              <>\n                <span>{format(time, \"HH:mm\")}</span>\n              </>\n            )}\n          />\n          <Column\n            title=\"End Time\"\n            dataIndex=\"endTime\"\n            key=\"endTime\"\n            render={(time) => (\n              <>\n                <span>{format(time, \"HH:mm\")}</span>\n              </>\n            )}\n          />\n          <Column\n            title=\"Inmate Name\"\n            dataIndex=\"connection\"\n            key=\"connection\"\n            render={(connection: Connection) => (\n              <>\n                <span>{genFullName(connection.inmate)}</span>\n              </>\n            )}\n          />\n          <Column\n            title=\"Inmate ID\"\n            dataIndex=\"connection\"\n            key=\"inmateId\"\n            render={(connection: Connection) => (\n              <>\n                <span>{connection.inmate.inmateNumber}</span>\n              </>\n            )}\n          />\n          <Column\n            title=\"Contact Name\"\n            dataIndex=\"connection\"\n            key=\"contactName\"\n            render={(connection: Connection) => (\n              <>\n                <span>{genFullName(connection.contact)}</span>\n              </>\n            )}\n          />\n          {/* Change this */}\n          <Column\n            title=\"Location\"\n            dataIndex=\"connection\"\n            key=\"location\"\n            render={(connection: Connection) => (\n              <>\n                <span>{connection.inmate.location}</span>\n              </>\n            )}\n          />\n\n          <Column\n            title=\"Recording\"\n            key=\"action\"\n            render={(_text, visitation: RecordedVisitation) => (\n              <Space size=\"middle\">\n                <Button onClick={() => push(`/call/${visitation.id}`)}>\n                  View\n                </Button>\n              </Space>\n            )}\n          />\n        </Table>\n      </Space>\n      {/* <Container>\n        <Table responsive>\n          <thead>\n            <tr>\n              <th></th>\n              <th>Date</th>\n              <th>Start Time</th>\n              <th>End Time</th>\n              <th>Inmate Name</th>\n              <th>Inmate ID</th>\n              <th>Visitor Name</th>\n              <th>Visitor ID</th>\n              <th>Facility</th>\n            </tr>\n          </thead>\n          <tbody>{logs.map(renderItem)}</tbody>\n        </Table>\n      </Container> */}\n    </Content>\n  );\n};\n\nexport default connector(LogsContainer);\n","import React, { ReactElement } from \"react\";\nimport { Form, Input, Button, Select, Switch } from \"antd\";\nimport { UserOutlined, SendOutlined } from \"@ant-design/icons\";\nimport { STAFF_PERMISSION_OPTIONS } from \"src/utils/constants\";\n\nconst { Option } = Select;\n\nexport interface StaffFormFields {\n  email: string;\n  role: string;\n  permissions: Permission[];\n}\ninterface Props {\n  // onFinish: () => void;\n  data: StaffFormFields;\n  onChange: (data: StaffFormFields) => void;\n}\n\nexport default function CreateStaffForm({\n  data,\n  onChange,\n}: Props): ReactElement {\n  const [form] = Form.useForm();\n\n  return (\n    <Form form={form} name=\"control-hooks\">\n      <Form.Item\n        name=\"email\"\n        label=\"Email\"\n        rules={[{ type: \"email\", required: true }]}\n      >\n        <Input\n          placeholder=\"Email\"\n          prefix={<SendOutlined className=\"site-form-item-icon\" />}\n          value={data.email}\n          onChange={(event) => onChange({ ...data, email: event.target.value })}\n        />\n      </Form.Item>\n      <Form.Item name=\"gender\" label=\"Role\" rules={[{ required: true }]}>\n        <Select\n          placeholder=\"Select a role\"\n          value={data.role}\n          onChange={(value) => onChange({ ...data, role: value })}\n          allowClear\n        >\n          <Option value=\"operator\">Operator</Option>\n          <Option value=\"investigator\">Investigator</Option>\n          <Option value=\"warden\">Warden</Option>\n          <Option value=\"admin\">Admin</Option>\n        </Select>\n      </Form.Item>\n      <Form.Item>\n        {/* TODO create coomponent for the switches */}\n        {Object.keys(STAFF_PERMISSION_OPTIONS).map((key) => (\n          <div>\n            <span>{STAFF_PERMISSION_OPTIONS[key as Permission]}</span>\n            <Switch\n              defaultChecked={false}\n              checked={data.permissions.includes(key as Permission)}\n              onChange={(checked) => {\n                if (checked)\n                  onChange({\n                    ...data,\n                    permissions: [...data.permissions, key as Permission],\n                  });\n                else\n                  onChange({\n                    ...data,\n                    permissions: data.permissions.filter(\n                      (permission) => permission !== key\n                    ),\n                  });\n              }}\n            />\n          </div>\n        ))}\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { RootState } from \"src/redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport { loadStaff, updateStaff } from \"src/redux/modules/staff\";\nimport Wrapper from \"src/components/containers/Wrapper\";\nimport SidebarCard from \"src/components/cards/SidebarCard\";\nimport {\n  CardType,\n  PADDING,\n  STAFF_PERMISSION_OPTIONS,\n} from \"src/utils/constants\";\nimport Sidebar from \"src/components/containers/Sidebar\";\nimport Container from \"src/components/containers/Container\";\nimport UserDetailsCard from \"src/components/cards/UserDetailsCard\";\nimport { Table, Tag, Space, Layout, Avatar, Divider } from \"antd\";\nimport { selectAllStaff } from \"src/redux/selectors\";\nimport { Image } from \"antd\";\nimport { Modal, Button } from \"antd\";\nimport { Switch } from \"antd\";\nimport { SwitchChangeEventHandler } from \"antd/lib/switch\";\nimport { cloneObject, genFullName, mapPermissionMap } from \"src/utils/utils\";\nimport CreateStaffForm, { StaffFormFields } from \"./CreateStaffForm\";\n\nconst { Column } = Table;\nconst { Content } = Layout;\n\nconst mapStateToProps = (state: RootState) => ({\n  staff: selectAllStaff(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators({ loadStaff, updateStaff }, dispatch);\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst StaffContainer: React.FC<PropsFromRedux> = ({\n  staff,\n  updateStaff,\n  loadStaff,\n}) => {\n  const [modalType, setModalType] = useState<\"create\" | \"edit\" | null>(null);\n  const [selected, setSelected] = useState<Staff>();\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [formData, setFormData] = useState<StaffFormFields>({\n    email: \"\",\n    role: \"\",\n    permissions: [],\n  });\n  const [selectedPermissions, setSelectedPermissions] = useState<\n    Record<Permission, boolean>\n  >({\n    allowRead: false,\n    allowCalltimes: false,\n    allowApproval: false,\n    allowRestructure: false,\n    allowMonitor: false,\n  });\n\n  // create d\n  const showModal = (record: Staff) => {\n    setSelected(record);\n  };\n\n  const handleOk = () => {\n    setConfirmLoading(true);\n    switch (modalType) {\n      case \"edit\":\n        if (selected)\n          updateStaff({\n            userId: selected.id,\n            permissions: Object.keys(selectedPermissions).filter(\n              (key) => selectedPermissions[key as Permission]\n            ) as Permission[],\n          });\n        break;\n      case \"create\":\n        // do somethin\n        break;\n    }\n\n    setConfirmLoading(false);\n  };\n\n  useEffect(() => {\n    loadStaff();\n  }, [loadStaff]);\n\n  useEffect(() => {\n    if (selected)\n      setSelectedPermissions(mapPermissionMap(selected.permissions));\n  }, [selected]);\n\n  return (\n    <Content style={{ padding: PADDING }}>\n      {/* <Space align=\"end\" direction=\"vertical\" style={{ flex: 1 }}> */}\n      <Button type=\"primary\" onClick={() => setModalType(\"create\")}>\n        Add\n      </Button>\n      <Divider />\n\n      <Table dataSource={staff}>\n        <Column\n          title=\"\"\n          dataIndex=\"profileImgPath\"\n          key=\"profileImgPath\"\n          render={(img) => (\n            <>\n              <Avatar src={img} size=\"large\" />\n            </>\n          )}\n        />\n        <Column title=\"First Name\" dataIndex=\"firstName\" key=\"firstName\" />\n        <Column title=\"Last Name\" dataIndex=\"lastName\" key=\"lastName\" />\n        <Column\n          title=\"Role\"\n          dataIndex=\"role\"\n          key=\"role\"\n          render={(role) => (\n            <>\n              <Tag color=\"blue\" key={role}>\n                {role || \"Operator\"}\n              </Tag>\n            </>\n          )}\n        />\n        <Column\n          title=\"\"\n          key=\"edit\"\n          render={(_text, record: Staff) => (\n            <Button\n              onClick={() => {\n                setSelected(record);\n                setModalType(\"edit\");\n              }}\n            >\n              Edit\n            </Button>\n          )}\n        />\n      </Table>\n      {/* </Space> */}\n      <Modal\n        title=\"Add Staff\"\n        visible={modalType === \"create\"}\n        onOk={handleOk}\n        confirmLoading={confirmLoading}\n        onCancel={() => setModalType(null)}\n      >\n        <CreateStaffForm data={formData} onChange={setFormData} />\n      </Modal>\n      <Modal\n        title=\"Edit Staff\"\n        visible={modalType === \"edit\"}\n        onOk={handleOk}\n        confirmLoading={confirmLoading}\n        onCancel={() => setModalType(null)}\n      >\n        {selected && (\n          <div className=\"d-flex flex-column\">\n            <span>{genFullName(selected)}</span>\n            <span>{selected.role}</span>\n            <span>{selected.email}</span>\n            {Object.keys(STAFF_PERMISSION_OPTIONS).map((key) => (\n              <div>\n                <span>{STAFF_PERMISSION_OPTIONS[key as Permission]}</span>\n                <Switch\n                  defaultChecked={selected.permissions.includes(\n                    key as Permission\n                  )}\n                  checked={selectedPermissions[key as Permission]}\n                  onChange={(checked) => {\n                    const update = cloneObject(selectedPermissions) as Record<\n                      Permission,\n                      boolean\n                    >;\n                    update[key as Permission] = checked;\n                    setSelectedPermissions(update);\n                  }}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </Modal>\n    </Content>\n  );\n};\n\nexport default connector(StaffContainer);\n","import React from \"react\";\nimport { genImageUri, genFullName } from \"src/utils/utils\";\nimport { Image } from \"react-bootstrap\";\nimport \"./ConnectionCard.css\";\n\ninterface Props {\n  inmate: Inmate;\n  contact: Contact;\n  kioskId?: number;\n  fontColor?: string;\n  actionLabel: string;\n  border?: boolean;\n}\n\nconst ConnectionCard: React.FC<Props> = ({\n  inmate,\n  contact,\n  kioskId,\n  fontColor,\n  actionLabel,\n  border,\n}) => {\n  const color = fontColor ? fontColor : \"black-500\";\n  const decoration = border\n    ? \"border p-2 rounded mr-3 mt-3 connection-card-standalone\"\n    : \"\";\n  return (\n    <div className={`d-flex flex-row ${decoration}`}>\n      <div className=\"d-flex flex-column align-items-center\">\n        {kioskId && <span className=\"font-weight-bold\">Kiosk {kioskId}</span>}\n        <div className=\"facepile-container\">\n          <Image\n            className=\"small-image facepile-image p4\"\n            src={genImageUri(inmate)}\n            roundedCircle\n          />\n          <Image\n            className=\"small-image facepile-image p4\"\n            src={genImageUri(contact)}\n            roundedCircle\n          />\n        </div>\n      </div>\n      <div className=\"ml-4 d-flex flex-column\">\n        <span className={`${color}`}>{genFullName(inmate)}</span>\n        <div className=\"d-flex flex-row justify-content-between\">\n          <span className=\"p6 text-truncate\">\n            {actionLabel}{\" \"}\n            <span className={` p6 ${color}`}>{genFullName(contact)}</span>\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConnectionCard;\n","import React, { ReactElement } from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport { genFullName } from \"src/utils/utils\";\nimport { CardType } from \"src/utils/constants\";\n\ninterface Props {\n  type: CardType;\n  user: Staff | Inmate | Contact;\n  fontColor: string;\n}\n\nexport default function UserCard({\n  user,\n  fontColor,\n  type,\n}: Props): ReactElement {\n  console.log(user);\n  const genDetails = (): JSX.Element => {\n    switch (type) {\n      case CardType.Inmate:\n        const inmate = user as Inmate;\n        return <span className=\"p6 \">{inmate.inmateNumber}</span>;\n      case CardType.Contact:\n        const contact = user as Contact;\n        return <span className=\"p6 \">{contact.relationship}</span>;\n      default:\n        return <div></div>;\n    }\n  };\n  return (\n    <div className=\"d-flex flex-row\">\n      <Image src={user.profileImgPath} roundedCircle className=\"small-image\" />\n      <div className=\"d-flex flex-column ml-3\">\n        <span className={fontColor}>{genFullName(user)}</span>\n        {genDetails()}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { CardType } from \"src/utils/constants\";\nimport ConnectionCard from \"./ConnectionCard\";\nimport UserCard from \"./UserCard\";\n\ninterface Props {\n  type: CardType;\n  entity: LiveVisitation | BaseConnection | Staff | Inmate;\n  handleClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  isActive: boolean;\n}\n\nconst SidebarCard: React.FC<Props> = ({\n  type,\n  entity,\n  handleClick,\n  isActive,\n}) => {\n  const activeBorder = isActive ? \"left-sidebar-card-active\" : \"\";\n  const fontColor = isActive ? \"primary\" : \"black-500\";\n\n  const genCard = (): JSX.Element => {\n    switch (type) {\n      case CardType.LiveVisitation:\n        const { connection, id } = entity as LiveVisitation;\n        return (\n          <ConnectionCard\n            inmate={connection.inmate}\n            contact={connection.contact}\n            kioskId={id}\n            fontColor={fontColor}\n            actionLabel=\"Calling\"\n          />\n        );\n      case CardType.ConnectionRequest:\n        const connectionRequest = entity as Connection;\n        return (\n          <ConnectionCard\n            inmate={connectionRequest.inmate}\n            contact={connectionRequest.contact}\n            fontColor={fontColor}\n            actionLabel=\"Requests\"\n          />\n        );\n      case CardType.PastVisitation:\n        const record = entity as RecordedVisitation;\n        return (\n          <ConnectionCard\n            inmate={record.connection.inmate}\n            contact={record.connection.contact}\n            fontColor={fontColor}\n            actionLabel=\"Called\"\n          />\n        );\n      case CardType.Staff:\n        const member = entity as Staff;\n        return (\n          <UserCard user={member} fontColor={fontColor} type={CardType.Staff} />\n        );\n      case CardType.Inmate:\n        const inmate = entity as Inmate;\n        return (\n          <UserCard\n            user={inmate}\n            fontColor={fontColor}\n            type={CardType.Inmate}\n          />\n        );\n\n      default:\n        return <div></div>;\n    }\n  };\n  return (\n    <div\n      className={`pr-3 py-4 left-sidebar-card border-bottom ${activeBorder}`}\n      onClick={handleClick}\n    >\n      {genCard()}\n    </div>\n  );\n};\n\nexport default SidebarCard;\n","import React, { useEffect, useState } from \"react\";\nimport { connect, ConnectedProps, useSelector } from \"react-redux\";\nimport { RootState } from \"src/redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\n// import {  selectInmate } from \"src/redux/modules/inmate\";\nimport UserDetailsCard from \"src/components/cards/UserDetailsCard\";\nimport { CardType } from \"src/utils/constants\";\nimport Container from \"src/components/containers/Container\";\nimport Wrapper from \"src/components/containers/Wrapper\";\nimport Sidebar from \"src/components/containers/Sidebar\";\nimport SidebarCard from \"src/components/cards/SidebarCard\";\nimport UserCard from \"src/components/cards/UserCard\";\nimport ConnectionCard from \"src/components/cards/ConnectionCard\";\nimport { selectAllInmates } from \"src/redux/selectors\";\n\n// const mapStateToProps = (state: RootState) => ({\n//   inmates: state.inmates.inmates,\n//   selected: state.inmates.selectedInmate,\n//   selectedConnections: state.connections.connections.filter(\n//     (connection) => connection.inmateId === state.inmates.selectedInmate?.id\n//   ),\n// });\n\n// const mapDispatchToProps = (dispatch: Dispatch) =>\n//   bindActionCreators({ selectInmate }, dispatch);\n\n// const connector = connect(mapStateToProps, mapDispatchToProps);\n// type PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst InmateContainer: React.FC = (\n  {\n    // selectInmate,\n    // inmates,\n    // selected,\n    // selectedConnections,\n  }\n) => {\n  // const [recordedVisitations, setRecordedVisitations] = useState<\n  //   RecordedVisitation[]\n  // >([]);\n\n  const inmates = useSelector(selectAllInmates);\n  /*\n  useEffect(() => {\n    //TODO must change this with loading logic\n    if (!inmates.length) loadConnections();\n    if (!inmates.length) loadInmates();\n    const result = selectedConnections\n      .map((connection) => connection.recordedVisitations)\n      .reduce((accumulator, value) => accumulator.concat(value), []);\n    setRecordedVisitations(result);\n  }, [inmates, selectedConnections, loadConnections, loadInmates]);\n  */\n\n  return (\n    <div className=\"d-flex flex-row\">\n      <Sidebar title=\"Members\">\n        {inmates.map((inmate) => (\n          <SidebarCard\n            key={inmate.id}\n            type={CardType.Inmate}\n            entity={inmate}\n            isActive={false}\n            handleClick={(e) => console.log(\"clicked\")}\n            // isActive={inmate.id === selected?.id}\n            // handleClick={(e) => selectInmate(inmate)}\n          />\n        ))}\n      </Sidebar>\n      {/* {true && (\n        <Wrapper horizontal>\n          <Container fluid>\n            <div className=\"d-flex flex-column\">\n              <span className=\"font-weight-bold p3\">Activity</span>\n              <span className=\"black-400\">Past Calls</span>\n            </div>\n            <div className=\"d-flex flex-row flex-wrap mw-75 w-75\">\n              {recordedVisitations.map((visitation) => (\n                <ConnectionCard\n                  kioskId={visitation.kiosk.id}\n                  key={visitation.id}\n                  inmate={visitation.connection.inmate}\n                  contact={visitation.connection.contact}\n                  actionLabel=\"Called\"\n                  border\n                />\n              ))}\n            </div>\n          </Container>\n          <Container>\n            <div className=\"d-flex flex-column\">\n              <UserDetailsCard type={CardType.Inmate} user={selected} />\n              <UserDetailsCard type={CardType.Inmate} user={inmates[0]} />\n\n              <span className=\"black-500 mt-3\">\n                Connections ({connections.length})\n              </span>\n              {connections.map((connection) => (\n                <div\n                  key={connection.id}\n                  className=\"d-flex flex-column border-bottom py-3\"\n                >\n                  <UserCard\n                    user={connection.contact}\n                    fontColor=\"black-500\"\n                    type={CardType.Contact}\n                  />\n                  TODO add the connection background here\n                </div>\n              ))}\n            </div>\n          </Container>\n        </Wrapper>\n      )} */}\n    </div>\n  );\n};\n\nexport default InmateContainer;\n","import React, { ReactElement } from \"react\";\nimport \"./MetricCard.css\";\nimport { ArrowUpRight, ArrowDownRight } from \"react-feather\";\n\ninterface Props {\n  name: string;\n  metric: number;\n  label?: string;\n  growthRate?: number;\n}\n\nexport default function MetricCard({\n  label,\n  metric,\n  name,\n  growthRate,\n}: Props): ReactElement {\n  const growthColor = growthRate && growthRate > 0 ? \"green\" : \"red\";\n  const bgColor = growthRate && growthRate > 0 ? \"lightgreen\" : \"lightred\";\n  const growthIcon: JSX.Element =\n    growthRate && growthRate > 0 ? (\n      <ArrowUpRight className={growthColor} size={20} />\n    ) : (\n      <ArrowDownRight className={growthColor} size={20} />\n    );\n\n  return (\n    <div className=\"d-flex flex-row metric-card align-items-center\">\n      <div className=\"d-flex flex-column\">\n        <span className=\"black-400 p4\">{name}</span>\n        <div className=\"d-flex flex-row align-items-center\">\n          <span className=\"p1 font-weight-bold\">{metric}</span>\n          <span className=\"ml-2\">{label}</span>\n        </div>\n        {growthRate && (\n          <div className=\"d-flex flex-row align-items-center\">\n            <div className={`${bgColor}-bg span-circle `}>{growthIcon}</div>\n            <span className={`${growthColor} ml--3`}>\n              {(growthRate * 100).toFixed(2)}%\n            </span>\n          </div>\n        )}\n      </div>\n      {/* <div className=\"span-circle-large lightgreen-bg green flex-shrink-0\">\n        <Clock size=\"24\" />{\" \"}\n      </div> */}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst COLOR = \"rgba(0, 137, 255, 1)\";\nconst BG = \"rgba(0, 137, 255, 0.4)\";\nconst DARKER_COLOR = \"rgba(2, 117, 216, 1)\";\n\ninterface Props {}\n\nconst LineChart: React.FC<Props> = () => {\n  const data = {\n    labels: [\"July 6\", \"July 13\", \"July 20\", \"July 27\", \"Aug 3\", \"Aug 10\"],\n    datasets: [\n      {\n        label: \"# of Visitations\",\n        lineTension: 0.1,\n        backgroundColor: BG,\n        borderColor: COLOR,\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: COLOR,\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 5,\n        pointHoverRadius: 8,\n        pointHoverBackgroundColor: COLOR,\n        pointHoverBorderColor: DARKER_COLOR,\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: [34, 59, 44, 72, 80, 90, 40],\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <span className=\"p3 font-weight-bold\">Visitations</span>\n      <Line data={data} />\n    </div>\n  );\n};\n\nexport default LineChart;\n","import React, { ReactElement } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nexport default function BarChart(): ReactElement {\n  const data = {\n    labels: [\"Extremely Poor\", \"Poor\", \"Okay\", \"Good\", \"Really Good\"],\n    datasets: [\n      {\n        data: [10, 30, 50, 100, 200],\n        backgroundColor: [\n          \"#eef6ff\",\n          \"#9ac1ec\",\n          \"#70a9e9\",\n          \"#0275D8\",\n          \"#004886\",\n        ],\n        hoverBackgroundColor: [\n          \"#eef6ff\",\n          \"#9ac1ec\",\n          \"#70a9e9\",\n          \"#0275D8\",\n          \"#004886\",\n        ],\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <span className=\"p3 font-weight-bold\">User Ratings Breakdown</span>\n      <Doughnut data={data} />\n    </div>\n  );\n}\n","import { addMilliseconds, getDay, getHours, getMinutes } from \"date-fns\";\nimport { CallBlock, Weekday, WeeklySchedule } from \"src/typings/Call\";\nimport { NodeCallSlot } from \"src/typings/Node\";\nimport { WeekdayMap, WEEKDAYS, DEFAULT_DURATION_MS } from \"./constants\";\nimport _ from \"lodash\";\n\nconst callSlotToDateString = (time: NodeCallSlot): string => {\n  const date = new Date();\n  date.setHours(time.start.hour);\n  date.setMinutes(time.start.minute);\n  return date.toString();\n};\n\nconst calcEndCallSlot = (time: NodeCallSlot): string => {\n  const date = new Date();\n  // TODO fix this\n  const offset = date.getDay() - time.start.day;\n  //     date.setDate(date.getDate() + offset);\n  //   date.setDate(time.start.day);\n  date.setHours(time.start.hour);\n  date.setMinutes(time.start.minute);\n  // const hi = addMilliseconds(date, duration);\n  return addMilliseconds(date, time.duration).toString();\n};\n\nexport const mapCallSlotsToTimeBlock = (\n  callTimes: NodeCallSlot[]\n): WeeklySchedule => {\n  console.log(\"calltimes\");\n  console.log(callTimes);\n  const groups = _.groupBy(callTimes, (time) => time.start.day);\n\n  console.log(groups);\n  const sorted: [WeekdayMap, NodeCallSlot[]][] = WEEKDAYS.map(\n    (weekday: WeekdayMap) => {\n      if (!(weekday in groups)) {\n        return [weekday, []];\n      }\n      return [\n        weekday,\n        groups[weekday].sort((ct1, ct2) => {\n          if (ct1.start.hour > ct2.start.hour) return 1;\n          if (ct1.start.hour < ct2.start.hour) return -1;\n\n          if (ct1.start.minute > ct2.start.minute) return 1;\n          if (ct1.start.minute < ct2.start.minute) return -1;\n          return 1;\n        }),\n      ];\n    }\n  );\n  console.log(\"sorted:\");\n  console.log(sorted);\n  let idx = 0;\n\n  const ranges: {\n    [key: number]: CallBlock[];\n  }[] = sorted.map(([weekday, times]) => {\n    // console.log(weekday);\n    // console.log(times);\n    if (!times.length) {\n      return { [weekday]: [] };\n    }\n    const timeRanges: CallBlock[] = [];\n    let curr: NodeCallSlot = times[0];\n    let first: NodeCallSlot = times[0];\n\n    // create intervals\n    for (const time of times.slice(1, times.length)) {\n      // if same time, just keep moving through the list e.g 11.00 --> 11.30\n      if (curr.start.hour === time.start.hour) curr = time;\n      else if (\n        time.start.hour === curr.start.hour + 1 &&\n        time.start.minute === 0\n      )\n        // e.g 11.30 --> 12.00\n        curr = time;\n      else {\n        // new time range\n        // TODO account for potential timezone differences?\n        timeRanges.push({\n          duration: DEFAULT_DURATION_MS,\n          start: callSlotToDateString(first),\n          end: calcEndCallSlot(curr),\n          idx,\n          day: first.start.day,\n        });\n        // reset\n        first = time;\n        curr = time;\n        idx += 1;\n      }\n    }\n    // create last range\n    timeRanges.push({\n      duration: DEFAULT_DURATION_MS,\n      start: callSlotToDateString(first),\n      end: calcEndCallSlot(curr),\n      idx,\n      day: first.start.day,\n    });\n\n    return { [weekday]: timeRanges };\n  });\n  console.log(\"output\");\n  console.log(ranges);\n  return Object.assign({}, ...ranges);\n};\n\nexport const mapCallBlockToCallSlots = (\n  ranges: WeeklySchedule\n): NodeCallSlot[] => {\n  const rangeList = WEEKDAYS.map((weekday) => ranges[weekday] || []).reduce(\n    (prev, curr) => prev.concat(curr),\n    []\n  );\n\n  console.log(rangeList);\n  const res = rangeList\n    .map((range) => {\n      let iterator = new Date(range.start);\n      const endTime = new Date(range.end);\n\n      if (iterator > endTime) throw new Error(\"Invalid time range\");\n\n      const callTimes: NodeCallSlot[] = [];\n\n      while (iterator < endTime) {\n        callTimes.push({\n          start: {\n            hour: getHours(iterator),\n            minute: getMinutes(iterator),\n            day: range.day,\n          },\n          duration: range.duration,\n        });\n        iterator = addMilliseconds(iterator, range.duration);\n        console.log(iterator);\n      }\n\n      return callTimes;\n    })\n    .reduce((prev, curr) => prev.concat(curr), []);\n  return res;\n};\n\nexport const dayOfWeekAsString = (dayIndex: WeekdayMap): string => {\n  return (\n    [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ][dayIndex] || \"\"\n  );\n};\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport { RootState } from \"src/redux\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { TimePicker, Layout, Row, Col, Space, Button, Divider } from \"antd\";\nimport { Header } from \"antd/lib/layout/layout\";\nimport { NodeCallSlot } from \"src/typings/Node\";\nimport {\n  PADDING,\n  WRAPPER_STYLE,\n  WeekdayMap,\n  WEEKDAYS,\n  DEFAULT_DURATION_MS,\n} from \"src/utils/constants\";\nimport moment from \"moment\";\nimport { CallBlock, WeeklySchedule } from \"src/typings/Call\";\nimport { Tabs } from \"antd\";\nimport {\n  dayOfWeekAsString,\n  mapCallSlotsToTimeBlock,\n  mapCallBlockToCallSlots,\n} from \"src/utils/Call\";\nimport { cloneObject } from \"src/utils/utils\";\nimport { updateCallTimes } from \"src/redux/modules/facility\";\nimport { format } from \"date-fns\";\n\nconst { TabPane } = Tabs;\nconst { RangePicker } = TimePicker;\nconst { Content } = Layout;\n\nconst mapStateToProps = (state: RootState) => ({\n  facility: state.facilities.selected,\n});\nconst mapDispatchToProps = { updateCallTimes };\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype Tab = \"setting\" | \"facility\";\n\nfunction SettingsContainer({\n  facility,\n  updateCallTimes,\n}: PropsFromRedux): ReactElement {\n  const [ranges, setRanges] = useState<WeeklySchedule>();\n  const [activeTab, setActiveTab] = useState<Tab>(\"setting\");\n  const [callSlots, setCallSlots] = useState<NodeCallSlot[]>([]);\n\n  useEffect(() => {\n    if (facility) {\n      setCallSlots(facility.callTimes);\n      setRanges(mapCallSlotsToTimeBlock(facility.callTimes));\n    }\n  }, [facility]);\n\n  if (!facility || !ranges) return <div />;\n\n  const dateFormat = \"HH:mm\";\n\n  const tabCallback = (key: string) => {\n    setActiveTab(key as Tab);\n  };\n\n  const onChange = (start: Date, end: Date, day: WeekdayMap, idx: number) => {\n    const r = cloneObject(ranges) as WeeklySchedule;\n    // update call block\n    r[day][idx] = {\n      start: start.toString(),\n      end: end.toString(),\n      duration: DEFAULT_DURATION_MS,\n      idx,\n      day,\n    };\n    const h = mapCallBlockToCallSlots(r);\n    setCallSlots(mapCallBlockToCallSlots(r));\n    setRanges(r);\n  };\n\n  const handleSubmission = (e: React.MouseEvent) => {\n    updateCallTimes({ callSlots, zone: \"America_LosAngeles\" });\n  };\n  const renderItem = (day: WeekdayMap, ranges: CallBlock[]) => {\n    return (\n      <Space direction=\"vertical\">\n        <Divider orientation=\"left\">{dayOfWeekAsString(day)}</Divider>\n        {/* <Col> */}\n        <Space direction=\"vertical\">\n          {ranges.length > 0 ? (\n            ranges.map((time) => (\n              <RangePicker\n                minuteStep={30}\n                use12Hours={true}\n                defaultValue={[\n                  moment(format(new Date(time.start), dateFormat), dateFormat),\n                  moment(format(new Date(time.end), dateFormat), dateFormat),\n                ]}\n                onChange={(values) => {\n                  if (!values || !values[0] || !values[1]) return;\n                  // TODO with date range picker, convert to right day\n                  onChange(\n                    values[0].toDate(),\n                    values[1].toDate(),\n                    day,\n                    time.idx\n                  );\n                }}\n                format={dateFormat}\n              />\n            ))\n          ) : (\n            <RangePicker\n              format={dateFormat}\n              minuteStep={30}\n              use12Hours={true}\n              onChange={(values) => {\n                if (!values || !values[0] || !values[1]) return;\n                onChange(values[0].toDate(), values[1].toDate(), day, 0);\n              }}\n            />\n          )}\n        </Space>\n        {/* </Col> */}\n      </Space>\n    );\n  };\n\n  return (\n    <Content style={WRAPPER_STYLE}>\n      <Tabs defaultActiveKey={activeTab} onChange={tabCallback}>\n        <TabPane tab=\"General Settings\" key=\"setting\"></TabPane>\n        <TabPane tab=\"Facility Settings\" key=\"facility\"></TabPane>\n        <TabPane tab=\"Call Hours\" key=\"facility\"></TabPane>\n      </Tabs>\n      <Content className=\"main-content-container\">\n        <Space direction=\"vertical\">\n          {WEEKDAYS.map((weekday) => renderItem(weekday, ranges[weekday]))}\n          <Button type=\"primary\" onClick={handleSubmission}>\n            Save Changes\n          </Button>\n        </Space>\n      </Content>\n    </Content>\n  );\n}\n\nexport default connector(SettingsContainer);\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport { RootState } from \"src/redux\";\nimport { connect, ConnectedProps, useSelector } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { fetchCalls, fetchRecording } from \"src/redux/modules/call\";\nimport { selectCallById } from \"src/redux/selectors\";\nimport { Breadcrumb, Layout } from \"antd\";\nimport ReactPlayer from \"react-player\";\nimport PageLoader from \"src/components/loaders/PageLoader\";\nimport { WRAPPER_STYLE } from \"src/utils/constants\";\n\nconst { Content } = Layout;\n\nconst mapStateToProps = (state: RootState) => ({});\n\nconst mapDispatchToProps = { fetchRecording };\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype TParams = { id: string };\n\nfunction RecordingBase({\n  match,\n  fetchRecording,\n}: PropsFromRedux & RouteComponentProps<TParams>): ReactElement {\n  const [callId] = useState(match.params.id);\n\n  const call = useSelector((state: RootState) =>\n    selectCallById(state, callId)\n  ) as RecordedVisitation;\n\n  useEffect(() => {\n    if (call?.videoReady && !call.recordingUrl) {\n      fetchRecording(parseInt(callId));\n    }\n  }, [callId, call, fetchRecording]);\n\n  // if (!call?.recordingUrl) return <PageLoader />;\n\n  return (\n    <Content style={WRAPPER_STYLE}>\n      {/* TODO add more Breadcrumb items once we fetch all nodes for a facility */}\n      <Breadcrumb>\n        <Breadcrumb.Item>Logs</Breadcrumb.Item>\n        <Breadcrumb.Item>Call #{callId}</Breadcrumb.Item>\n      </Breadcrumb>\n      <ReactPlayer\n        autoplay={true}\n        muted={true}\n        controls={true}\n        url={\n          call.recordingUrl ||\n          \"https://test-videos.co.uk/vids/bigbuckbunny/mp4/h264/360/Big_Buck_Bunny_360_10s_1MB.mp4\"\n        }\n      />\n    </Content>\n  );\n}\n\nexport default connector(RecordingBase);\n","import LiveVisitationsPage from \"src/pages/LiveVisitation\";\nimport CalendarPage from \"src/pages/Calendar\";\nimport RequestsPage from \"src/pages/ConnectionRequests\";\nimport LogsPage from \"src/pages/PastVisitations\";\nimport StaffPage from \"src/pages/Staff\";\nimport InmatesPage from \"src/pages/Inmate\";\nimport DashboardPage from \"src/pages/Dashboard\";\nimport SettingsPage from \"src//pages/Settings\";\nimport RecordingPage from \"src/pages/Recording\";\nimport { CallAlert, GridOption } from \"src/typings/Call\";\nimport { Route } from \"src/typings/Common\";\n\nexport enum CardType {\n  LiveVisitation = \"live\",\n  Contact = \"contact\",\n  ConnectionRequest = \"request\",\n  ApprovedConnectioo = \"connection\",\n  Inmate = \"inmate\",\n  Staff = \"staff\",\n  PastVisitation = \"record\",\n}\n\nexport enum CardSize {\n  Small = \"small\",\n  Medium = \"medium\",\n  Large = \"large\",\n}\n\nexport enum LoadingTypes {\n  AcceptConnection = \"accept\",\n  FetchRecording = \"video\",\n}\n\nexport const UNAUTHENTICATED_USER_ID = -999;\n\nexport const TOKEN_KEY = \"apiToken\";\nexport const REMEMBER_TOKEN_KEY = \"rememberToken\";\n\nexport const STAFF_PERMISSION_OPTIONS: Record<Permission, string> = {\n  allowRead: \"Allow Read\",\n  allowCalltimes: \"allowCalltimes\",\n  allowApproval: \"allowApproval\",\n  allowRestructure: \"allowRestructure\",\n  allowMonitor: \"allowMonitor\",\n};\n\nexport enum WeekdayMap {\n  Sunday = 0,\n  Monday = 1,\n  Tuesday = 2,\n  Wednesday = 3,\n  Thursday = 4,\n  Friday = 5,\n  Saturday = 6,\n}\n\nexport const PADDING = 16;\nexport const WRAPPER_STYLE = { padding: PADDING, paddingTop: 0 };\n\nexport const ROUTES: Route[] = [\n  { path: \"/calendar\", component: CalendarPage, label: \"Page\" },\n  { path: \"/requests\", component: RequestsPage, label: \"Connection Requests\" },\n  { path: \"/logs\", component: LogsPage, label: \"Search for Visits\" },\n  { path: \"/staff\", component: StaffPage, label: \"Staff\" },\n  { path: \"/members\", component: InmatesPage, label: \"Inmates\" },\n  { path: \"/visitations\", component: LiveVisitationsPage, label: \"Live Calls\" },\n  { path: \"/settings\", component: SettingsPage, label: \"Settings\" },\n  { path: \"/\", component: DashboardPage, label: \"Dashboard\" },\n  { path: \"/call/:id\", component: RecordingPage, label: \"\" },\n];\n\nexport const WEEKDAYS = [\n  WeekdayMap.Sunday,\n  WeekdayMap.Monday,\n  WeekdayMap.Tuesday,\n  WeekdayMap.Wednesday,\n  WeekdayMap.Thursday,\n  WeekdayMap.Friday,\n  WeekdayMap.Saturday,\n];\n\n// 30 min\nexport const DEFAULT_DURATION_MS = 1800000;\n\nexport const SIDEBAR_WIDTH = 216;\n\nexport const GRID_TO_SPAN_WIDTH: { [key in GridOption]: number } = {\n  1: 24,\n  2: 12,\n  4: 12,\n  6: 8,\n  8: 6,\n};\n\nexport const GRID_TO_VH_HEIGHT: { [key in GridOption]: number } = {\n  1: 80,\n  2: 80,\n  4: 40,\n  6: 40,\n  8: 40,\n};\n\nexport const CALL_ALERTS: CallAlert[] = [\n  {\n    id: 1,\n    title: \"Appropriate clothing\",\n    body:\n      \"Outer garments worn on the bottom half of the body must be no shorter than the knee while standing.\",\n  },\n  {\n    id: 2,\n    title: \"Clothing exposure\",\n    body:\n      \"Outer garments worn on the bottom half of the body must be no shorter than the knee while standing.\",\n  },\n  {\n    id: 3,\n    title: \"Appropriate undergarments\",\n    body:\n      \"Outer garments worn on the bottom half of the body must be no shorter than the knee while standing.\",\n  },\n  {\n    id: 4,\n    title: \"No sheer clothing\",\n    body:\n      \"Outer garments worn on the bottom half of the body must be no shorter than the knee while standing.\",\n  },\n  {\n    id: 5,\n    title: \"Clothing no shorter than knee\",\n    body:\n      \"Outer garments worn on the bottom half of the body must be no shorter than the knee while standing.\",\n  },\n  {\n    id: 6,\n    title: \"Leggings no shorter than knee\",\n    body:\n      \"Outer garments worn on the bottom half of the body must be no shorter than the knee while standing.\",\n  },\n];\n","import React, { ReactElement } from \"react\";\nimport MetricCard from \"src/components/cards/MetricCard\";\nimport Container from \"src/components/containers/Container\";\nimport LineChart from \"src/components/charts/LineChart\";\nimport BarChart from \"src/components/charts/BarChart\";\n\nexport default function Dashboard(): ReactElement {\n  return (\n    <div>\n      <div className=\"d-flex flex-row\">\n        <Container rounded>\n          <MetricCard\n            name=\"Average call duration\"\n            metric={22}\n            growthRate={-0.0696}\n            label=\"min\"\n          />\n        </Container>\n        <Container rounded>\n          <MetricCard\n            name=\"Calls this week\"\n            metric={34}\n            growthRate={-0.0321}\n            label=\"calls\"\n          />\n        </Container>\n        <Container rounded>\n          <MetricCard\n            name=\"Inmate usage\"\n            metric={79}\n            label={\"%\"}\n            growthRate={0.1641}\n          />\n        </Container>\n        <Container rounded>\n          <MetricCard\n            name=\"Average call rating\"\n            metric={4.1}\n            label={\"/5.0\"}\n            growthRate={0.1213}\n          />\n        </Container>\n      </div>\n      <div className=\"d-flex flex-row\">\n        <Container rounded fluid>\n          <LineChart />\n        </Container>\n\n        <Container rounded fluid>\n          <BarChart />\n        </Container>\n      </div>\n    </div>\n  );\n}\n","import { UNAUTHENTICATED_USER_ID } from \"src/utils/constants\";\n\n// Constants & Shapes\nconst SET_SESSION = \"user/SET_SESSION\";\nconst LOGOUT = \"user/LOGOUT\";\n\ninterface SetSessionAction {\n  type: typeof SET_SESSION;\n  payload: SessionState;\n}\ninterface LogoutAction {\n  type: typeof LOGOUT;\n}\n\ntype UserActionTypes = LogoutAction | SetSessionAction;\n\nexport const logout = (): UserActionTypes => {\n  return {\n    type: LOGOUT,\n  };\n};\n\nexport const setSession = (userState: SessionState): UserActionTypes => {\n  return {\n    type: SET_SESSION,\n    payload: userState,\n  };\n};\n\n// Reducer\nconst initialState: SessionState = {\n  authInfo: { apiToken: \"\", rememberToken: \"\" },\n  user: {\n    id: UNAUTHENTICATED_USER_ID,\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n  },\n  isLoggedIn: false,\n};\n\nexport function sessionReducer(\n  state = initialState,\n  action: UserActionTypes\n): SessionState {\n  switch (action.type) {\n    case SET_SESSION:\n      return action.payload;\n    case LOGOUT:\n      //   sessionStorage.clear();\n      return {\n        ...state,\n        authInfo: { apiToken: \"\", rememberToken: \"\" },\n        user: {\n          id: UNAUTHENTICATED_USER_ID,\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n        },\n        isLoggedIn: false,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { visitationsReducer } from \"./modules/visitation\";\nimport { connectionsReducer } from \"./modules/connection_requests\";\nimport { staffSlice } from \"./modules/staff\";\nimport { inmatesSlice } from \"./modules/inmate\";\nimport { sessionReducer } from \"./modules/user\";\nimport { connectionsSlice } from \"./modules/connections\";\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport thunk from \"redux-thunk\";\nimport { contactsSlice } from \"./modules/contact\";\nimport { callsSlice } from \"./modules/call\";\nimport { facilitiesSlice } from \"./modules/facility\";\nimport { connectRouter, routerMiddleware } from \"connected-react-router\";\nimport { History } from \"history\";\nimport { createBrowserHistory } from \"history\";\nimport { socketsSlice } from \"./modules/socket\";\n\nexport const history = createBrowserHistory();\n\nexport const createRootReducer = (history: History) =>\n  combineReducers({\n    visitations: visitationsReducer,\n    requests: connectionsReducer,\n    staff: staffSlice.reducer,\n    session: sessionReducer,\n    inmates: inmatesSlice.reducer,\n    contacts: contactsSlice.reducer,\n    connections: connectionsSlice.reducer,\n    calls: callsSlice.reducer,\n    facilities: facilitiesSlice.reducer,\n    router: connectRouter(history),\n    sockets: socketsSlice.reducer,\n  });\n\nexport const rootReducer = createRootReducer(history);\n\nexport const Store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(routerMiddleware(history)),\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface SocketState {\n  socket?: SocketIOClient.Socket;\n}\n\nconst initialState: SocketState = {};\n\nexport const socketsSlice = createSlice({\n  name: \"socket\",\n  initialState: initialState,\n  reducers: {\n    setSocket: (state, action: PayloadAction<SocketIOClient.Socket>) => ({\n      ...state,\n      socket: action.payload,\n    }),\n  },\n});\n\nexport const socketsActions = socketsSlice.actions;\n","import { API_URL, fetchAuthenticated, fetchTimeout } from \"./Common\";\nimport url from \"url\";\nimport { setSession } from \"src/redux/modules/user\";\nimport { Store } from \"src/redux\";\nimport { REMEMBER_TOKEN_KEY, TOKEN_KEY } from \"src/utils/constants\";\nimport { fetchFacilities } from \"src/redux/modules/facility\";\n\ninterface RawUser {\n  id: number;\n  email: string;\n  first_name: string;\n  last_name: string;\n  addr_line_1: string;\n  addr_line_2: string;\n  city: string;\n  state: string;\n  postal: string;\n  credit: number;\n  coins: number;\n  profile_img_path: string;\n  phone: string;\n  referer: string;\n  country: string;\n  created_at: string;\n  referral_link: string;\n}\n\nfunction cleanUser(user: RawUser): User {\n  return {\n    id: user.id,\n    firstName: user.first_name,\n    lastName: user.last_name,\n    email: user.email,\n    profileImgPath: user.profile_img_path,\n  };\n}\n\nasync function initializeSession(body: any) {\n  const user = cleanUser(body.data as RawUser);\n  const { token: apiToken, remember: rememberToken } = body.data;\n  Store.dispatch(\n    setSession({\n      user,\n      authInfo: { rememberToken, apiToken },\n      isLoggedIn: true,\n    })\n  );\n\n  Store.dispatch(fetchFacilities);\n  // TO\n  localStorage.setItem(TOKEN_KEY, apiToken);\n  localStorage.setItem(REMEMBER_TOKEN_KEY, rememberToken);\n  // loadData();\n}\n\nexport async function loginWithToken(): Promise<void> {\n  try {\n    const rememberToken = await localStorage.getItem(REMEMBER_TOKEN_KEY);\n    if (!rememberToken) {\n      throw Error(\"Cannot load token\");\n    }\n    const response = await fetchTimeout(\n      url.resolve(API_URL, \"auth/login/remember\"),\n      {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          remember: rememberToken,\n        }),\n      }\n    );\n    const body = await response.json();\n    if (body.status !== 200) throw body;\n    await initializeSession(body);\n  } catch (err) {\n    throw Error(err);\n  }\n}\n\nexport async function loginWithCredentials(cred: UserLoginInfo): Promise<void> {\n  const response = await fetchTimeout(url.resolve(API_URL, \"auth/login\"), {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      email: cred.email,\n      password: cred.password,\n    }),\n  });\n  const body = await response.json();\n  if (body.status !== 200) throw body;\n  console.log(body);\n  // const user = cleanUser(body.data as RawUser);\n  // const { token: apiToken, remember: rememberToken } = body.data;\n  // Store.dispatch(\n  //   setSession({\n  //     user,\n  //     authInfo: { rememberToken, apiToken },\n  //     isLoggedIn: true,\n  //   })\n  // );\n  // // TO\n  // localStorage.setItem(TOKEN_KEY, apiToken);\n  // localStorage.setItem(REMEMBER_TOKEN_KEY, rememberToken);\n  await initializeSession(body);\n}\n","import React, { useState, ReactElement } from \"react\";\nimport { RootState } from \"src/redux\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Container from \"src/components/containers/Container\";\n// import { ReactComponent as Operator } from \"src/assets/avatars/bald.svg\";\n// import { ReactComponent as Supervisor } from \"src/assets/avatars/woman.svg\";\n// import { ReactComponent as Admin } from \"src/assets/avatars/professor.svg\";\n// import { ReactComponent as Investigator } from \"src/assets/avatars/investigator.svg\";\n// import { OPERATOR, SUPERVISOR, ADMIN, INVESTIGATOR } from \"src/data/sample\";\n\nimport \"./index.css\";\nimport { Redirect } from \"react-router\";\nimport { loginWithCredentials } from \"src/api/User\";\n\nconst mapStateToProps = (state: RootState) => ({\n  session: state.session,\n});\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nfunction LoginContainer({ session }: PropsFromRedux): ReactElement {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const tryLogin = async (e: React.MouseEvent) => {\n    e.preventDefault();\n    const cred: UserLoginInfo = {\n      email,\n      password,\n      remember: false,\n    };\n    try {\n      await loginWithCredentials(cred);\n    } catch (err) {\n      setError(\"Invalid email or password\");\n    }\n  };\n\n  if (session.isLoggedIn) return <Redirect to=\"/\" />;\n\n  return (\n    <section className=\"login-form m-auto \">\n      <Container>\n        <div className=\"d-flex flex-column\">\n          <span className=\"p2 font-weight-lighter mb-3\">Welcome Back!</span>\n          <Form>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                isInvalid={error !== \"\"}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {error}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                isInvalid={error !== \"\"}\n              />\n            </Form.Group>\n            <Button block type=\"submit\" onClick={tryLogin}>\n              Login\n            </Button>\n          </Form>\n          <span className=\"p6 black-500 mt-3\">\n            {\" \"}\n            Don't have an account? Select one of the test accounts below:\n          </span>\n          {/* <div className=\"d-flex flex-row  justify-content-between mt-3\">\n            <div\n              className=\"px-2 py-3 border rounded d-flex flex-column align-items-center test-account-card\"\n              onClick={(e) => login(OPERATOR)}\n            >\n              <Operator width=\"90\" />\n              <span className=\"p6 mt-2\">Bart</span>\n              <span className=\"p7 font-weight-light\">OPERATOR</span>\n            </div>\n            <div\n              className=\"px-2 py-3 border rounded d-flex flex-column align-items-center test-account-card\"\n              onClick={(e) => login(INVESTIGATOR)}\n            >\n              <Investigator width=\"90\" />\n              <span className=\"p6 mt-2\">Shannon</span>\n              <span className=\"p7 font-weight-light\">INVESTIGATOR</span>\n            </div>\n            <div\n              className=\"px-2 py-3 border rounded d-flex flex-column align-items-center test-account-card\"\n              onClick={(e) => login(SUPERVISOR)}\n            >\n              <Supervisor width=\"90\" />\n              <span className=\"p6 mt-2\">Amber</span>\n              <span className=\"p7 font-weight-light\">SUPERVISOR</span>\n            </div>\n            <div\n              className=\"px-2 py-3 border rounded d-flex flex-column align-items-center test-account-card\"\n              onClick={(e) => login(ADMIN)}\n            >\n              <Admin width=\"90\" />\n              <span className=\"p6 mt-2\">Chris</span>\n              <span className=\"p7 font-weight-light\">ADMIN</span>\n            </div>\n          </div> */}\n        </div>\n      </Container>\n    </section>\n  );\n}\n\nexport default connector(LoginContainer);\n","import * as React from \"react\";\nimport { Redirect, Route, RouteProps } from \"react-router\";\n\nexport interface ProtectedRouteProps extends RouteProps {\n  isAuthenticated: boolean;\n  // isAllowed: boolean;\n  // restrictedPath: string;\n  authenticationPath: string;\n}\n\nexport const ProtectedRoute: React.FC<ProtectedRouteProps> = (props) => {\n  let redirectPath = \"\";\n  if (!props.isAuthenticated) {\n    redirectPath = props.authenticationPath;\n  }\n  // if (props.isAuthenticated && props.path) {\n  //   redirectPath = props.restrictedPath;\n  // }\n\n  if (redirectPath) {\n    const renderComponent = () => <Redirect to={{ pathname: redirectPath }} />;\n    return <Route {...props} component={renderComponent} render={undefined} />;\n  } else {\n    return <Route {...props} />;\n  }\n};\n\nexport default ProtectedRoute;\n","import React, { ReactElement, useState } from \"react\";\nimport {\n  Layout,\n  Menu as AntdMenu,\n  Row,\n  Col,\n  Select,\n  Avatar,\n  Space,\n  Dropdown,\n} from \"antd\";\nimport {\n  DesktopOutlined,\n  PieChartOutlined,\n  FileOutlined,\n  TeamOutlined,\n  UserOutlined,\n  SettingOutlined,\n  UserAddOutlined,\n  DownOutlined,\n} from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { RootState } from \"src/redux\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { logout } from \"src/redux/modules/user\";\nimport { Facility, SelectedFacility } from \"src/typings/Node\";\nimport \"./Menu.css\";\nimport { genFullName, getInitials, generateBgColor } from \"src/utils/utils\";\nimport { SIDEBAR_WIDTH } from \"src/utils/constants\";\n\nconst { Option } = Select;\n\nconst { Sider } = Layout;\nconst { SubMenu } = AntdMenu;\n\ninterface Props {\n  session: SessionState;\n  selected: SelectedFacility;\n  facilities: Facility[];\n  logout: () => void;\n  select: (facility: Facility) => void;\n}\n\nconst FacilityAvatar = ({ facility }: { facility: Facility }): JSX.Element => (\n  <Avatar\n    size=\"large\"\n    shape=\"square\"\n    style={{ backgroundColor: generateBgColor(facility.name) }}\n  >\n    {getInitials(facility.name)}\n  </Avatar>\n);\n\nexport default function Menu({\n  session,\n  selected,\n  facilities,\n  select,\n  logout,\n}: Props): ReactElement {\n  const [collapsed, setCollapsed] = useState<boolean>(false);\n  const history = useHistory();\n  if (!session.isLoggedIn) return <div />;\n\n  const headerMenu = (\n    <AntdMenu>\n      <SubMenu key=\"sub2\" title=\"Switch Organization\">\n        {facilities.map((facility) => (\n          <AntdMenu.Item onClick={() => select(facility)}>\n            <Space>\n              <FacilityAvatar facility={facility} />\n              <span>{facility.name}</span>\n            </Space>\n          </AntdMenu.Item>\n        ))}\n      </SubMenu>\n      <AntdMenu.Item>\n        <span onClick={() => logout()}>Log out</span>\n      </AntdMenu.Item>\n    </AntdMenu>\n  );\n\n  return (\n    <Sider\n      collapsible\n      collapsed={collapsed}\n      onCollapse={(collapsed) => setCollapsed(collapsed)}\n      width={SIDEBAR_WIDTH}\n    >\n      <Dropdown overlay={headerMenu}>\n        <Space align=\"center\" className=\"menu-header\">\n          <FacilityAvatar facility={selected} />\n          {!collapsed && (\n            <Space direction=\"vertical\" size={0}>\n              <Space align=\"center\">\n                <span className=\"menu-header-facility\">{selected.name}</span>\n                <DownOutlined style={{ color: \"white\" }} />\n              </Space>\n              <span className=\"menu-header-name\">\n                {genFullName(session.user)}\n              </span>\n            </Space>\n          )}\n        </Space>\n      </Dropdown>\n\n      {/* </div> */}\n      <AntdMenu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\">\n        <AntdMenu.Item\n          key=\"dash\"\n          icon={<PieChartOutlined />}\n          onClick={() => history.push(\"/\")}\n        >\n          Dashboard\n        </AntdMenu.Item>\n        <AntdMenu.Item\n          key=\"live\"\n          icon={<DesktopOutlined />}\n          onClick={() => history.push(\"/visitations\")}\n        >\n          Live Video Calls\n        </AntdMenu.Item>\n        <AntdMenu.Item\n          key=\"requests\"\n          icon={<UserAddOutlined />}\n          onClick={() => history.push(\"/requests\")}\n        >\n          Approval Requests\n        </AntdMenu.Item>\n        <AntdMenu.Item\n          key=\"search\"\n          icon={<UserAddOutlined />}\n          onClick={() => history.push(\"/logs\")}\n        >\n          Search for Visits\n        </AntdMenu.Item>\n        <AntdMenu.Item\n          key=\"staff\"\n          icon={<TeamOutlined />}\n          onClick={() => history.push(\"/staff\")}\n        >\n          Staff\n        </AntdMenu.Item>\n        <AntdMenu.Item\n          key=\"members\"\n          icon={<TeamOutlined />}\n          onClick={() => history.push(\"/members\")}\n        >\n          Members\n        </AntdMenu.Item>\n\n        <AntdMenu.Item\n          key=\"settings\"\n          icon={<SettingOutlined />}\n          onClick={() => history.push(\"/settings\")}\n        >\n          Settings\n        </AntdMenu.Item>\n      </AntdMenu>\n    </Sider>\n  );\n}\n","import { Avatar } from \"antd\";\nimport React from \"react\";\nimport { generateBgColor, getInitials } from \"src/utils/utils\";\n\ninterface Props {\n  name: string;\n  size: \"large\" | \"small\" | \"default\";\n  shape: \"square\" | \"circle\";\n}\nexport const InitialsAvatar = ({ name, size, shape }: Props): JSX.Element => (\n  <Avatar\n    size={size}\n    shape={shape}\n    style={{ backgroundColor: generateBgColor(name) }}\n  >\n    {getInitials(name)}\n  </Avatar>\n);\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.scss\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport LiveVisitation from \"./pages/LiveVisitation\";\nimport CalendarView from \"./pages/Calendar\";\nimport ConnectionRequests from \"./pages/ConnectionRequests\";\nimport Logs from \"./pages/PastVisitations\";\nimport Staff from \"./pages/Staff\";\nimport Inmate from \"./pages/Inmate\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Settings from \"./pages/Settings\";\nimport Login from \"./pages/Login\";\nimport { RootState } from \"src/redux\";\nimport { connect, ConnectedProps, useSelector } from \"react-redux\";\nimport ProtectedRoute, {\n  ProtectedRouteProps,\n} from \"./components/hocs/ProtectedRoute\";\nimport { loginWithToken } from \"./api/User\";\nimport Menu from \"./components/headers/Menu\";\nimport { Avatar, Layout, PageHeader } from \"antd\";\nimport { logout } from \"src/redux/modules/user\";\nimport { Footer } from \"antd/lib/layout/layout\";\nimport { fetchFacilities } from \"./redux/modules/facility\";\nimport { selectAllFacilities } from \"./redux/selectors\";\nimport { selectActiveFacility } from \"src/redux/modules/facility\";\nimport { initializeAppData } from \"./api/Common\";\n// import { useHistory } from \"react-router-dom\";\nimport { ROUTES } from \"./utils/constants\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { History } from \"history\";\nimport Icon, { BellFilled, BellOutlined, BulbFilled } from \"@ant-design/icons\";\nimport { InitialsAvatar } from \"./components/avatar/InitialsAvatar\";\nimport { genFullName } from \"./utils/utils\";\n\nconst mapStateToProps = (state: RootState) => ({\n  session: state.session,\n  selected: state.facilities.selected,\n  pathname: state.router.location,\n});\nconst mapDispatchToProps = { logout, fetchFacilities, selectActiveFacility };\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nfunction App({\n  session,\n  selected,\n  pathname,\n  selectActiveFacility,\n  logout,\n  fetchFacilities,\n  history,\n}: PropsFromRedux & { history: History }) {\n  const defaultProtectedRouteProps: ProtectedRouteProps = {\n    isAuthenticated: session.authInfo.apiToken !== \"\", // TODO: improve this later\n    authenticationPath: \"/login\",\n  };\n\n  const facilities = useSelector(selectAllFacilities);\n  // const history = useHistory();\n  const [header, setHeader] = useState(\"\");\n\n  useEffect(() => {\n    // localStorage.setItem(\"debug\", \"*\");\n    localStorage.removeItem(\"debug\");\n    (async () => {\n      try {\n        await loginWithToken();\n        await fetchFacilities();\n        // await loadData();\n      } catch (err) {}\n    })();\n  }, [fetchFacilities]);\n\n  useEffect(() => {\n    if (selected) {\n      (async () => await initializeAppData())();\n    }\n  }, [selected]);\n\n  useEffect(() => {\n    const route = ROUTES.find((route) => route.path === pathname.pathname);\n    if (route) setHeader(route.label);\n  }, [pathname]);\n\n  return (\n    <ConnectedRouter history={history}>\n      <Layout style={{ minHeight: \"100vh\" }}>\n        {selected && (\n          <Menu\n            session={session}\n            logout={logout}\n            selected={selected}\n            facilities={facilities}\n            select={(facility) => selectActiveFacility(facility)}\n          />\n        )}\n        <Layout>\n          <PageHeader\n            title={header}\n            extra={[\n              <BellFilled key=\"bell\" />,\n              <BulbFilled key=\"bulb\" />,\n              <InitialsAvatar\n                name={genFullName(session.user)}\n                size=\"default\"\n                shape=\"circle\"\n                key=\"avatar\"\n              />,\n            ]}\n          />\n          <Switch>\n            <Route exact path=\"/login\" component={Login}></Route>\n            {ROUTES.map((route) => (\n              <ProtectedRoute\n                exact\n                {...defaultProtectedRouteProps}\n                path={route.path}\n                component={route.component}\n                key={route.label}\n              ></ProtectedRoute>\n            ))}\n          </Switch>\n          <Footer style={{ textAlign: \"center\" }}>\n            Connect ©2021 Created by Ameelio Inc.\n          </Footer>\n        </Layout>\n      </Layout>\n    </ConnectedRouter>\n  );\n}\n\nexport default connector(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { history, Store } from \"./redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <App history={history} />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}